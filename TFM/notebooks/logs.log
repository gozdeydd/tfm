2023-05-13 22:29:42,280:INFO:PyCaret Supervised Module
2023-05-13 22:29:42,280:INFO:ML Usecase: classification
2023-05-13 22:29:42,280:INFO:version 2.2.3
2023-05-13 22:29:42,281:INFO:Initializing setup()
2023-05-13 22:29:42,281:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-13 22:29:42,281:INFO:Checking environment
2023-05-13 22:29:42,281:INFO:python_version: 3.9.16
2023-05-13 22:29:42,281:INFO:python_build: ('main', 'Mar  8 2023 14:00:05')
2023-05-13 22:29:42,281:INFO:machine: x86_64
2023-05-13 22:29:42,281:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.35
2023-05-13 22:29:42,281:INFO:Memory: svmem(total=16378351616, available=4348829696, percent=73.4, used=10621128704, free=319057920, active=6082416640, inactive=8503148544, buffers=217010176, cached=5221154816, shared=1007050752, slab=760262656)
2023-05-13 22:29:42,282:INFO:Physical Core: 10
2023-05-13 22:29:42,282:INFO:Logical Core: 16
2023-05-13 22:29:42,283:INFO:Checking libraries
2023-05-13 22:29:42,283:INFO:pd==1.5.3
2023-05-13 22:29:42,283:INFO:numpy==1.23.5
2023-05-13 22:29:42,283:INFO:sklearn==0.23.2
2023-05-13 22:29:42,317:INFO:xgboost==1.7.3
2023-05-13 22:29:42,318:INFO:lightgbm==3.3.5
2023-05-13 22:29:42,391:INFO:catboost==1.0.6
2023-05-13 22:29:43,177:INFO:mlflow==2.3.1
2023-05-13 22:29:43,177:INFO:Checking Exceptions
2023-05-13 22:29:43,177:INFO:Declaring global variables
2023-05-13 22:29:43,177:INFO:USI: 6675
2023-05-13 22:29:43,177:INFO:pycaret_globals: {'_all_models', 'X_test', 'USI', 'html_param', 'fold_shuffle_param', 'log_plots_param', '_all_metrics', 'fold_groups_param', '_ml_usecase', 'n_jobs_param', 'logging_param', '_gpu_n_jobs_param', 'transform_target_method_param', 'iterative_imputation_iters_param', 'y', 'y_train', 'experiment__', '_internal_pipeline', 'imputation_regressor', 'target_param', 'data_before_preprocess', 'y_test', 'seed', 'display_container', 'fold_param', 'master_model_container', '_available_plots', 'prep_pipe', 'fix_imbalance_param', 'imputation_classifier', 'X', 'gpu_param', 'exp_name_log', 'fold_generator', 'transform_target_param', 'fix_imbalance_method_param', 'X_train', '_all_models_internal', 'stratify_param', 'create_model_container', 'pycaret_globals'}
2023-05-13 22:29:43,177:INFO:Preparing display monitor
2023-05-13 22:29:43,177:INFO:Preparing display monitor
2023-05-13 22:29:43,184:INFO:Importing libraries
2023-05-13 22:29:43,184:INFO:Copying data for preprocessing
2023-05-13 22:29:43,214:INFO:Declaring preprocessing parameters
2023-05-13 22:29:43,227:INFO:Creating preprocessing pipeline
2023-05-13 22:29:43,344:INFO:Preprocessing pipeline created successfully
2023-05-13 22:29:43,344:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-13 22:29:43,344:INFO:Creating global containers
2023-05-13 22:29:43,345:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-05-13 22:32:43,735:INFO:PyCaret Supervised Module
2023-05-13 22:32:43,735:INFO:ML Usecase: classification
2023-05-13 22:32:43,735:INFO:version 2.2.3
2023-05-13 22:32:43,735:INFO:Initializing setup()
2023-05-13 22:32:43,735:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-13 22:32:43,736:INFO:Checking environment
2023-05-13 22:32:43,736:INFO:python_version: 3.9.16
2023-05-13 22:32:43,736:INFO:python_build: ('main', 'Mar  8 2023 14:00:05')
2023-05-13 22:32:43,736:INFO:machine: x86_64
2023-05-13 22:32:43,736:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.35
2023-05-13 22:32:43,737:INFO:Memory: svmem(total=16378351616, available=4865323008, percent=70.3, used=10115952640, free=641507328, active=6233808896, inactive=8002326528, buffers=217817088, cached=5403074560, shared=1046061056, slab=760328192)
2023-05-13 22:32:43,739:INFO:Physical Core: 10
2023-05-13 22:32:43,739:INFO:Logical Core: 16
2023-05-13 22:32:43,739:INFO:Checking libraries
2023-05-13 22:32:43,739:INFO:pd==1.5.3
2023-05-13 22:32:43,739:INFO:numpy==1.23.5
2023-05-13 22:32:43,739:INFO:sklearn==0.23.2
2023-05-13 22:32:43,755:INFO:xgboost==1.7.3
2023-05-13 22:32:43,755:INFO:lightgbm==3.3.5
2023-05-13 22:32:43,767:INFO:catboost==1.0.6
2023-05-13 22:32:43,995:INFO:mlflow==2.3.1
2023-05-13 22:32:43,995:INFO:Checking Exceptions
2023-05-13 22:32:43,995:INFO:Declaring global variables
2023-05-13 22:32:43,995:INFO:USI: a035
2023-05-13 22:32:43,995:INFO:pycaret_globals: {'X_test', 'html_param', 'exp_name_log', '_ml_usecase', 'y_train', '_all_metrics', 'pycaret_globals', 'gpu_param', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'target_param', 'master_model_container', '_all_models', 'fold_shuffle_param', 'stratify_param', 'USI', 'seed', 'experiment__', 'transform_target_param', 'X', 'imputation_classifier', '_available_plots', 'display_container', 'log_plots_param', '_gpu_n_jobs_param', 'imputation_regressor', 'create_model_container', 'logging_param', 'n_jobs_param', 'fold_groups_param', 'y_test', '_internal_pipeline', 'X_train', 'data_before_preprocess', 'fold_param', 'transform_target_method_param', 'fix_imbalance_param', 'fold_generator', 'y', '_all_models_internal', 'prep_pipe'}
2023-05-13 22:32:43,995:INFO:Preparing display monitor
2023-05-13 22:32:43,995:INFO:Preparing display monitor
2023-05-13 22:32:44,002:INFO:Importing libraries
2023-05-13 22:32:44,002:INFO:Copying data for preprocessing
2023-05-13 22:32:44,030:INFO:Declaring preprocessing parameters
2023-05-13 22:32:44,044:INFO:Creating preprocessing pipeline
2023-05-13 22:32:44,148:INFO:Preprocessing pipeline created successfully
2023-05-13 22:32:44,148:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-13 22:32:44,148:INFO:Creating global containers
2023-05-13 22:32:44,149:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-05-13 22:42:54,851:INFO:PyCaret Supervised Module
2023-05-13 22:42:54,863:INFO:ML Usecase: classification
2023-05-13 22:42:54,863:INFO:version 2.2.3
2023-05-13 22:42:54,863:INFO:Initializing setup()
2023-05-13 22:42:54,863:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-13 22:42:54,863:INFO:Checking environment
2023-05-13 22:42:54,863:INFO:python_version: 3.9.16
2023-05-13 22:42:54,863:INFO:python_build: ('main', 'Mar  8 2023 14:00:05')
2023-05-13 22:42:54,863:INFO:machine: x86_64
2023-05-13 22:42:54,863:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.35
2023-05-13 22:42:54,864:INFO:Memory: svmem(total=16378351616, available=5327147008, percent=67.5, used=9692598272, free=3768602624, active=5960994816, inactive=5298384896, buffers=197980160, cached=2719170560, shared=1005621248, slab=724369408)
2023-05-13 22:42:54,865:INFO:Physical Core: 10
2023-05-13 22:42:54,865:INFO:Logical Core: 16
2023-05-13 22:42:54,865:INFO:Checking libraries
2023-05-13 22:42:54,865:INFO:pd==1.5.3
2023-05-13 22:42:54,865:INFO:numpy==1.23.5
2023-05-13 22:42:54,866:INFO:sklearn==0.23.2
2023-05-13 22:42:54,905:INFO:xgboost==1.7.3
2023-05-13 22:42:54,905:INFO:lightgbm==3.3.5
2023-05-13 22:42:54,986:INFO:catboost==1.0.6
2023-05-13 22:42:55,232:INFO:mlflow==2.3.1
2023-05-13 22:42:55,233:INFO:Checking Exceptions
2023-05-13 22:42:55,233:INFO:Declaring global variables
2023-05-13 22:42:55,233:INFO:USI: 69e7
2023-05-13 22:42:55,233:INFO:pycaret_globals: {'_internal_pipeline', 'X', 'create_model_container', 'experiment__', 'fold_shuffle_param', 'X_test', 'target_param', 'y_train', 'fold_groups_param', 'stratify_param', 'display_container', 'gpu_param', 'pycaret_globals', 'log_plots_param', 'transform_target_param', 'master_model_container', 'data_before_preprocess', '_all_models', '_available_plots', 'seed', '_ml_usecase', 'imputation_regressor', '_all_models_internal', 'fold_generator', 'logging_param', 'prep_pipe', 'X_train', 'n_jobs_param', 'USI', '_all_metrics', 'fix_imbalance_method_param', 'fix_imbalance_param', 'fold_param', 'iterative_imputation_iters_param', 'y_test', 'transform_target_method_param', 'html_param', '_gpu_n_jobs_param', 'imputation_classifier', 'y', 'exp_name_log'}
2023-05-13 22:42:55,233:INFO:Preparing display monitor
2023-05-13 22:42:55,233:INFO:Preparing display monitor
2023-05-13 22:42:55,240:INFO:Importing libraries
2023-05-13 22:42:55,240:INFO:Copying data for preprocessing
2023-05-13 22:42:55,270:INFO:Declaring preprocessing parameters
2023-05-13 22:42:55,286:INFO:Creating preprocessing pipeline
2023-05-13 22:42:55,396:INFO:Preprocessing pipeline created successfully
2023-05-13 22:42:55,397:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-13 22:42:55,397:INFO:Creating global containers
2023-05-13 22:42:55,409:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-05-19 13:23:59,819:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 13:23:59,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 13:23:59,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 13:23:59,820:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 13:24:00,053:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-19 13:30:30,410:INFO:PyCaret ClassificationExperiment
2023-05-19 13:30:30,410:INFO:Logging name: clf-default-name
2023-05-19 13:30:30,410:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 13:30:30,410:INFO:version 3.0.2
2023-05-19 13:30:30,410:INFO:Initializing setup()
2023-05-19 13:30:30,410:INFO:self.USI: f8a0
2023-05-19 13:30:30,410:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 13:30:30,410:INFO:Checking environment
2023-05-19 13:30:30,410:INFO:python_version: 3.8.16
2023-05-19 13:30:30,410:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 13:30:30,410:INFO:machine: x86_64
2023-05-19 13:30:30,410:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:30:30,411:INFO:Memory: svmem(total=16378347520, available=5429350400, percent=66.9, used=9785495552, free=482791424, active=6508990464, inactive=7759364096, buffers=508788736, cached=5601271808, shared=812376064, slab=986058752)
2023-05-19 13:30:30,411:INFO:Physical Core: 10
2023-05-19 13:30:30,411:INFO:Logical Core: 16
2023-05-19 13:30:30,411:INFO:Checking libraries
2023-05-19 13:30:30,411:INFO:System:
2023-05-19 13:30:30,412:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 13:30:30,412:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 13:30:30,412:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:30:30,412:INFO:PyCaret required dependencies:
2023-05-19 13:30:30,412:INFO:                 pip: 23.0.1
2023-05-19 13:30:30,412:INFO:          setuptools: 66.0.0
2023-05-19 13:30:30,412:INFO:             pycaret: 3.0.2
2023-05-19 13:30:30,412:INFO:             IPython: 8.12.2
2023-05-19 13:30:30,412:INFO:          ipywidgets: 8.0.6
2023-05-19 13:30:30,412:INFO:                tqdm: 4.65.0
2023-05-19 13:30:30,412:INFO:               numpy: 1.23.5
2023-05-19 13:30:30,412:INFO:              pandas: 1.5.3
2023-05-19 13:30:30,412:INFO:              jinja2: 3.1.2
2023-05-19 13:30:30,412:INFO:               scipy: 1.10.1
2023-05-19 13:30:30,412:INFO:              joblib: 1.2.0
2023-05-19 13:30:30,412:INFO:             sklearn: 1.2.2
2023-05-19 13:30:30,412:INFO:                pyod: 1.0.9
2023-05-19 13:30:30,412:INFO:            imblearn: 0.10.1
2023-05-19 13:30:30,412:INFO:   category_encoders: 2.6.1
2023-05-19 13:30:30,412:INFO:            lightgbm: 3.3.5
2023-05-19 13:30:30,412:INFO:               numba: 0.57.0
2023-05-19 13:30:30,412:INFO:            requests: 2.29.0
2023-05-19 13:30:30,412:INFO:          matplotlib: 3.7.1
2023-05-19 13:30:30,412:INFO:          scikitplot: 0.3.7
2023-05-19 13:30:30,412:INFO:         yellowbrick: 1.5
2023-05-19 13:30:30,412:INFO:              plotly: 5.14.1
2023-05-19 13:30:30,412:INFO:             kaleido: 0.2.1
2023-05-19 13:30:30,412:INFO:         statsmodels: 0.14.0
2023-05-19 13:30:30,412:INFO:              sktime: 0.17.0
2023-05-19 13:30:30,412:INFO:               tbats: 1.1.3
2023-05-19 13:30:30,412:INFO:            pmdarima: 2.0.3
2023-05-19 13:30:30,412:INFO:              psutil: 5.9.0
2023-05-19 13:30:30,412:INFO:PyCaret optional dependencies:
2023-05-19 13:30:30,426:INFO:                shap: Not installed
2023-05-19 13:30:30,426:INFO:           interpret: Not installed
2023-05-19 13:30:30,426:INFO:                umap: Not installed
2023-05-19 13:30:30,426:INFO:    pandas_profiling: Not installed
2023-05-19 13:30:30,426:INFO:  explainerdashboard: Not installed
2023-05-19 13:30:30,426:INFO:             autoviz: Not installed
2023-05-19 13:30:30,426:INFO:           fairlearn: Not installed
2023-05-19 13:30:30,426:INFO:             xgboost: Not installed
2023-05-19 13:30:30,426:INFO:            catboost: Not installed
2023-05-19 13:30:30,426:INFO:              kmodes: Not installed
2023-05-19 13:30:30,426:INFO:             mlxtend: Not installed
2023-05-19 13:30:30,426:INFO:       statsforecast: Not installed
2023-05-19 13:30:30,426:INFO:        tune_sklearn: Not installed
2023-05-19 13:30:30,426:INFO:                 ray: Not installed
2023-05-19 13:30:30,426:INFO:            hyperopt: Not installed
2023-05-19 13:30:30,426:INFO:              optuna: Not installed
2023-05-19 13:30:30,426:INFO:               skopt: Not installed
2023-05-19 13:30:30,426:INFO:              mlflow: Not installed
2023-05-19 13:30:30,426:INFO:              gradio: Not installed
2023-05-19 13:30:30,426:INFO:             fastapi: Not installed
2023-05-19 13:30:30,426:INFO:             uvicorn: Not installed
2023-05-19 13:30:30,426:INFO:              m2cgen: Not installed
2023-05-19 13:30:30,426:INFO:           evidently: Not installed
2023-05-19 13:30:30,426:INFO:               fugue: Not installed
2023-05-19 13:30:30,426:INFO:           streamlit: Not installed
2023-05-19 13:30:30,426:INFO:             prophet: Not installed
2023-05-19 13:30:30,426:INFO:None
2023-05-19 13:30:30,426:INFO:Set up data.
2023-05-19 13:30:30,509:INFO:Set up train/test split.
2023-05-19 13:30:30,562:INFO:Set up index.
2023-05-19 13:30:30,563:INFO:Set up folding strategy.
2023-05-19 13:30:30,563:INFO:Assigning column types.
2023-05-19 13:30:30,585:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 13:30:30,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,691:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 13:30:30,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:30:30,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,768:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 13:30:30,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:30:30,851:INFO:Preparing preprocessing pipeline...
2023-05-19 13:30:30,867:INFO:Set up label encoding.
2023-05-19 13:30:30,867:INFO:Set up simple imputation.
2023-05-19 13:30:30,888:INFO:Set up encoding of ordinal features.
2023-05-19 13:30:30,909:INFO:Set up encoding of categorical features.
2023-05-19 13:30:30,910:INFO:Set up feature normalization.
2023-05-19 13:31:24,708:INFO:PyCaret ClassificationExperiment
2023-05-19 13:31:24,708:INFO:Logging name: clf-default-name
2023-05-19 13:31:24,708:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 13:31:24,708:INFO:version 3.0.2
2023-05-19 13:31:24,708:INFO:Initializing setup()
2023-05-19 13:31:24,708:INFO:self.USI: f33e
2023-05-19 13:31:24,708:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 13:31:24,708:INFO:Checking environment
2023-05-19 13:31:24,708:INFO:python_version: 3.8.16
2023-05-19 13:31:24,708:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 13:31:24,708:INFO:machine: x86_64
2023-05-19 13:31:24,708:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:31:24,708:INFO:Memory: svmem(total=16378347520, available=5114773504, percent=68.8, used=10059341824, free=172040192, active=6522961920, inactive=8062574592, buffers=509341696, cached=5637623808, shared=853041152, slab=986234880)
2023-05-19 13:31:24,709:INFO:Physical Core: 10
2023-05-19 13:31:24,709:INFO:Logical Core: 16
2023-05-19 13:31:24,709:INFO:Checking libraries
2023-05-19 13:31:24,709:INFO:System:
2023-05-19 13:31:24,709:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 13:31:24,709:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 13:31:24,709:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:31:24,709:INFO:PyCaret required dependencies:
2023-05-19 13:31:24,709:INFO:                 pip: 23.0.1
2023-05-19 13:31:24,709:INFO:          setuptools: 66.0.0
2023-05-19 13:31:24,709:INFO:             pycaret: 3.0.2
2023-05-19 13:31:24,709:INFO:             IPython: 8.12.2
2023-05-19 13:31:24,709:INFO:          ipywidgets: 8.0.6
2023-05-19 13:31:24,709:INFO:                tqdm: 4.65.0
2023-05-19 13:31:24,709:INFO:               numpy: 1.23.5
2023-05-19 13:31:24,709:INFO:              pandas: 1.5.3
2023-05-19 13:31:24,709:INFO:              jinja2: 3.1.2
2023-05-19 13:31:24,709:INFO:               scipy: 1.10.1
2023-05-19 13:31:24,709:INFO:              joblib: 1.2.0
2023-05-19 13:31:24,709:INFO:             sklearn: 1.2.2
2023-05-19 13:31:24,709:INFO:                pyod: 1.0.9
2023-05-19 13:31:24,709:INFO:            imblearn: 0.10.1
2023-05-19 13:31:24,709:INFO:   category_encoders: 2.6.1
2023-05-19 13:31:24,709:INFO:            lightgbm: 3.3.5
2023-05-19 13:31:24,709:INFO:               numba: 0.57.0
2023-05-19 13:31:24,709:INFO:            requests: 2.29.0
2023-05-19 13:31:24,709:INFO:          matplotlib: 3.7.1
2023-05-19 13:31:24,709:INFO:          scikitplot: 0.3.7
2023-05-19 13:31:24,709:INFO:         yellowbrick: 1.5
2023-05-19 13:31:24,709:INFO:              plotly: 5.14.1
2023-05-19 13:31:24,709:INFO:             kaleido: 0.2.1
2023-05-19 13:31:24,709:INFO:         statsmodels: 0.14.0
2023-05-19 13:31:24,709:INFO:              sktime: 0.17.0
2023-05-19 13:31:24,709:INFO:               tbats: 1.1.3
2023-05-19 13:31:24,709:INFO:            pmdarima: 2.0.3
2023-05-19 13:31:24,709:INFO:              psutil: 5.9.0
2023-05-19 13:31:24,709:INFO:PyCaret optional dependencies:
2023-05-19 13:31:24,709:INFO:                shap: Not installed
2023-05-19 13:31:24,709:INFO:           interpret: Not installed
2023-05-19 13:31:24,709:INFO:                umap: Not installed
2023-05-19 13:31:24,709:INFO:    pandas_profiling: Not installed
2023-05-19 13:31:24,709:INFO:  explainerdashboard: Not installed
2023-05-19 13:31:24,709:INFO:             autoviz: Not installed
2023-05-19 13:31:24,709:INFO:           fairlearn: Not installed
2023-05-19 13:31:24,709:INFO:             xgboost: Not installed
2023-05-19 13:31:24,709:INFO:            catboost: Not installed
2023-05-19 13:31:24,709:INFO:              kmodes: Not installed
2023-05-19 13:31:24,709:INFO:             mlxtend: Not installed
2023-05-19 13:31:24,709:INFO:       statsforecast: Not installed
2023-05-19 13:31:24,709:INFO:        tune_sklearn: Not installed
2023-05-19 13:31:24,709:INFO:                 ray: Not installed
2023-05-19 13:31:24,709:INFO:            hyperopt: Not installed
2023-05-19 13:31:24,709:INFO:              optuna: Not installed
2023-05-19 13:31:24,709:INFO:               skopt: Not installed
2023-05-19 13:31:24,709:INFO:              mlflow: Not installed
2023-05-19 13:31:24,710:INFO:              gradio: Not installed
2023-05-19 13:31:24,710:INFO:             fastapi: Not installed
2023-05-19 13:31:24,710:INFO:             uvicorn: Not installed
2023-05-19 13:31:24,710:INFO:              m2cgen: Not installed
2023-05-19 13:31:24,710:INFO:           evidently: Not installed
2023-05-19 13:31:24,710:INFO:               fugue: Not installed
2023-05-19 13:31:24,710:INFO:           streamlit: Not installed
2023-05-19 13:31:24,710:INFO:             prophet: Not installed
2023-05-19 13:31:24,710:INFO:None
2023-05-19 13:31:24,710:INFO:Set up data.
2023-05-19 13:31:24,772:INFO:Set up train/test split.
2023-05-19 13:31:24,818:INFO:Set up index.
2023-05-19 13:31:24,820:INFO:Set up folding strategy.
2023-05-19 13:31:24,820:INFO:Assigning column types.
2023-05-19 13:31:24,826:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 13:31:24,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,848:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,884:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,884:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,899:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 13:31:24,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,961:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:31:24,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:24,977:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 13:31:25,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:25,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:25,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:25,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:31:25,054:INFO:Preparing preprocessing pipeline...
2023-05-19 13:31:25,055:INFO:Set up label encoding.
2023-05-19 13:31:25,055:INFO:Set up simple imputation.
2023-05-19 13:31:25,068:INFO:Set up encoding of ordinal features.
2023-05-19 13:31:25,073:INFO:Set up encoding of categorical features.
2023-05-19 13:31:25,074:INFO:Set up feature normalization.
2023-05-19 13:32:51,191:INFO:PyCaret ClassificationExperiment
2023-05-19 13:32:51,191:INFO:Logging name: clf-default-name
2023-05-19 13:32:51,191:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 13:32:51,191:INFO:version 3.0.2
2023-05-19 13:32:51,191:INFO:Initializing setup()
2023-05-19 13:32:51,191:INFO:self.USI: 76ed
2023-05-19 13:32:51,191:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 13:32:51,191:INFO:Checking environment
2023-05-19 13:32:51,191:INFO:python_version: 3.8.16
2023-05-19 13:32:51,191:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 13:32:51,191:INFO:machine: x86_64
2023-05-19 13:32:51,191:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:32:51,191:INFO:Memory: svmem(total=16378347520, available=4993392640, percent=69.5, used=10179588096, free=192270336, active=6539177984, inactive=8008982528, buffers=506474496, cached=5500014592, shared=854282240, slab=982831104)
2023-05-19 13:32:51,192:INFO:Physical Core: 10
2023-05-19 13:32:51,192:INFO:Logical Core: 16
2023-05-19 13:32:51,192:INFO:Checking libraries
2023-05-19 13:32:51,192:INFO:System:
2023-05-19 13:32:51,192:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 13:32:51,192:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 13:32:51,192:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 13:32:51,192:INFO:PyCaret required dependencies:
2023-05-19 13:32:51,192:INFO:                 pip: 23.0.1
2023-05-19 13:32:51,192:INFO:          setuptools: 66.0.0
2023-05-19 13:32:51,192:INFO:             pycaret: 3.0.2
2023-05-19 13:32:51,192:INFO:             IPython: 8.12.2
2023-05-19 13:32:51,192:INFO:          ipywidgets: 8.0.6
2023-05-19 13:32:51,192:INFO:                tqdm: 4.65.0
2023-05-19 13:32:51,192:INFO:               numpy: 1.23.5
2023-05-19 13:32:51,192:INFO:              pandas: 1.5.3
2023-05-19 13:32:51,192:INFO:              jinja2: 3.1.2
2023-05-19 13:32:51,192:INFO:               scipy: 1.10.1
2023-05-19 13:32:51,192:INFO:              joblib: 1.2.0
2023-05-19 13:32:51,192:INFO:             sklearn: 1.2.2
2023-05-19 13:32:51,192:INFO:                pyod: 1.0.9
2023-05-19 13:32:51,192:INFO:            imblearn: 0.10.1
2023-05-19 13:32:51,192:INFO:   category_encoders: 2.6.1
2023-05-19 13:32:51,192:INFO:            lightgbm: 3.3.5
2023-05-19 13:32:51,192:INFO:               numba: 0.57.0
2023-05-19 13:32:51,192:INFO:            requests: 2.29.0
2023-05-19 13:32:51,192:INFO:          matplotlib: 3.7.1
2023-05-19 13:32:51,192:INFO:          scikitplot: 0.3.7
2023-05-19 13:32:51,192:INFO:         yellowbrick: 1.5
2023-05-19 13:32:51,192:INFO:              plotly: 5.14.1
2023-05-19 13:32:51,192:INFO:             kaleido: 0.2.1
2023-05-19 13:32:51,192:INFO:         statsmodels: 0.14.0
2023-05-19 13:32:51,192:INFO:              sktime: 0.17.0
2023-05-19 13:32:51,192:INFO:               tbats: 1.1.3
2023-05-19 13:32:51,192:INFO:            pmdarima: 2.0.3
2023-05-19 13:32:51,193:INFO:              psutil: 5.9.0
2023-05-19 13:32:51,193:INFO:PyCaret optional dependencies:
2023-05-19 13:32:51,193:INFO:                shap: Not installed
2023-05-19 13:32:51,193:INFO:           interpret: Not installed
2023-05-19 13:32:51,193:INFO:                umap: Not installed
2023-05-19 13:32:51,193:INFO:    pandas_profiling: Not installed
2023-05-19 13:32:51,193:INFO:  explainerdashboard: Not installed
2023-05-19 13:32:51,193:INFO:             autoviz: Not installed
2023-05-19 13:32:51,193:INFO:           fairlearn: Not installed
2023-05-19 13:32:51,193:INFO:             xgboost: Not installed
2023-05-19 13:32:51,193:INFO:            catboost: Not installed
2023-05-19 13:32:51,193:INFO:              kmodes: Not installed
2023-05-19 13:32:51,193:INFO:             mlxtend: Not installed
2023-05-19 13:32:51,193:INFO:       statsforecast: Not installed
2023-05-19 13:32:51,193:INFO:        tune_sklearn: Not installed
2023-05-19 13:32:51,193:INFO:                 ray: Not installed
2023-05-19 13:32:51,193:INFO:            hyperopt: Not installed
2023-05-19 13:32:51,193:INFO:              optuna: Not installed
2023-05-19 13:32:51,193:INFO:               skopt: Not installed
2023-05-19 13:32:51,193:INFO:              mlflow: Not installed
2023-05-19 13:32:51,193:INFO:              gradio: Not installed
2023-05-19 13:32:51,193:INFO:             fastapi: Not installed
2023-05-19 13:32:51,193:INFO:             uvicorn: Not installed
2023-05-19 13:32:51,193:INFO:              m2cgen: Not installed
2023-05-19 13:32:51,193:INFO:           evidently: Not installed
2023-05-19 13:32:51,193:INFO:               fugue: Not installed
2023-05-19 13:32:51,193:INFO:           streamlit: Not installed
2023-05-19 13:32:51,193:INFO:             prophet: Not installed
2023-05-19 13:32:51,193:INFO:None
2023-05-19 13:32:51,193:INFO:Set up data.
2023-05-19 13:32:51,259:INFO:Set up train/test split.
2023-05-19 13:32:51,289:INFO:Set up index.
2023-05-19 13:32:51,290:INFO:Set up folding strategy.
2023-05-19 13:32:51,290:INFO:Assigning column types.
2023-05-19 13:32:51,296:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 13:32:51,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,321:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,358:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,373:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 13:32:51,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 13:32:51,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,448:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 13:32:51,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:51,523:INFO:Preparing preprocessing pipeline...
2023-05-19 13:32:51,524:INFO:Set up label encoding.
2023-05-19 13:32:51,524:INFO:Set up simple imputation.
2023-05-19 13:32:51,531:INFO:Set up encoding of ordinal features.
2023-05-19 13:32:51,536:INFO:Set up encoding of categorical features.
2023-05-19 13:32:51,537:INFO:Set up feature normalization.
2023-05-19 13:32:52,046:INFO:Finished creating preprocessing pipeline.
2023-05-19 13:32:52,080:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 TransformerWrapper(exclude=None, include=['name', 'info'],
                                    transformer=TargetEncoder(cols=['name',
                                                                    'info'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-19 13:32:52,080:INFO:Creating final display dataframe.
2023-05-19 13:32:52,790:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                         (49444, 29)  
5                                         (49444, 49)  
6                                         (39555, 49)  
7                                          (9889, 49)  
8                                                   3  
9                                                  20  
10                                                  8  
11                                              58.2%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               76ed  
2023-05-19 13:32:52,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:52,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:52,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:52,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 13:32:52,904:INFO:setup() successfully completed in 1.72s...............
2023-05-19 13:32:52,905:INFO:Initializing compare_models()
2023-05-19 13:32:52,905:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 13:32:52,905:INFO:Checking exceptions
2023-05-19 13:32:52,913:INFO:Preparing display monitor
2023-05-19 13:32:52,937:INFO:Initializing Logistic Regression
2023-05-19 13:32:52,938:INFO:Total runtime is 2.682209014892578e-06 minutes
2023-05-19 13:32:52,941:INFO:SubProcess create_model() called ==================================
2023-05-19 13:32:52,942:INFO:Initializing create_model()
2023-05-19 13:32:52,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:32:52,942:INFO:Checking exceptions
2023-05-19 13:32:52,942:INFO:Importing libraries
2023-05-19 13:32:52,942:INFO:Copying training dataset
2023-05-19 13:32:52,957:INFO:Defining folds
2023-05-19 13:32:52,957:INFO:Declaring metric variables
2023-05-19 13:32:52,961:INFO:Importing untrained model
2023-05-19 13:32:52,964:INFO:Logistic Regression Imported successfully
2023-05-19 13:32:52,971:INFO:Starting cross validation
2023-05-19 13:32:52,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:00,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,109:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,128:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,207:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:00,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,140:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,154:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,293:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:01,441:INFO:Calculating mean and std
2023-05-19 13:33:01,446:INFO:Creating metrics dataframe
2023-05-19 13:33:01,458:INFO:Uploading results into container
2023-05-19 13:33:01,460:INFO:Uploading model into container now
2023-05-19 13:33:01,460:INFO:_master_model_container: 1
2023-05-19 13:33:01,460:INFO:_display_container: 2
2023-05-19 13:33:01,461:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 13:33:01,461:INFO:create_model() successfully completed......................................
2023-05-19 13:33:01,589:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:01,589:INFO:Creating metrics dataframe
2023-05-19 13:33:01,596:INFO:Initializing K Neighbors Classifier
2023-05-19 13:33:01,596:INFO:Total runtime is 0.144307541847229 minutes
2023-05-19 13:33:01,598:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:01,598:INFO:Initializing create_model()
2023-05-19 13:33:01,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:01,598:INFO:Checking exceptions
2023-05-19 13:33:01,598:INFO:Importing libraries
2023-05-19 13:33:01,598:INFO:Copying training dataset
2023-05-19 13:33:01,612:INFO:Defining folds
2023-05-19 13:33:01,612:INFO:Declaring metric variables
2023-05-19 13:33:01,616:INFO:Importing untrained model
2023-05-19 13:33:01,619:INFO:K Neighbors Classifier Imported successfully
2023-05-19 13:33:01,625:INFO:Starting cross validation
2023-05-19 13:33:01,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:05,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:05,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:05,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,179:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,197:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:06,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:07,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,409:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:08,527:INFO:Calculating mean and std
2023-05-19 13:33:08,529:INFO:Creating metrics dataframe
2023-05-19 13:33:08,536:INFO:Uploading results into container
2023-05-19 13:33:08,537:INFO:Uploading model into container now
2023-05-19 13:33:08,537:INFO:_master_model_container: 2
2023-05-19 13:33:08,537:INFO:_display_container: 2
2023-05-19 13:33:08,537:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 13:33:08,537:INFO:create_model() successfully completed......................................
2023-05-19 13:33:08,654:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:08,654:INFO:Creating metrics dataframe
2023-05-19 13:33:08,660:INFO:Initializing Naive Bayes
2023-05-19 13:33:08,661:INFO:Total runtime is 0.26205513874689734 minutes
2023-05-19 13:33:08,663:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:08,663:INFO:Initializing create_model()
2023-05-19 13:33:08,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:08,663:INFO:Checking exceptions
2023-05-19 13:33:08,663:INFO:Importing libraries
2023-05-19 13:33:08,663:INFO:Copying training dataset
2023-05-19 13:33:08,673:INFO:Defining folds
2023-05-19 13:33:08,673:INFO:Declaring metric variables
2023-05-19 13:33:08,677:INFO:Importing untrained model
2023-05-19 13:33:08,680:INFO:Naive Bayes Imported successfully
2023-05-19 13:33:08,687:INFO:Starting cross validation
2023-05-19 13:33:08,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:09,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,772:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,804:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,804:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,820:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,837:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,852:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,857:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,887:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,895:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:09,992:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:10,003:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:10,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:10,131:INFO:Calculating mean and std
2023-05-19 13:33:10,134:INFO:Creating metrics dataframe
2023-05-19 13:33:10,144:INFO:Uploading results into container
2023-05-19 13:33:10,145:INFO:Uploading model into container now
2023-05-19 13:33:10,145:INFO:_master_model_container: 3
2023-05-19 13:33:10,145:INFO:_display_container: 2
2023-05-19 13:33:10,145:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 13:33:10,145:INFO:create_model() successfully completed......................................
2023-05-19 13:33:10,249:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:10,249:INFO:Creating metrics dataframe
2023-05-19 13:33:10,256:INFO:Initializing Decision Tree Classifier
2023-05-19 13:33:10,256:INFO:Total runtime is 0.2886478265126546 minutes
2023-05-19 13:33:10,258:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:10,259:INFO:Initializing create_model()
2023-05-19 13:33:10,259:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:10,259:INFO:Checking exceptions
2023-05-19 13:33:10,259:INFO:Importing libraries
2023-05-19 13:33:10,259:INFO:Copying training dataset
2023-05-19 13:33:10,268:INFO:Defining folds
2023-05-19 13:33:10,268:INFO:Declaring metric variables
2023-05-19 13:33:10,270:INFO:Importing untrained model
2023-05-19 13:33:10,273:INFO:Decision Tree Classifier Imported successfully
2023-05-19 13:33:10,278:INFO:Starting cross validation
2023-05-19 13:33:10,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:11,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,527:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,635:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,638:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,741:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,817:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,832:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,851:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,916:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,929:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:11,953:INFO:Calculating mean and std
2023-05-19 13:33:11,955:INFO:Creating metrics dataframe
2023-05-19 13:33:11,967:INFO:Uploading results into container
2023-05-19 13:33:11,968:INFO:Uploading model into container now
2023-05-19 13:33:11,968:INFO:_master_model_container: 4
2023-05-19 13:33:11,968:INFO:_display_container: 2
2023-05-19 13:33:11,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 13:33:11,969:INFO:create_model() successfully completed......................................
2023-05-19 13:33:12,081:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:12,081:INFO:Creating metrics dataframe
2023-05-19 13:33:12,089:INFO:Initializing SVM - Linear Kernel
2023-05-19 13:33:12,089:INFO:Total runtime is 0.31919312079747514 minutes
2023-05-19 13:33:12,092:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:12,092:INFO:Initializing create_model()
2023-05-19 13:33:12,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:12,092:INFO:Checking exceptions
2023-05-19 13:33:12,092:INFO:Importing libraries
2023-05-19 13:33:12,092:INFO:Copying training dataset
2023-05-19 13:33:12,103:INFO:Defining folds
2023-05-19 13:33:12,103:INFO:Declaring metric variables
2023-05-19 13:33:12,106:INFO:Importing untrained model
2023-05-19 13:33:12,108:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 13:33:12,114:INFO:Starting cross validation
2023-05-19 13:33:12,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:13,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:13,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:13,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:13,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,005:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,046:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,046:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,178:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,197:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,377:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,379:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 13:33:14,488:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,489:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:14,631:INFO:Calculating mean and std
2023-05-19 13:33:14,634:INFO:Creating metrics dataframe
2023-05-19 13:33:14,644:INFO:Uploading results into container
2023-05-19 13:33:14,644:INFO:Uploading model into container now
2023-05-19 13:33:14,644:INFO:_master_model_container: 5
2023-05-19 13:33:14,644:INFO:_display_container: 2
2023-05-19 13:33:14,645:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 13:33:14,645:INFO:create_model() successfully completed......................................
2023-05-19 13:33:14,749:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:14,750:INFO:Creating metrics dataframe
2023-05-19 13:33:14,768:INFO:Initializing Ridge Classifier
2023-05-19 13:33:14,768:INFO:Total runtime is 0.36383868455886836 minutes
2023-05-19 13:33:14,770:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:14,770:INFO:Initializing create_model()
2023-05-19 13:33:14,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:14,770:INFO:Checking exceptions
2023-05-19 13:33:14,770:INFO:Importing libraries
2023-05-19 13:33:14,770:INFO:Copying training dataset
2023-05-19 13:33:14,780:INFO:Defining folds
2023-05-19 13:33:14,780:INFO:Declaring metric variables
2023-05-19 13:33:14,783:INFO:Importing untrained model
2023-05-19 13:33:14,787:INFO:Ridge Classifier Imported successfully
2023-05-19 13:33:14,793:INFO:Starting cross validation
2023-05-19 13:33:14,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:15,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,615:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,666:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,666:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,699:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,704:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,763:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,778:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,783:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:33:15,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 13:33:15,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,895:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:15,899:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:16,017:INFO:Calculating mean and std
2023-05-19 13:33:16,019:INFO:Creating metrics dataframe
2023-05-19 13:33:16,032:INFO:Uploading results into container
2023-05-19 13:33:16,033:INFO:Uploading model into container now
2023-05-19 13:33:16,033:INFO:_master_model_container: 6
2023-05-19 13:33:16,033:INFO:_display_container: 2
2023-05-19 13:33:16,033:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 13:33:16,033:INFO:create_model() successfully completed......................................
2023-05-19 13:33:16,138:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:16,138:INFO:Creating metrics dataframe
2023-05-19 13:33:16,146:INFO:Initializing Random Forest Classifier
2023-05-19 13:33:16,146:INFO:Total runtime is 0.38681273460388177 minutes
2023-05-19 13:33:16,148:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:16,149:INFO:Initializing create_model()
2023-05-19 13:33:16,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:16,149:INFO:Checking exceptions
2023-05-19 13:33:16,149:INFO:Importing libraries
2023-05-19 13:33:16,149:INFO:Copying training dataset
2023-05-19 13:33:16,158:INFO:Defining folds
2023-05-19 13:33:16,158:INFO:Declaring metric variables
2023-05-19 13:33:16,160:INFO:Importing untrained model
2023-05-19 13:33:16,163:INFO:Random Forest Classifier Imported successfully
2023-05-19 13:33:16,171:INFO:Starting cross validation
2023-05-19 13:33:16,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:20,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,754:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,769:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,779:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,791:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,814:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,820:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,820:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,836:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,860:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,862:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,878:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,953:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,966:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,977:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:20,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:21,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:21,039:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:21,049:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:21,165:INFO:Calculating mean and std
2023-05-19 13:33:21,167:INFO:Creating metrics dataframe
2023-05-19 13:33:21,185:INFO:Uploading results into container
2023-05-19 13:33:21,185:INFO:Uploading model into container now
2023-05-19 13:33:21,186:INFO:_master_model_container: 7
2023-05-19 13:33:21,186:INFO:_display_container: 2
2023-05-19 13:33:21,186:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 13:33:21,186:INFO:create_model() successfully completed......................................
2023-05-19 13:33:21,290:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:21,290:INFO:Creating metrics dataframe
2023-05-19 13:33:21,297:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 13:33:21,297:INFO:Total runtime is 0.47265686194101963 minutes
2023-05-19 13:33:21,298:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:21,299:INFO:Initializing create_model()
2023-05-19 13:33:21,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:21,299:INFO:Checking exceptions
2023-05-19 13:33:21,299:INFO:Importing libraries
2023-05-19 13:33:21,299:INFO:Copying training dataset
2023-05-19 13:33:21,309:INFO:Defining folds
2023-05-19 13:33:21,309:INFO:Declaring metric variables
2023-05-19 13:33:21,312:INFO:Importing untrained model
2023-05-19 13:33:21,315:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 13:33:21,320:INFO:Starting cross validation
2023-05-19 13:33:21,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:21,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:21,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:21,978:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:21,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,089:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,091:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,221:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-19 13:33:22,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,454:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,472:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,626:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,706:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,741:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,756:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:22,931:INFO:Calculating mean and std
2023-05-19 13:33:22,933:INFO:Creating metrics dataframe
2023-05-19 13:33:22,946:INFO:Uploading results into container
2023-05-19 13:33:22,947:INFO:Uploading model into container now
2023-05-19 13:33:22,947:INFO:_master_model_container: 8
2023-05-19 13:33:22,947:INFO:_display_container: 2
2023-05-19 13:33:22,948:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 13:33:22,948:INFO:create_model() successfully completed......................................
2023-05-19 13:33:23,054:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:23,054:INFO:Creating metrics dataframe
2023-05-19 13:33:23,060:INFO:Initializing Ada Boost Classifier
2023-05-19 13:33:23,060:INFO:Total runtime is 0.5020482142766316 minutes
2023-05-19 13:33:23,062:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:23,062:INFO:Initializing create_model()
2023-05-19 13:33:23,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:23,062:INFO:Checking exceptions
2023-05-19 13:33:23,062:INFO:Importing libraries
2023-05-19 13:33:23,063:INFO:Copying training dataset
2023-05-19 13:33:23,073:INFO:Defining folds
2023-05-19 13:33:23,073:INFO:Declaring metric variables
2023-05-19 13:33:23,076:INFO:Importing untrained model
2023-05-19 13:33:23,078:INFO:Ada Boost Classifier Imported successfully
2023-05-19 13:33:23,083:INFO:Starting cross validation
2023-05-19 13:33:23,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:25,977:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:25,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,009:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,078:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,084:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,094:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,140:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,154:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,169:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,357:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,758:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:26,902:INFO:Calculating mean and std
2023-05-19 13:33:26,904:INFO:Creating metrics dataframe
2023-05-19 13:33:26,916:INFO:Uploading results into container
2023-05-19 13:33:26,916:INFO:Uploading model into container now
2023-05-19 13:33:26,916:INFO:_master_model_container: 9
2023-05-19 13:33:26,916:INFO:_display_container: 2
2023-05-19 13:33:26,917:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 13:33:26,917:INFO:create_model() successfully completed......................................
2023-05-19 13:33:27,019:INFO:SubProcess create_model() end ==================================
2023-05-19 13:33:27,019:INFO:Creating metrics dataframe
2023-05-19 13:33:27,026:INFO:Initializing Gradient Boosting Classifier
2023-05-19 13:33:27,026:INFO:Total runtime is 0.5681458552678426 minutes
2023-05-19 13:33:27,028:INFO:SubProcess create_model() called ==================================
2023-05-19 13:33:27,028:INFO:Initializing create_model()
2023-05-19 13:33:27,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:33:27,028:INFO:Checking exceptions
2023-05-19 13:33:27,028:INFO:Importing libraries
2023-05-19 13:33:27,028:INFO:Copying training dataset
2023-05-19 13:33:27,039:INFO:Defining folds
2023-05-19 13:33:27,039:INFO:Declaring metric variables
2023-05-19 13:33:27,042:INFO:Importing untrained model
2023-05-19 13:33:27,045:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 13:33:27,051:INFO:Starting cross validation
2023-05-19 13:33:27,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:33:58,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:58,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:58,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,065:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,107:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,226:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:33:59,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:01,241:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:01,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:01,271:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:02,579:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,193:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,394:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:07,517:INFO:Calculating mean and std
2023-05-19 13:34:07,519:INFO:Creating metrics dataframe
2023-05-19 13:34:07,537:INFO:Uploading results into container
2023-05-19 13:34:07,538:INFO:Uploading model into container now
2023-05-19 13:34:07,538:INFO:_master_model_container: 10
2023-05-19 13:34:07,538:INFO:_display_container: 2
2023-05-19 13:34:07,538:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 13:34:07,539:INFO:create_model() successfully completed......................................
2023-05-19 13:34:07,645:INFO:SubProcess create_model() end ==================================
2023-05-19 13:34:07,645:INFO:Creating metrics dataframe
2023-05-19 13:34:07,653:INFO:Initializing Linear Discriminant Analysis
2023-05-19 13:34:07,653:INFO:Total runtime is 1.2452646056811014 minutes
2023-05-19 13:34:07,656:INFO:SubProcess create_model() called ==================================
2023-05-19 13:34:07,657:INFO:Initializing create_model()
2023-05-19 13:34:07,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:34:07,657:INFO:Checking exceptions
2023-05-19 13:34:07,657:INFO:Importing libraries
2023-05-19 13:34:07,657:INFO:Copying training dataset
2023-05-19 13:34:07,667:INFO:Defining folds
2023-05-19 13:34:07,667:INFO:Declaring metric variables
2023-05-19 13:34:07,670:INFO:Importing untrained model
2023-05-19 13:34:07,673:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 13:34:07,678:INFO:Starting cross validation
2023-05-19 13:34:07,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:34:08,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,920:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,967:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,972:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,983:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,987:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:08,998:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,058:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,074:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,090:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,106:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,219:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,242:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,243:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:09,375:INFO:Calculating mean and std
2023-05-19 13:34:09,377:INFO:Creating metrics dataframe
2023-05-19 13:34:09,391:INFO:Uploading results into container
2023-05-19 13:34:09,392:INFO:Uploading model into container now
2023-05-19 13:34:09,392:INFO:_master_model_container: 11
2023-05-19 13:34:09,392:INFO:_display_container: 2
2023-05-19 13:34:09,392:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 13:34:09,392:INFO:create_model() successfully completed......................................
2023-05-19 13:34:09,496:INFO:SubProcess create_model() end ==================================
2023-05-19 13:34:09,497:INFO:Creating metrics dataframe
2023-05-19 13:34:09,503:INFO:Initializing Extra Trees Classifier
2023-05-19 13:34:09,503:INFO:Total runtime is 1.276094114780426 minutes
2023-05-19 13:34:09,505:INFO:SubProcess create_model() called ==================================
2023-05-19 13:34:09,505:INFO:Initializing create_model()
2023-05-19 13:34:09,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:34:09,505:INFO:Checking exceptions
2023-05-19 13:34:09,505:INFO:Importing libraries
2023-05-19 13:34:09,505:INFO:Copying training dataset
2023-05-19 13:34:09,515:INFO:Defining folds
2023-05-19 13:34:09,516:INFO:Declaring metric variables
2023-05-19 13:34:09,518:INFO:Importing untrained model
2023-05-19 13:34:09,521:INFO:Extra Trees Classifier Imported successfully
2023-05-19 13:34:09,526:INFO:Starting cross validation
2023-05-19 13:34:09,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:34:13,098:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,195:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,225:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,251:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,338:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,406:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,598:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,620:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:13,738:INFO:Calculating mean and std
2023-05-19 13:34:13,741:INFO:Creating metrics dataframe
2023-05-19 13:34:13,754:INFO:Uploading results into container
2023-05-19 13:34:13,755:INFO:Uploading model into container now
2023-05-19 13:34:13,755:INFO:_master_model_container: 12
2023-05-19 13:34:13,755:INFO:_display_container: 2
2023-05-19 13:34:13,755:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 13:34:13,755:INFO:create_model() successfully completed......................................
2023-05-19 13:34:13,859:INFO:SubProcess create_model() end ==================================
2023-05-19 13:34:13,859:INFO:Creating metrics dataframe
2023-05-19 13:34:13,866:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 13:34:13,866:INFO:Total runtime is 1.3488120237986245 minutes
2023-05-19 13:34:13,868:INFO:SubProcess create_model() called ==================================
2023-05-19 13:34:13,869:INFO:Initializing create_model()
2023-05-19 13:34:13,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:34:13,869:INFO:Checking exceptions
2023-05-19 13:34:13,869:INFO:Importing libraries
2023-05-19 13:34:13,869:INFO:Copying training dataset
2023-05-19 13:34:13,879:INFO:Defining folds
2023-05-19 13:34:13,879:INFO:Declaring metric variables
2023-05-19 13:34:13,883:INFO:Importing untrained model
2023-05-19 13:34:13,886:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 13:34:13,891:INFO:Starting cross validation
2023-05-19 13:34:13,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:34:17,024:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,098:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,229:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,245:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,250:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,259:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,260:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,275:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,687:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,699:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,921:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:17,932:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:18,050:INFO:Calculating mean and std
2023-05-19 13:34:18,052:INFO:Creating metrics dataframe
2023-05-19 13:34:18,064:INFO:Uploading results into container
2023-05-19 13:34:18,064:INFO:Uploading model into container now
2023-05-19 13:34:18,065:INFO:_master_model_container: 13
2023-05-19 13:34:18,065:INFO:_display_container: 2
2023-05-19 13:34:18,065:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 13:34:18,065:INFO:create_model() successfully completed......................................
2023-05-19 13:34:18,168:INFO:SubProcess create_model() end ==================================
2023-05-19 13:34:18,168:INFO:Creating metrics dataframe
2023-05-19 13:34:18,176:INFO:Initializing Dummy Classifier
2023-05-19 13:34:18,177:INFO:Total runtime is 1.4206526478131611 minutes
2023-05-19 13:34:18,179:INFO:SubProcess create_model() called ==================================
2023-05-19 13:34:18,180:INFO:Initializing create_model()
2023-05-19 13:34:18,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:34:18,180:INFO:Checking exceptions
2023-05-19 13:34:18,180:INFO:Importing libraries
2023-05-19 13:34:18,180:INFO:Copying training dataset
2023-05-19 13:34:18,190:INFO:Defining folds
2023-05-19 13:34:18,190:INFO:Declaring metric variables
2023-05-19 13:34:18,193:INFO:Importing untrained model
2023-05-19 13:34:18,196:INFO:Dummy Classifier Imported successfully
2023-05-19 13:34:18,201:INFO:Starting cross validation
2023-05-19 13:34:18,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 13:34:18,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:18,931:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:18,940:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:18,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,054:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,060:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,069:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,072:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,080:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,080:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,094:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,094:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,106:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,112:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,138:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,195:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,224:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 13:34:19,229:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 13:34:19,359:INFO:Calculating mean and std
2023-05-19 13:34:19,362:INFO:Creating metrics dataframe
2023-05-19 13:34:19,379:INFO:Uploading results into container
2023-05-19 13:34:19,380:INFO:Uploading model into container now
2023-05-19 13:34:19,380:INFO:_master_model_container: 14
2023-05-19 13:34:19,380:INFO:_display_container: 2
2023-05-19 13:34:19,380:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 13:34:19,380:INFO:create_model() successfully completed......................................
2023-05-19 13:34:19,486:INFO:SubProcess create_model() end ==================================
2023-05-19 13:34:19,486:INFO:Creating metrics dataframe
2023-05-19 13:34:19,501:INFO:Initializing create_model()
2023-05-19 13:34:19,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 13:34:19,502:INFO:Checking exceptions
2023-05-19 13:34:19,503:INFO:Importing libraries
2023-05-19 13:34:19,503:INFO:Copying training dataset
2023-05-19 13:34:19,512:INFO:Defining folds
2023-05-19 13:34:19,512:INFO:Declaring metric variables
2023-05-19 13:34:19,512:INFO:Importing untrained model
2023-05-19 13:34:19,512:INFO:Declaring custom model
2023-05-19 13:34:19,513:INFO:Random Forest Classifier Imported successfully
2023-05-19 13:34:19,514:INFO:Cross validation set to False
2023-05-19 13:34:19,514:INFO:Fitting Model
2023-05-19 13:34:20,492:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 13:34:20,492:INFO:create_model() successfully completed......................................
2023-05-19 13:34:20,618:INFO:_master_model_container: 14
2023-05-19 13:34:20,618:INFO:_display_container: 2
2023-05-19 13:34:20,618:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 13:34:20,618:INFO:compare_models() successfully completed......................................
2023-05-19 13:34:20,618:INFO:Initializing finalize_model()
2023-05-19 13:34:20,618:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-19 13:34:20,619:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 13:34:20,624:INFO:Initializing create_model()
2023-05-19 13:34:20,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaf1bb0f10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-19 13:34:20,625:INFO:Checking exceptions
2023-05-19 13:34:20,626:INFO:Importing libraries
2023-05-19 13:34:20,626:INFO:Copying training dataset
2023-05-19 13:34:20,627:INFO:Defining folds
2023-05-19 13:34:20,627:INFO:Declaring metric variables
2023-05-19 13:34:20,627:INFO:Importing untrained model
2023-05-19 13:34:20,627:INFO:Declaring custom model
2023-05-19 13:34:20,627:INFO:Random Forest Classifier Imported successfully
2023-05-19 13:34:20,628:INFO:Cross validation set to False
2023-05-19 13:34:20,629:INFO:Fitting Model
2023-05-19 13:34:21,791:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 13:34:21,791:INFO:create_model() successfully completed......................................
2023-05-19 13:34:21,898:INFO:_master_model_container: 14
2023-05-19 13:34:21,898:INFO:_display_container: 2
2023-05-19 13:34:21,919:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 13:34:21,919:INFO:finalize_model() successfully completed......................................
2023-05-19 14:03:47,938:INFO:PyCaret ClassificationExperiment
2023-05-19 14:03:47,938:INFO:Logging name: clf-default-name
2023-05-19 14:03:47,938:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 14:03:47,938:INFO:version 3.0.2
2023-05-19 14:03:47,938:INFO:Initializing setup()
2023-05-19 14:03:47,938:INFO:self.USI: 8b23
2023-05-19 14:03:47,938:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 14:03:47,938:INFO:Checking environment
2023-05-19 14:03:47,938:INFO:python_version: 3.8.16
2023-05-19 14:03:47,938:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 14:03:47,938:INFO:machine: x86_64
2023-05-19 14:03:47,938:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 14:03:47,938:INFO:Memory: svmem(total=16378347520, available=5230919680, percent=68.1, used=9927581696, free=3225944064, active=5461999616, inactive=6270734336, buffers=102903808, cached=3121917952, shared=868220928, slab=682164224)
2023-05-19 14:03:47,939:INFO:Physical Core: 10
2023-05-19 14:03:47,939:INFO:Logical Core: 16
2023-05-19 14:03:47,939:INFO:Checking libraries
2023-05-19 14:03:47,939:INFO:System:
2023-05-19 14:03:47,939:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 14:03:47,939:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 14:03:47,939:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 14:03:47,939:INFO:PyCaret required dependencies:
2023-05-19 14:03:47,939:INFO:                 pip: 23.0.1
2023-05-19 14:03:47,939:INFO:          setuptools: 66.0.0
2023-05-19 14:03:47,939:INFO:             pycaret: 3.0.2
2023-05-19 14:03:47,939:INFO:             IPython: 8.12.2
2023-05-19 14:03:47,939:INFO:          ipywidgets: 8.0.6
2023-05-19 14:03:47,939:INFO:                tqdm: 4.65.0
2023-05-19 14:03:47,939:INFO:               numpy: 1.23.5
2023-05-19 14:03:47,939:INFO:              pandas: 1.5.3
2023-05-19 14:03:47,939:INFO:              jinja2: 3.1.2
2023-05-19 14:03:47,939:INFO:               scipy: 1.10.1
2023-05-19 14:03:47,939:INFO:              joblib: 1.2.0
2023-05-19 14:03:47,939:INFO:             sklearn: 1.2.2
2023-05-19 14:03:47,939:INFO:                pyod: 1.0.9
2023-05-19 14:03:47,939:INFO:            imblearn: 0.10.1
2023-05-19 14:03:47,939:INFO:   category_encoders: 2.6.1
2023-05-19 14:03:47,939:INFO:            lightgbm: 3.3.5
2023-05-19 14:03:47,939:INFO:               numba: 0.57.0
2023-05-19 14:03:47,939:INFO:            requests: 2.29.0
2023-05-19 14:03:47,939:INFO:          matplotlib: 3.7.1
2023-05-19 14:03:47,939:INFO:          scikitplot: 0.3.7
2023-05-19 14:03:47,939:INFO:         yellowbrick: 1.5
2023-05-19 14:03:47,939:INFO:              plotly: 5.14.1
2023-05-19 14:03:47,939:INFO:             kaleido: 0.2.1
2023-05-19 14:03:47,939:INFO:         statsmodels: 0.14.0
2023-05-19 14:03:47,939:INFO:              sktime: 0.17.0
2023-05-19 14:03:47,939:INFO:               tbats: 1.1.3
2023-05-19 14:03:47,939:INFO:            pmdarima: 2.0.3
2023-05-19 14:03:47,939:INFO:              psutil: 5.9.0
2023-05-19 14:03:47,939:INFO:PyCaret optional dependencies:
2023-05-19 14:03:47,939:INFO:                shap: Not installed
2023-05-19 14:03:47,939:INFO:           interpret: Not installed
2023-05-19 14:03:47,939:INFO:                umap: Not installed
2023-05-19 14:03:47,939:INFO:    pandas_profiling: Not installed
2023-05-19 14:03:47,939:INFO:  explainerdashboard: Not installed
2023-05-19 14:03:47,939:INFO:             autoviz: Not installed
2023-05-19 14:03:47,939:INFO:           fairlearn: Not installed
2023-05-19 14:03:47,939:INFO:             xgboost: Not installed
2023-05-19 14:03:47,939:INFO:            catboost: Not installed
2023-05-19 14:03:47,939:INFO:              kmodes: Not installed
2023-05-19 14:03:47,939:INFO:             mlxtend: Not installed
2023-05-19 14:03:47,939:INFO:       statsforecast: Not installed
2023-05-19 14:03:47,939:INFO:        tune_sklearn: Not installed
2023-05-19 14:03:47,940:INFO:                 ray: Not installed
2023-05-19 14:03:47,940:INFO:            hyperopt: Not installed
2023-05-19 14:03:47,940:INFO:              optuna: Not installed
2023-05-19 14:03:47,940:INFO:               skopt: Not installed
2023-05-19 14:03:47,940:INFO:              mlflow: Not installed
2023-05-19 14:03:47,940:INFO:              gradio: Not installed
2023-05-19 14:03:47,940:INFO:             fastapi: Not installed
2023-05-19 14:03:47,940:INFO:             uvicorn: Not installed
2023-05-19 14:03:47,940:INFO:              m2cgen: Not installed
2023-05-19 14:03:47,940:INFO:           evidently: Not installed
2023-05-19 14:03:47,940:INFO:               fugue: Not installed
2023-05-19 14:03:47,940:INFO:           streamlit: Not installed
2023-05-19 14:03:47,940:INFO:             prophet: Not installed
2023-05-19 14:03:47,940:INFO:None
2023-05-19 14:03:47,940:INFO:Set up data.
2023-05-19 14:03:48,028:INFO:Set up train/test split.
2023-05-19 14:03:48,058:INFO:Set up index.
2023-05-19 14:03:48,059:INFO:Set up folding strategy.
2023-05-19 14:03:48,059:INFO:Assigning column types.
2023-05-19 14:03:48,065:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 14:03:48,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,126:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,127:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,143:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 14:03:48,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 14:03:48,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,215:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 14:03:48,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:48,289:INFO:Preparing preprocessing pipeline...
2023-05-19 14:03:48,302:INFO:Set up label encoding.
2023-05-19 14:03:48,302:INFO:Set up simple imputation.
2023-05-19 14:03:48,309:INFO:Set up encoding of ordinal features.
2023-05-19 14:03:48,315:INFO:Set up encoding of categorical features.
2023-05-19 14:03:48,315:INFO:Set up feature normalization.
2023-05-19 14:03:48,746:INFO:Finished creating preprocessing pipeline.
2023-05-19 14:03:48,769:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 TransformerWrapper(exclude=None, include=['name', 'info'],
                                    transformer=TargetEncoder(cols=['name',
                                                                    'info'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-19 14:03:48,769:INFO:Creating final display dataframe.
2023-05-19 14:03:48,952:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                         (49444, 29)  
5                                         (49444, 49)  
6                                         (39555, 49)  
7                                          (9889, 49)  
8                                                   3  
9                                                  20  
10                                                  8  
11                                              58.2%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               8b23  
2023-05-19 14:03:49,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:49,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:49,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:49,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 14:03:49,076:INFO:setup() successfully completed in 1.15s...............
2023-05-19 14:03:49,076:INFO:Initializing compare_models()
2023-05-19 14:03:49,076:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 14:03:49,076:INFO:Checking exceptions
2023-05-19 14:03:49,083:INFO:Preparing display monitor
2023-05-19 14:03:49,104:INFO:Initializing Logistic Regression
2023-05-19 14:03:49,104:INFO:Total runtime is 2.574920654296875e-06 minutes
2023-05-19 14:03:49,106:INFO:SubProcess create_model() called ==================================
2023-05-19 14:03:49,106:INFO:Initializing create_model()
2023-05-19 14:03:49,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:03:49,106:INFO:Checking exceptions
2023-05-19 14:03:49,106:INFO:Importing libraries
2023-05-19 14:03:49,106:INFO:Copying training dataset
2023-05-19 14:03:49,116:INFO:Defining folds
2023-05-19 14:03:49,116:INFO:Declaring metric variables
2023-05-19 14:03:49,118:INFO:Importing untrained model
2023-05-19 14:03:49,121:INFO:Logistic Regression Imported successfully
2023-05-19 14:03:49,129:INFO:Starting cross validation
2023-05-19 14:03:49,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:03:52,238:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,288:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,302:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,338:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,366:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,421:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,448:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,518:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,534:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,558:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:52,827:INFO:Calculating mean and std
2023-05-19 14:03:52,829:INFO:Creating metrics dataframe
2023-05-19 14:03:52,845:INFO:Uploading results into container
2023-05-19 14:03:52,845:INFO:Uploading model into container now
2023-05-19 14:03:52,846:INFO:_master_model_container: 1
2023-05-19 14:03:52,846:INFO:_display_container: 2
2023-05-19 14:03:52,846:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 14:03:52,846:INFO:create_model() successfully completed......................................
2023-05-19 14:03:53,019:INFO:SubProcess create_model() end ==================================
2023-05-19 14:03:53,019:INFO:Creating metrics dataframe
2023-05-19 14:03:53,028:INFO:Initializing K Neighbors Classifier
2023-05-19 14:03:53,028:INFO:Total runtime is 0.06539371411005655 minutes
2023-05-19 14:03:53,030:INFO:SubProcess create_model() called ==================================
2023-05-19 14:03:53,031:INFO:Initializing create_model()
2023-05-19 14:03:53,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:03:53,031:INFO:Checking exceptions
2023-05-19 14:03:53,031:INFO:Importing libraries
2023-05-19 14:03:53,031:INFO:Copying training dataset
2023-05-19 14:03:53,047:INFO:Defining folds
2023-05-19 14:03:53,048:INFO:Declaring metric variables
2023-05-19 14:03:53,051:INFO:Importing untrained model
2023-05-19 14:03:53,055:INFO:K Neighbors Classifier Imported successfully
2023-05-19 14:03:53,062:INFO:Starting cross validation
2023-05-19 14:03:53,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:03:57,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:57,483:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:57,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:57,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:57,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:57,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,494:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,504:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,561:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,885:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:58,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,198:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,213:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,420:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:03:59,937:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,055:INFO:Calculating mean and std
2023-05-19 14:04:00,057:INFO:Creating metrics dataframe
2023-05-19 14:04:00,074:INFO:Uploading results into container
2023-05-19 14:04:00,074:INFO:Uploading model into container now
2023-05-19 14:04:00,074:INFO:_master_model_container: 2
2023-05-19 14:04:00,075:INFO:_display_container: 2
2023-05-19 14:04:00,075:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 14:04:00,075:INFO:create_model() successfully completed......................................
2023-05-19 14:04:00,187:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:00,188:INFO:Creating metrics dataframe
2023-05-19 14:04:00,194:INFO:Initializing Naive Bayes
2023-05-19 14:04:00,194:INFO:Total runtime is 0.18483301401138305 minutes
2023-05-19 14:04:00,197:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:00,198:INFO:Initializing create_model()
2023-05-19 14:04:00,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:00,198:INFO:Checking exceptions
2023-05-19 14:04:00,198:INFO:Importing libraries
2023-05-19 14:04:00,198:INFO:Copying training dataset
2023-05-19 14:04:00,209:INFO:Defining folds
2023-05-19 14:04:00,209:INFO:Declaring metric variables
2023-05-19 14:04:00,212:INFO:Importing untrained model
2023-05-19 14:04:00,215:INFO:Naive Bayes Imported successfully
2023-05-19 14:04:00,221:INFO:Starting cross validation
2023-05-19 14:04:00,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:00,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,887:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,887:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,887:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,906:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,918:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,945:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:00,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,041:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,051:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,055:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,067:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,072:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,072:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,079:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,082:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,103:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:01,307:INFO:Calculating mean and std
2023-05-19 14:04:01,309:INFO:Creating metrics dataframe
2023-05-19 14:04:01,321:INFO:Uploading results into container
2023-05-19 14:04:01,321:INFO:Uploading model into container now
2023-05-19 14:04:01,321:INFO:_master_model_container: 3
2023-05-19 14:04:01,321:INFO:_display_container: 2
2023-05-19 14:04:01,321:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 14:04:01,321:INFO:create_model() successfully completed......................................
2023-05-19 14:04:01,426:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:01,426:INFO:Creating metrics dataframe
2023-05-19 14:04:01,434:INFO:Initializing Decision Tree Classifier
2023-05-19 14:04:01,434:INFO:Total runtime is 0.2054933746655782 minutes
2023-05-19 14:04:01,436:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:01,436:INFO:Initializing create_model()
2023-05-19 14:04:01,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:01,436:INFO:Checking exceptions
2023-05-19 14:04:01,436:INFO:Importing libraries
2023-05-19 14:04:01,436:INFO:Copying training dataset
2023-05-19 14:04:01,447:INFO:Defining folds
2023-05-19 14:04:01,447:INFO:Declaring metric variables
2023-05-19 14:04:01,451:INFO:Importing untrained model
2023-05-19 14:04:01,453:INFO:Decision Tree Classifier Imported successfully
2023-05-19 14:04:01,459:INFO:Starting cross validation
2023-05-19 14:04:01,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:02,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,057:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,080:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,096:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,210:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,226:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,250:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,254:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,268:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,285:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,288:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,304:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,400:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,418:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:02,559:INFO:Calculating mean and std
2023-05-19 14:04:02,562:INFO:Creating metrics dataframe
2023-05-19 14:04:02,582:INFO:Uploading results into container
2023-05-19 14:04:02,583:INFO:Uploading model into container now
2023-05-19 14:04:02,583:INFO:_master_model_container: 4
2023-05-19 14:04:02,583:INFO:_display_container: 2
2023-05-19 14:04:02,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 14:04:02,583:INFO:create_model() successfully completed......................................
2023-05-19 14:04:02,686:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:02,686:INFO:Creating metrics dataframe
2023-05-19 14:04:02,693:INFO:Initializing SVM - Linear Kernel
2023-05-19 14:04:02,693:INFO:Total runtime is 0.22648255427678426 minutes
2023-05-19 14:04:02,696:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:02,696:INFO:Initializing create_model()
2023-05-19 14:04:02,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:02,696:INFO:Checking exceptions
2023-05-19 14:04:02,696:INFO:Importing libraries
2023-05-19 14:04:02,696:INFO:Copying training dataset
2023-05-19 14:04:02,706:INFO:Defining folds
2023-05-19 14:04:02,706:INFO:Declaring metric variables
2023-05-19 14:04:02,709:INFO:Importing untrained model
2023-05-19 14:04:02,712:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 14:04:02,717:INFO:Starting cross validation
2023-05-19 14:04:02,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:03,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,254:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,257:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,259:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,266:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,514:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 14:04:03,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:03,657:INFO:Calculating mean and std
2023-05-19 14:04:03,660:INFO:Creating metrics dataframe
2023-05-19 14:04:03,676:INFO:Uploading results into container
2023-05-19 14:04:03,676:INFO:Uploading model into container now
2023-05-19 14:04:03,677:INFO:_master_model_container: 5
2023-05-19 14:04:03,677:INFO:_display_container: 2
2023-05-19 14:04:03,677:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 14:04:03,677:INFO:create_model() successfully completed......................................
2023-05-19 14:04:03,784:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:03,784:INFO:Creating metrics dataframe
2023-05-19 14:04:03,791:INFO:Initializing Ridge Classifier
2023-05-19 14:04:03,791:INFO:Total runtime is 0.2447759509086609 minutes
2023-05-19 14:04:03,793:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:03,793:INFO:Initializing create_model()
2023-05-19 14:04:03,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:03,793:INFO:Checking exceptions
2023-05-19 14:04:03,793:INFO:Importing libraries
2023-05-19 14:04:03,793:INFO:Copying training dataset
2023-05-19 14:04:03,803:INFO:Defining folds
2023-05-19 14:04:03,803:INFO:Declaring metric variables
2023-05-19 14:04:03,806:INFO:Importing untrained model
2023-05-19 14:04:03,810:INFO:Ridge Classifier Imported successfully
2023-05-19 14:04:03,818:INFO:Starting cross validation
2023-05-19 14:04:03,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:04,373:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,457:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,483:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,514:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,577:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,616:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,630:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,635:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 14:04:04,635:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:04,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,665:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:04,790:INFO:Calculating mean and std
2023-05-19 14:04:04,792:INFO:Creating metrics dataframe
2023-05-19 14:04:04,807:INFO:Uploading results into container
2023-05-19 14:04:04,807:INFO:Uploading model into container now
2023-05-19 14:04:04,808:INFO:_master_model_container: 6
2023-05-19 14:04:04,808:INFO:_display_container: 2
2023-05-19 14:04:04,808:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 14:04:04,808:INFO:create_model() successfully completed......................................
2023-05-19 14:04:04,912:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:04,912:INFO:Creating metrics dataframe
2023-05-19 14:04:04,918:INFO:Initializing Random Forest Classifier
2023-05-19 14:04:04,918:INFO:Total runtime is 0.26356292168299356 minutes
2023-05-19 14:04:04,920:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:04,920:INFO:Initializing create_model()
2023-05-19 14:04:04,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:04,920:INFO:Checking exceptions
2023-05-19 14:04:04,920:INFO:Importing libraries
2023-05-19 14:04:04,920:INFO:Copying training dataset
2023-05-19 14:04:04,930:INFO:Defining folds
2023-05-19 14:04:04,930:INFO:Declaring metric variables
2023-05-19 14:04:04,932:INFO:Importing untrained model
2023-05-19 14:04:04,935:INFO:Random Forest Classifier Imported successfully
2023-05-19 14:04:04,940:INFO:Starting cross validation
2023-05-19 14:04:04,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:05,818:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,862:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,916:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,932:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,940:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,950:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,952:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,958:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,963:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,968:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:05,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,003:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,043:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,094:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,112:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,207:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,221:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,223:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,235:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:06,364:INFO:Calculating mean and std
2023-05-19 14:04:06,367:INFO:Creating metrics dataframe
2023-05-19 14:04:06,385:INFO:Uploading results into container
2023-05-19 14:04:06,385:INFO:Uploading model into container now
2023-05-19 14:04:06,386:INFO:_master_model_container: 7
2023-05-19 14:04:06,386:INFO:_display_container: 2
2023-05-19 14:04:06,386:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 14:04:06,386:INFO:create_model() successfully completed......................................
2023-05-19 14:04:06,491:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:06,491:INFO:Creating metrics dataframe
2023-05-19 14:04:06,498:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 14:04:06,498:INFO:Total runtime is 0.2898980021476745 minutes
2023-05-19 14:04:06,500:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:06,500:INFO:Initializing create_model()
2023-05-19 14:04:06,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:06,500:INFO:Checking exceptions
2023-05-19 14:04:06,501:INFO:Importing libraries
2023-05-19 14:04:06,501:INFO:Copying training dataset
2023-05-19 14:04:06,512:INFO:Defining folds
2023-05-19 14:04:06,512:INFO:Declaring metric variables
2023-05-19 14:04:06,515:INFO:Importing untrained model
2023-05-19 14:04:06,518:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 14:04:06,523:INFO:Starting cross validation
2023-05-19 14:04:06,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:07,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,137:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,159:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,178:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,313:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,340:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,414:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,475:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:07,600:INFO:Calculating mean and std
2023-05-19 14:04:07,603:INFO:Creating metrics dataframe
2023-05-19 14:04:07,621:INFO:Uploading results into container
2023-05-19 14:04:07,622:INFO:Uploading model into container now
2023-05-19 14:04:07,622:INFO:_master_model_container: 8
2023-05-19 14:04:07,622:INFO:_display_container: 2
2023-05-19 14:04:07,622:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 14:04:07,622:INFO:create_model() successfully completed......................................
2023-05-19 14:04:07,728:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:07,728:INFO:Creating metrics dataframe
2023-05-19 14:04:07,735:INFO:Initializing Ada Boost Classifier
2023-05-19 14:04:07,735:INFO:Total runtime is 0.3105215708414713 minutes
2023-05-19 14:04:07,738:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:07,738:INFO:Initializing create_model()
2023-05-19 14:04:07,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:07,738:INFO:Checking exceptions
2023-05-19 14:04:07,738:INFO:Importing libraries
2023-05-19 14:04:07,738:INFO:Copying training dataset
2023-05-19 14:04:07,747:INFO:Defining folds
2023-05-19 14:04:07,748:INFO:Declaring metric variables
2023-05-19 14:04:07,750:INFO:Importing untrained model
2023-05-19 14:04:07,753:INFO:Ada Boost Classifier Imported successfully
2023-05-19 14:04:07,758:INFO:Starting cross validation
2023-05-19 14:04:07,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:08,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,442:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,665:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,821:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,848:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,860:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,873:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,922:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,933:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:08,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:09,060:INFO:Calculating mean and std
2023-05-19 14:04:09,064:INFO:Creating metrics dataframe
2023-05-19 14:04:09,083:INFO:Uploading results into container
2023-05-19 14:04:09,084:INFO:Uploading model into container now
2023-05-19 14:04:09,084:INFO:_master_model_container: 9
2023-05-19 14:04:09,084:INFO:_display_container: 2
2023-05-19 14:04:09,084:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 14:04:09,084:INFO:create_model() successfully completed......................................
2023-05-19 14:04:09,187:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:09,187:INFO:Creating metrics dataframe
2023-05-19 14:04:09,195:INFO:Initializing Gradient Boosting Classifier
2023-05-19 14:04:09,195:INFO:Total runtime is 0.33484327395757035 minutes
2023-05-19 14:04:09,197:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:09,197:INFO:Initializing create_model()
2023-05-19 14:04:09,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:09,197:INFO:Checking exceptions
2023-05-19 14:04:09,197:INFO:Importing libraries
2023-05-19 14:04:09,197:INFO:Copying training dataset
2023-05-19 14:04:09,207:INFO:Defining folds
2023-05-19 14:04:09,207:INFO:Declaring metric variables
2023-05-19 14:04:09,209:INFO:Importing untrained model
2023-05-19 14:04:09,212:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 14:04:09,216:INFO:Starting cross validation
2023-05-19 14:04:09,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:10,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,644:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,701:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,722:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:10,849:INFO:Calculating mean and std
2023-05-19 14:04:10,851:INFO:Creating metrics dataframe
2023-05-19 14:04:10,866:INFO:Uploading results into container
2023-05-19 14:04:10,867:INFO:Uploading model into container now
2023-05-19 14:04:10,867:INFO:_master_model_container: 10
2023-05-19 14:04:10,867:INFO:_display_container: 2
2023-05-19 14:04:10,867:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 14:04:10,867:INFO:create_model() successfully completed......................................
2023-05-19 14:04:10,969:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:10,969:INFO:Creating metrics dataframe
2023-05-19 14:04:10,977:INFO:Initializing Linear Discriminant Analysis
2023-05-19 14:04:10,977:INFO:Total runtime is 0.3645451148351033 minutes
2023-05-19 14:04:10,979:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:10,979:INFO:Initializing create_model()
2023-05-19 14:04:10,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:10,979:INFO:Checking exceptions
2023-05-19 14:04:10,979:INFO:Importing libraries
2023-05-19 14:04:10,979:INFO:Copying training dataset
2023-05-19 14:04:10,991:INFO:Defining folds
2023-05-19 14:04:10,991:INFO:Declaring metric variables
2023-05-19 14:04:10,994:INFO:Importing untrained model
2023-05-19 14:04:10,997:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 14:04:11,002:INFO:Starting cross validation
2023-05-19 14:04:11,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:11,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,563:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,568:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,579:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,598:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,731:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,760:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,798:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,827:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,828:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,902:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:11,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:12,029:INFO:Calculating mean and std
2023-05-19 14:04:12,031:INFO:Creating metrics dataframe
2023-05-19 14:04:12,052:INFO:Uploading results into container
2023-05-19 14:04:12,052:INFO:Uploading model into container now
2023-05-19 14:04:12,052:INFO:_master_model_container: 11
2023-05-19 14:04:12,052:INFO:_display_container: 2
2023-05-19 14:04:12,053:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 14:04:12,053:INFO:create_model() successfully completed......................................
2023-05-19 14:04:12,157:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:12,158:INFO:Creating metrics dataframe
2023-05-19 14:04:12,164:INFO:Initializing Extra Trees Classifier
2023-05-19 14:04:12,164:INFO:Total runtime is 0.38433686892191565 minutes
2023-05-19 14:04:12,166:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:12,166:INFO:Initializing create_model()
2023-05-19 14:04:12,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:12,166:INFO:Checking exceptions
2023-05-19 14:04:12,166:INFO:Importing libraries
2023-05-19 14:04:12,167:INFO:Copying training dataset
2023-05-19 14:04:12,176:INFO:Defining folds
2023-05-19 14:04:12,176:INFO:Declaring metric variables
2023-05-19 14:04:12,179:INFO:Importing untrained model
2023-05-19 14:04:12,182:INFO:Extra Trees Classifier Imported successfully
2023-05-19 14:04:12,187:INFO:Starting cross validation
2023-05-19 14:04:12,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:13,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,527:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,539:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,575:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,618:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,639:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,649:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,689:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,803:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,890:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,986:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:13,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:14,115:INFO:Calculating mean and std
2023-05-19 14:04:14,117:INFO:Creating metrics dataframe
2023-05-19 14:04:14,130:INFO:Uploading results into container
2023-05-19 14:04:14,131:INFO:Uploading model into container now
2023-05-19 14:04:14,131:INFO:_master_model_container: 12
2023-05-19 14:04:14,131:INFO:_display_container: 2
2023-05-19 14:04:14,132:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 14:04:14,132:INFO:create_model() successfully completed......................................
2023-05-19 14:04:14,246:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:14,246:INFO:Creating metrics dataframe
2023-05-19 14:04:14,253:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 14:04:14,253:INFO:Total runtime is 0.4191567341486613 minutes
2023-05-19 14:04:14,256:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:14,256:INFO:Initializing create_model()
2023-05-19 14:04:14,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:14,256:INFO:Checking exceptions
2023-05-19 14:04:14,256:INFO:Importing libraries
2023-05-19 14:04:14,256:INFO:Copying training dataset
2023-05-19 14:04:14,267:INFO:Defining folds
2023-05-19 14:04:14,267:INFO:Declaring metric variables
2023-05-19 14:04:14,269:INFO:Importing untrained model
2023-05-19 14:04:14,273:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 14:04:14,278:INFO:Starting cross validation
2023-05-19 14:04:14,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:15,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,527:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,586:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,602:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,630:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,706:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,718:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,742:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:15,915:INFO:Calculating mean and std
2023-05-19 14:04:15,917:INFO:Creating metrics dataframe
2023-05-19 14:04:15,932:INFO:Uploading results into container
2023-05-19 14:04:15,932:INFO:Uploading model into container now
2023-05-19 14:04:15,933:INFO:_master_model_container: 13
2023-05-19 14:04:15,933:INFO:_display_container: 2
2023-05-19 14:04:15,933:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 14:04:15,933:INFO:create_model() successfully completed......................................
2023-05-19 14:04:16,036:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:16,036:INFO:Creating metrics dataframe
2023-05-19 14:04:16,043:INFO:Initializing Dummy Classifier
2023-05-19 14:04:16,043:INFO:Total runtime is 0.4489829977353414 minutes
2023-05-19 14:04:16,045:INFO:SubProcess create_model() called ==================================
2023-05-19 14:04:16,045:INFO:Initializing create_model()
2023-05-19 14:04:16,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef434d90>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:16,045:INFO:Checking exceptions
2023-05-19 14:04:16,045:INFO:Importing libraries
2023-05-19 14:04:16,045:INFO:Copying training dataset
2023-05-19 14:04:16,055:INFO:Defining folds
2023-05-19 14:04:16,055:INFO:Declaring metric variables
2023-05-19 14:04:16,058:INFO:Importing untrained model
2023-05-19 14:04:16,060:INFO:Dummy Classifier Imported successfully
2023-05-19 14:04:16,064:INFO:Starting cross validation
2023-05-19 14:04:16,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 14:04:16,615:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,649:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,653:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,659:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,704:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,775:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,816:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,822:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,842:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,859:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 14:04:16,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 14:04:16,981:INFO:Calculating mean and std
2023-05-19 14:04:16,984:INFO:Creating metrics dataframe
2023-05-19 14:04:17,000:INFO:Uploading results into container
2023-05-19 14:04:17,000:INFO:Uploading model into container now
2023-05-19 14:04:17,001:INFO:_master_model_container: 14
2023-05-19 14:04:17,001:INFO:_display_container: 2
2023-05-19 14:04:17,001:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 14:04:17,001:INFO:create_model() successfully completed......................................
2023-05-19 14:04:17,110:INFO:SubProcess create_model() end ==================================
2023-05-19 14:04:17,110:INFO:Creating metrics dataframe
2023-05-19 14:04:17,125:INFO:Initializing create_model()
2023-05-19 14:04:17,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 14:04:17,125:INFO:Checking exceptions
2023-05-19 14:04:17,126:INFO:Importing libraries
2023-05-19 14:04:17,127:INFO:Copying training dataset
2023-05-19 14:04:17,136:INFO:Defining folds
2023-05-19 14:04:17,136:INFO:Declaring metric variables
2023-05-19 14:04:17,136:INFO:Importing untrained model
2023-05-19 14:04:17,136:INFO:Declaring custom model
2023-05-19 14:04:17,137:INFO:Random Forest Classifier Imported successfully
2023-05-19 14:04:17,138:INFO:Cross validation set to False
2023-05-19 14:04:17,138:INFO:Fitting Model
2023-05-19 14:04:17,865:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 14:04:17,865:INFO:create_model() successfully completed......................................
2023-05-19 14:04:18,006:INFO:_master_model_container: 14
2023-05-19 14:04:18,006:INFO:_display_container: 2
2023-05-19 14:04:18,006:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 14:04:18,007:INFO:compare_models() successfully completed......................................
2023-05-19 14:04:18,008:INFO:Initializing finalize_model()
2023-05-19 14:04:18,008:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-19 14:04:18,008:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 14:04:18,013:INFO:Initializing create_model()
2023-05-19 14:04:18,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-19 14:04:18,013:INFO:Checking exceptions
2023-05-19 14:04:18,015:INFO:Importing libraries
2023-05-19 14:04:18,015:INFO:Copying training dataset
2023-05-19 14:04:18,016:INFO:Defining folds
2023-05-19 14:04:18,016:INFO:Declaring metric variables
2023-05-19 14:04:18,016:INFO:Importing untrained model
2023-05-19 14:04:18,016:INFO:Declaring custom model
2023-05-19 14:04:18,016:INFO:Random Forest Classifier Imported successfully
2023-05-19 14:04:18,017:INFO:Cross validation set to False
2023-05-19 14:04:18,017:INFO:Fitting Model
2023-05-19 14:04:18,636:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 14:04:18,636:INFO:create_model() successfully completed......................................
2023-05-19 14:04:18,738:INFO:_master_model_container: 14
2023-05-19 14:04:18,738:INFO:_display_container: 2
2023-05-19 14:04:18,757:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 14:04:18,757:INFO:finalize_model() successfully completed......................................
2023-05-19 14:05:21,272:INFO:Initializing predict_model()
2023-05-19 14:05:21,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7ffaec285820>)
2023-05-19 14:05:21,272:INFO:Checking exceptions
2023-05-19 14:05:21,272:INFO:Preloading libraries
2023-05-19 14:10:21,245:INFO:Initializing get_config()
2023-05-19 14:10:21,246:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=X_train)
2023-05-19 14:10:21,246:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-05-19 14:10:21,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 14:10:21,270:INFO:Variable:  returned as                        obj_type                   name                info  \
38356  11-Residential Buildings  Battalgazi KonaklarÄ±  997-Not Applicable   
11065  11-Residential Buildings                Unknown  997-Not Applicable   
37617  11-Residential Buildings  Battalgazi KonaklarÄ±  997-Not Applicable   
43314  11-Residential Buildings                Unknown  997-Not Applicable   
3324   11-Residential Buildings                Antakya  997-Not Applicable   
...                         ...                    ...                 ...   
45492  11-Residential Buildings                Unknown  997-Not Applicable   
28079          995-Unclassified                Unknown  997-Not Applicable   
18755          995-Unclassified                bina 37  997-Not Applicable   
45828  11-Residential Buildings                Unknown  997-Not Applicable   
12075  11-Residential Buildings                Unknown  997-Not Applicable   

                 det_method        notation  or_src_id  dmg_src_id  \
38356  Photo-interpretation  Building block          1           2   
11065  Photo-interpretation  Building point          1           3   
37617  Photo-interpretation  Building block          1           2   
43314  Photo-interpretation  Building block          1           2   
3324   Photo-interpretation  Building block        994           2   
...                     ...             ...        ...         ...   
45492  Photo-interpretation  Building block          1           2   
28079  Photo-interpretation  Building point        994           3   
18755  Photo-interpretation  Building point        994           3   
45828  Photo-interpretation  Building block          1           2   
12075  Photo-interpretation  Building point          1           3   

             cd_value            real       city  ...  labour_fource  \
38356  Not Applicable  Not Applicable    malatya  ...      48.299999   
11065  Not Applicable             NaN     duzici  ...      48.099998   
37617  Not Applicable  Not Applicable    malatya  ...      48.299999   
43314  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
3324   Not Applicable  Not Applicable    antakya  ...      48.099998   
...               ...             ...        ...  ...            ...   
45492  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
28079  Not Applicable             NaN  gaziantep  ...      50.000000   
18755  Not Applicable             NaN  gaziantep  ...      50.000000   
45828  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
12075  Not Applicable             NaN     duzici  ...      48.099998   

       unemployment  agricultural  life_time  hb_per100000  fertility  \
38356          10.2       2729948  79.000000           369       1.63   
11065          17.1       1233061  78.000000           246       1.92   
37617          10.2       2729948  79.000000           369       1.63   
43314          15.0      10445551  77.699997           193       3.81   
3324           17.1     353508523  77.900002           266       2.41   
...             ...           ...        ...           ...        ...   
45492          15.0      10445551  77.699997           193       3.81   
28079          10.1       3466185  76.900002           306       2.47   
18755          10.1       3466185  76.900002           306       2.47   
45828          15.0      10445551  77.699997           193       3.81   
12075          17.1       1233061  78.000000           246       1.92   

       hh_size   latitude  longitude  nearest_fault_distance_km  
38356     3.40  38.360905  38.335613                  26.799759  
11065     3.46  37.250072  36.461296                  13.348521  
37617     3.40  38.348629  38.332813                  27.051903  
43314     5.12  37.111328  38.813618                  30.712105  
3324      3.65  36.220314  36.145325                   3.960193  
...        ...        ...        ...                        ...  
45492     5.12  37.159294  38.785412                  24.959866  
28079     3.97  37.047306  37.330624                  27.272057  
18755     3.97  37.068726  37.357052                  27.012213  
45828     5.12  37.163689  38.774944                  24.001522  
12075     3.46  37.246803  36.473488                  12.593074  

[39555 rows x 28 columns]
2023-05-19 14:10:21,270:INFO:get_config() successfully completed......................................
2023-05-19 14:10:21,270:INFO:Initializing get_config()
2023-05-19 14:10:21,270:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=X_test)
2023-05-19 14:10:21,270:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-19 14:10:21,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 14:10:21,277:INFO:Variable:  returned as                            obj_type            name  \
21289  12-Non-residential Buildings         Unknown   
34626      11-Residential Buildings         Unknown   
14454      11-Residential Buildings         Unknown   
5369       11-Residential Buildings         Antakya   
33464      11-Residential Buildings  PaÅa Bey Apt.   
...                             ...             ...   
17118      11-Residential Buildings         Unknown   
29372      11-Residential Buildings         Unknown   
27457              995-Unclassified         Unknown   
46106      11-Residential Buildings         Unknown   
1088       11-Residential Buildings         Unknown   

                                                    info  \
21289  1272-Buildings used as places of worship and f...   
34626                                 997-Not Applicable   
14454                                 997-Not Applicable   
5369                                  997-Not Applicable   
33464                                 997-Not Applicable   
...                                                  ...   
17118                                 997-Not Applicable   
29372                                 997-Not Applicable   
27457                                 997-Not Applicable   
46106                                 997-Not Applicable   
1088                                  997-Not Applicable   

                 det_method        notation  or_src_id  dmg_src_id  \
21289  Photo-interpretation  Building point        994           3   
34626  Photo-interpretation  Building point          2           2   
14454  Photo-interpretation  Building point          1           3   
5369   Photo-interpretation  Building block        994           3   
33464  Photo-interpretation  Building point          2           2   
...                     ...             ...        ...         ...   
17118  Photo-interpretation  Building point          1           3   
29372  Photo-interpretation  Building block        994           3   
27457  Photo-interpretation  Building point        994           3   
46106  Photo-interpretation  Building block          1           2   
1088   Photo-interpretation  Building block          1           3   

             cd_value            real           city  ...  labour_fource  \
21289  Not Applicable             NaN      gaziantep  ...      50.000000   
34626  Not Applicable             NaN  kahramanmaras  ...      48.099998   
14454  Not Applicable             NaN         duzici  ...      48.099998   
5369   Not Applicable  Not Applicable        antakya  ...      48.099998   
33464  Not Applicable             NaN  kahramanmaras  ...      48.099998   
...               ...             ...            ...  ...            ...   
17118  Not Applicable             NaN         duzici  ...      48.099998   
29372  Not Applicable            None       islahiye  ...      50.000000   
27457  Not Applicable             NaN      gaziantep  ...      50.000000   
46106  Not Applicable  Not Applicable      sanliurfa  ...      40.599998   
1088   Not Applicable  Not Applicable       adiyaman  ...      50.000000   

       unemployment  agricultural  life_time  hb_per100000  fertility  \
21289          10.1       3466185  76.900002           306       2.47   
34626          17.1       3535085  79.199997           256       1.99   
14454          17.1       1233061  78.000000           246       1.92   
5369           17.1     353508523  77.900002           266       2.41   
33464          17.1       3535085  79.199997           256       1.99   
...             ...           ...        ...           ...        ...   
17118          17.1       1233061  78.000000           246       1.92   
29372          10.1       3466185  76.900002           306       2.47   
27457          10.1       3466185  76.900002           306       2.47   
46106          15.0      10445551  77.699997           193       3.81   
1088           10.1       2336012  79.699997           222       2.36   

       hh_size   latitude  longitude  nearest_fault_distance_km  
21289     3.97  37.048706  37.352428                  28.372490  
34626     3.68  37.578091  36.852062                  19.392897  
14454     3.46  37.239449  36.440048                  12.551880  
5369      3.65  36.193863  36.165951                   1.617288  
33464     3.68  37.583317  36.898434                  20.267042  
...        ...        ...        ...                        ...  
17118     3.46  37.223080  36.442596                  13.315599  
29372     3.97  37.011391  36.620949                   1.598610  
27457     3.97  37.030128  37.336678                  29.123175  
46106     5.12  37.167301  38.778938                  23.907238  
1088      4.00  37.792057  38.242344                   7.806942  

[9889 rows x 28 columns]
2023-05-19 14:10:21,277:INFO:get_config() successfully completed......................................
2023-05-19 14:10:21,277:INFO:Initializing get_config()
2023-05-19 14:10:21,277:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=y_train)
2023-05-19 14:10:21,277:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2023-05-19 14:10:21,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 14:10:21,281:INFO:Variable:  returned as 38356    No visible damage
11065    No visible damage
37617    No visible damage
43314    No visible damage
3324     No visible damage
               ...        
45492    No visible damage
28079    No visible damage
18755    No visible damage
45828    No visible damage
12075    No visible damage
Name: damage_gra, Length: 39555, dtype: category
Categories (4, object): ['Damaged', 'Destroyed', 'No visible damage', 'Possibly damaged']
2023-05-19 14:10:21,281:INFO:get_config() successfully completed......................................
2023-05-19 14:10:21,281:INFO:Initializing get_config()
2023-05-19 14:10:21,281:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=y_test)
2023-05-19 14:10:21,281:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-19 14:10:21,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 14:10:21,284:INFO:Variable:  returned as 21289    No visible damage
34626    No visible damage
14454    No visible damage
5369     No visible damage
33464    No visible damage
               ...        
17118    No visible damage
29372    No visible damage
27457    No visible damage
46106    No visible damage
1088     No visible damage
Name: damage_gra, Length: 9889, dtype: category
Categories (4, object): ['Damaged', 'Destroyed', 'No visible damage', 'Possibly damaged']
2023-05-19 14:10:21,284:INFO:get_config() successfully completed......................................
2023-05-19 14:10:44,022:INFO:Initializing predict_model()
2023-05-19 14:10:44,022:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7ffb5abd7d30>)
2023-05-19 14:10:44,022:INFO:Checking exceptions
2023-05-19 14:10:44,022:INFO:Preloading libraries
2023-05-19 14:10:44,024:INFO:Set up data.
2023-05-19 14:10:44,032:INFO:Set up index.
2023-05-19 14:12:14,406:INFO:Initializing load_model()
2023-05-19 14:12:14,406:INFO:load_model(model_name=path_to_trained_model, platform=None, authentication=None, verbose=True)
2023-05-19 16:46:15,506:INFO:Initializing get_config()
2023-05-19 16:46:15,506:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=X_train)
2023-05-19 16:46:15,506:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-05-19 16:46:15,506:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 16:46:15,520:INFO:Variable:  returned as                        obj_type                   name                info  \
38356  11-Residential Buildings  Battalgazi KonaklarÄ±  997-Not Applicable   
11065  11-Residential Buildings                Unknown  997-Not Applicable   
37617  11-Residential Buildings  Battalgazi KonaklarÄ±  997-Not Applicable   
43314  11-Residential Buildings                Unknown  997-Not Applicable   
3324   11-Residential Buildings                Antakya  997-Not Applicable   
...                         ...                    ...                 ...   
45492  11-Residential Buildings                Unknown  997-Not Applicable   
28079          995-Unclassified                Unknown  997-Not Applicable   
18755          995-Unclassified                bina 37  997-Not Applicable   
45828  11-Residential Buildings                Unknown  997-Not Applicable   
12075  11-Residential Buildings                Unknown  997-Not Applicable   

                 det_method        notation  or_src_id  dmg_src_id  \
38356  Photo-interpretation  Building block          1           2   
11065  Photo-interpretation  Building point          1           3   
37617  Photo-interpretation  Building block          1           2   
43314  Photo-interpretation  Building block          1           2   
3324   Photo-interpretation  Building block        994           2   
...                     ...             ...        ...         ...   
45492  Photo-interpretation  Building block          1           2   
28079  Photo-interpretation  Building point        994           3   
18755  Photo-interpretation  Building point        994           3   
45828  Photo-interpretation  Building block          1           2   
12075  Photo-interpretation  Building point          1           3   

             cd_value            real       city  ...  labour_fource  \
38356  Not Applicable  Not Applicable    malatya  ...      48.299999   
11065  Not Applicable             NaN     duzici  ...      48.099998   
37617  Not Applicable  Not Applicable    malatya  ...      48.299999   
43314  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
3324   Not Applicable  Not Applicable    antakya  ...      48.099998   
...               ...             ...        ...  ...            ...   
45492  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
28079  Not Applicable             NaN  gaziantep  ...      50.000000   
18755  Not Applicable             NaN  gaziantep  ...      50.000000   
45828  Not Applicable  Not Applicable  sanliurfa  ...      40.599998   
12075  Not Applicable             NaN     duzici  ...      48.099998   

       unemployment  agricultural  life_time  hb_per100000  fertility  \
38356          10.2       2729948  79.000000           369       1.63   
11065          17.1       1233061  78.000000           246       1.92   
37617          10.2       2729948  79.000000           369       1.63   
43314          15.0      10445551  77.699997           193       3.81   
3324           17.1     353508523  77.900002           266       2.41   
...             ...           ...        ...           ...        ...   
45492          15.0      10445551  77.699997           193       3.81   
28079          10.1       3466185  76.900002           306       2.47   
18755          10.1       3466185  76.900002           306       2.47   
45828          15.0      10445551  77.699997           193       3.81   
12075          17.1       1233061  78.000000           246       1.92   

       hh_size   latitude  longitude  nearest_fault_distance_km  
38356     3.40  38.360905  38.335613                  26.799759  
11065     3.46  37.250072  36.461296                  13.348521  
37617     3.40  38.348629  38.332813                  27.051903  
43314     5.12  37.111328  38.813618                  30.712105  
3324      3.65  36.220314  36.145325                   3.960193  
...        ...        ...        ...                        ...  
45492     5.12  37.159294  38.785412                  24.959866  
28079     3.97  37.047306  37.330624                  27.272057  
18755     3.97  37.068726  37.357052                  27.012213  
45828     5.12  37.163689  38.774944                  24.001522  
12075     3.46  37.246803  36.473488                  12.593074  

[39555 rows x 28 columns]
2023-05-19 16:46:15,520:INFO:get_config() successfully completed......................................
2023-05-19 16:46:15,520:INFO:Initializing get_config()
2023-05-19 16:46:15,520:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=X_test)
2023-05-19 16:46:15,520:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2023-05-19 16:46:15,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 16:46:15,534:INFO:Variable:  returned as                            obj_type            name  \
21289  12-Non-residential Buildings         Unknown   
34626      11-Residential Buildings         Unknown   
14454      11-Residential Buildings         Unknown   
5369       11-Residential Buildings         Antakya   
33464      11-Residential Buildings  PaÅa Bey Apt.   
...                             ...             ...   
17118      11-Residential Buildings         Unknown   
29372      11-Residential Buildings         Unknown   
27457              995-Unclassified         Unknown   
46106      11-Residential Buildings         Unknown   
1088       11-Residential Buildings         Unknown   

                                                    info  \
21289  1272-Buildings used as places of worship and f...   
34626                                 997-Not Applicable   
14454                                 997-Not Applicable   
5369                                  997-Not Applicable   
33464                                 997-Not Applicable   
...                                                  ...   
17118                                 997-Not Applicable   
29372                                 997-Not Applicable   
27457                                 997-Not Applicable   
46106                                 997-Not Applicable   
1088                                  997-Not Applicable   

                 det_method        notation  or_src_id  dmg_src_id  \
21289  Photo-interpretation  Building point        994           3   
34626  Photo-interpretation  Building point          2           2   
14454  Photo-interpretation  Building point          1           3   
5369   Photo-interpretation  Building block        994           3   
33464  Photo-interpretation  Building point          2           2   
...                     ...             ...        ...         ...   
17118  Photo-interpretation  Building point          1           3   
29372  Photo-interpretation  Building block        994           3   
27457  Photo-interpretation  Building point        994           3   
46106  Photo-interpretation  Building block          1           2   
1088   Photo-interpretation  Building block          1           3   

             cd_value            real           city  ...  labour_fource  \
21289  Not Applicable             NaN      gaziantep  ...      50.000000   
34626  Not Applicable             NaN  kahramanmaras  ...      48.099998   
14454  Not Applicable             NaN         duzici  ...      48.099998   
5369   Not Applicable  Not Applicable        antakya  ...      48.099998   
33464  Not Applicable             NaN  kahramanmaras  ...      48.099998   
...               ...             ...            ...  ...            ...   
17118  Not Applicable             NaN         duzici  ...      48.099998   
29372  Not Applicable            None       islahiye  ...      50.000000   
27457  Not Applicable             NaN      gaziantep  ...      50.000000   
46106  Not Applicable  Not Applicable      sanliurfa  ...      40.599998   
1088   Not Applicable  Not Applicable       adiyaman  ...      50.000000   

       unemployment  agricultural  life_time  hb_per100000  fertility  \
21289          10.1       3466185  76.900002           306       2.47   
34626          17.1       3535085  79.199997           256       1.99   
14454          17.1       1233061  78.000000           246       1.92   
5369           17.1     353508523  77.900002           266       2.41   
33464          17.1       3535085  79.199997           256       1.99   
...             ...           ...        ...           ...        ...   
17118          17.1       1233061  78.000000           246       1.92   
29372          10.1       3466185  76.900002           306       2.47   
27457          10.1       3466185  76.900002           306       2.47   
46106          15.0      10445551  77.699997           193       3.81   
1088           10.1       2336012  79.699997           222       2.36   

       hh_size   latitude  longitude  nearest_fault_distance_km  
21289     3.97  37.048706  37.352428                  28.372490  
34626     3.68  37.578091  36.852062                  19.392897  
14454     3.46  37.239449  36.440048                  12.551880  
5369      3.65  36.193863  36.165951                   1.617288  
33464     3.68  37.583317  36.898434                  20.267042  
...        ...        ...        ...                        ...  
17118     3.46  37.223080  36.442596                  13.315599  
29372     3.97  37.011391  36.620949                   1.598610  
27457     3.97  37.030128  37.336678                  29.123175  
46106     5.12  37.167301  38.778938                  23.907238  
1088      4.00  37.792057  38.242344                   7.806942  

[9889 rows x 28 columns]
2023-05-19 16:46:15,535:INFO:get_config() successfully completed......................................
2023-05-19 16:46:15,535:INFO:Initializing get_config()
2023-05-19 16:46:15,535:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=y_train)
2023-05-19 16:46:15,535:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2023-05-19 16:46:15,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 16:46:15,542:INFO:Variable:  returned as 38356    No visible damage
11065    No visible damage
37617    No visible damage
43314    No visible damage
3324     No visible damage
               ...        
45492    No visible damage
28079    No visible damage
18755    No visible damage
45828    No visible damage
12075    No visible damage
Name: damage_gra, Length: 39555, dtype: category
Categories (4, object): ['Damaged', 'Destroyed', 'No visible damage', 'Possibly damaged']
2023-05-19 16:46:15,542:INFO:get_config() successfully completed......................................
2023-05-19 16:46:15,542:INFO:Initializing get_config()
2023-05-19 16:46:15,542:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffafd56e0a0>, variable=y_test)
2023-05-19 16:46:15,542:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2023-05-19 16:46:15,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-05-19 16:46:15,546:INFO:Variable:  returned as 21289    No visible damage
34626    No visible damage
14454    No visible damage
5369     No visible damage
33464    No visible damage
               ...        
17118    No visible damage
29372    No visible damage
27457    No visible damage
46106    No visible damage
1088     No visible damage
Name: damage_gra, Length: 9889, dtype: category
Categories (4, object): ['Damaged', 'Destroyed', 'No visible damage', 'Possibly damaged']
2023-05-19 16:46:15,546:INFO:get_config() successfully completed......................................
2023-05-19 17:01:17,416:INFO:PyCaret ClassificationExperiment
2023-05-19 17:01:17,416:INFO:Logging name: clf-default-name
2023-05-19 17:01:17,416:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 17:01:17,416:INFO:version 3.0.2
2023-05-19 17:01:17,416:INFO:Initializing setup()
2023-05-19 17:01:17,416:INFO:self.USI: 1bc4
2023-05-19 17:01:17,416:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 17:01:17,416:INFO:Checking environment
2023-05-19 17:01:17,416:INFO:python_version: 3.8.16
2023-05-19 17:01:17,416:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 17:01:17,416:INFO:machine: x86_64
2023-05-19 17:01:17,416:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 17:01:17,416:INFO:Memory: svmem(total=16378347520, available=6144425984, percent=62.5, used=9154129920, free=2640355328, active=6817067008, inactive=5530624000, buffers=194547712, cached=4389314560, shared=707284992, slab=681689088)
2023-05-19 17:01:17,417:INFO:Physical Core: 10
2023-05-19 17:01:17,417:INFO:Logical Core: 16
2023-05-19 17:01:17,417:INFO:Checking libraries
2023-05-19 17:01:17,417:INFO:System:
2023-05-19 17:01:17,417:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 17:01:17,417:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 17:01:17,417:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 17:01:17,417:INFO:PyCaret required dependencies:
2023-05-19 17:01:17,417:INFO:                 pip: 23.0.1
2023-05-19 17:01:17,417:INFO:          setuptools: 66.0.0
2023-05-19 17:01:17,417:INFO:             pycaret: 3.0.2
2023-05-19 17:01:17,417:INFO:             IPython: 8.12.2
2023-05-19 17:01:17,417:INFO:          ipywidgets: 8.0.6
2023-05-19 17:01:17,417:INFO:                tqdm: 4.65.0
2023-05-19 17:01:17,417:INFO:               numpy: 1.23.5
2023-05-19 17:01:17,417:INFO:              pandas: 1.5.3
2023-05-19 17:01:17,417:INFO:              jinja2: 3.1.2
2023-05-19 17:01:17,417:INFO:               scipy: 1.10.1
2023-05-19 17:01:17,417:INFO:              joblib: 1.2.0
2023-05-19 17:01:17,417:INFO:             sklearn: 1.2.2
2023-05-19 17:01:17,417:INFO:                pyod: 1.0.9
2023-05-19 17:01:17,417:INFO:            imblearn: 0.10.1
2023-05-19 17:01:17,417:INFO:   category_encoders: 2.6.1
2023-05-19 17:01:17,417:INFO:            lightgbm: 3.3.5
2023-05-19 17:01:17,417:INFO:               numba: 0.57.0
2023-05-19 17:01:17,417:INFO:            requests: 2.29.0
2023-05-19 17:01:17,417:INFO:          matplotlib: 3.7.1
2023-05-19 17:01:17,417:INFO:          scikitplot: 0.3.7
2023-05-19 17:01:17,417:INFO:         yellowbrick: 1.5
2023-05-19 17:01:17,417:INFO:              plotly: 5.14.1
2023-05-19 17:01:17,417:INFO:             kaleido: 0.2.1
2023-05-19 17:01:17,417:INFO:         statsmodels: 0.14.0
2023-05-19 17:01:17,417:INFO:              sktime: 0.17.0
2023-05-19 17:01:17,417:INFO:               tbats: 1.1.3
2023-05-19 17:01:17,417:INFO:            pmdarima: 2.0.3
2023-05-19 17:01:17,417:INFO:              psutil: 5.9.0
2023-05-19 17:01:17,417:INFO:PyCaret optional dependencies:
2023-05-19 17:01:17,418:INFO:                shap: Not installed
2023-05-19 17:01:17,418:INFO:           interpret: Not installed
2023-05-19 17:01:17,418:INFO:                umap: Not installed
2023-05-19 17:01:17,418:INFO:    pandas_profiling: Not installed
2023-05-19 17:01:17,418:INFO:  explainerdashboard: Not installed
2023-05-19 17:01:17,418:INFO:             autoviz: Not installed
2023-05-19 17:01:17,418:INFO:           fairlearn: Not installed
2023-05-19 17:01:17,418:INFO:             xgboost: Not installed
2023-05-19 17:01:17,418:INFO:            catboost: Not installed
2023-05-19 17:01:17,418:INFO:              kmodes: Not installed
2023-05-19 17:01:17,418:INFO:             mlxtend: Not installed
2023-05-19 17:01:17,418:INFO:       statsforecast: Not installed
2023-05-19 17:01:17,418:INFO:        tune_sklearn: Not installed
2023-05-19 17:01:17,418:INFO:                 ray: Not installed
2023-05-19 17:01:17,418:INFO:            hyperopt: Not installed
2023-05-19 17:01:17,418:INFO:              optuna: Not installed
2023-05-19 17:01:17,418:INFO:               skopt: Not installed
2023-05-19 17:01:17,418:INFO:              mlflow: Not installed
2023-05-19 17:01:17,418:INFO:              gradio: Not installed
2023-05-19 17:01:17,418:INFO:             fastapi: Not installed
2023-05-19 17:01:17,418:INFO:             uvicorn: Not installed
2023-05-19 17:01:17,418:INFO:              m2cgen: Not installed
2023-05-19 17:01:17,418:INFO:           evidently: Not installed
2023-05-19 17:01:17,418:INFO:               fugue: Not installed
2023-05-19 17:01:17,418:INFO:           streamlit: Not installed
2023-05-19 17:01:17,418:INFO:             prophet: Not installed
2023-05-19 17:01:17,418:INFO:None
2023-05-19 17:01:17,418:INFO:Set up data.
2023-05-19 17:01:17,484:INFO:Set up train/test split.
2023-05-19 17:01:17,519:INFO:Set up index.
2023-05-19 17:01:17,520:INFO:Set up folding strategy.
2023-05-19 17:01:17,520:INFO:Assigning column types.
2023-05-19 17:01:17,526:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 17:01:17,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,552:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,588:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,602:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 17:01:17,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:01:17,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,674:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 17:01:17,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:17,757:INFO:Preparing preprocessing pipeline...
2023-05-19 17:01:17,759:INFO:Set up label encoding.
2023-05-19 17:01:17,759:INFO:Set up simple imputation.
2023-05-19 17:01:17,765:INFO:Set up encoding of ordinal features.
2023-05-19 17:01:17,771:INFO:Set up encoding of categorical features.
2023-05-19 17:01:17,771:INFO:Set up feature normalization.
2023-05-19 17:01:18,227:INFO:Finished creating preprocessing pipeline.
2023-05-19 17:01:18,256:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 TransformerWrapper(exclude=None, include=['name', 'info'],
                                    transformer=TargetEncoder(cols=['name',
                                                                    'info'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-19 17:01:18,256:INFO:Creating final display dataframe.
2023-05-19 17:01:18,408:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                         (49444, 29)  
5                                         (49444, 49)  
6                                         (39555, 49)  
7                                          (9889, 49)  
8                                                   3  
9                                                  20  
10                                                  8  
11                                              58.2%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               1bc4  
2023-05-19 17:01:18,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:18,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:18,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:18,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:01:18,519:INFO:setup() successfully completed in 1.12s...............
2023-05-19 17:01:18,519:INFO:Initializing compare_models()
2023-05-19 17:01:18,519:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:01:18,519:INFO:Checking exceptions
2023-05-19 17:01:18,526:INFO:Preparing display monitor
2023-05-19 17:01:18,546:INFO:Initializing Logistic Regression
2023-05-19 17:01:18,546:INFO:Total runtime is 2.2490819295247396e-06 minutes
2023-05-19 17:01:18,548:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:18,548:INFO:Initializing create_model()
2023-05-19 17:01:18,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:18,548:INFO:Checking exceptions
2023-05-19 17:01:18,548:INFO:Importing libraries
2023-05-19 17:01:18,548:INFO:Copying training dataset
2023-05-19 17:01:18,560:INFO:Defining folds
2023-05-19 17:01:18,560:INFO:Declaring metric variables
2023-05-19 17:01:18,563:INFO:Importing untrained model
2023-05-19 17:01:18,566:INFO:Logistic Regression Imported successfully
2023-05-19 17:01:18,571:INFO:Starting cross validation
2023-05-19 17:01:18,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:21,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,357:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,405:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,416:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,475:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,563:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:21,870:INFO:Calculating mean and std
2023-05-19 17:01:21,874:INFO:Creating metrics dataframe
2023-05-19 17:01:21,891:INFO:Uploading results into container
2023-05-19 17:01:21,891:INFO:Uploading model into container now
2023-05-19 17:01:21,892:INFO:_master_model_container: 1
2023-05-19 17:01:21,892:INFO:_display_container: 2
2023-05-19 17:01:21,892:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:01:21,892:INFO:create_model() successfully completed......................................
2023-05-19 17:01:22,040:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:22,041:INFO:Creating metrics dataframe
2023-05-19 17:01:22,047:INFO:Initializing K Neighbors Classifier
2023-05-19 17:01:22,047:INFO:Total runtime is 0.05835166374842325 minutes
2023-05-19 17:01:22,049:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:22,049:INFO:Initializing create_model()
2023-05-19 17:01:22,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:22,050:INFO:Checking exceptions
2023-05-19 17:01:22,050:INFO:Importing libraries
2023-05-19 17:01:22,050:INFO:Copying training dataset
2023-05-19 17:01:22,062:INFO:Defining folds
2023-05-19 17:01:22,062:INFO:Declaring metric variables
2023-05-19 17:01:22,065:INFO:Importing untrained model
2023-05-19 17:01:22,067:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:01:22,072:INFO:Starting cross validation
2023-05-19 17:01:22,074:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:26,394:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,404:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,559:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,577:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:26,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,088:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,302:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:27,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,107:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,193:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,220:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:28,377:INFO:Calculating mean and std
2023-05-19 17:01:28,379:INFO:Creating metrics dataframe
2023-05-19 17:01:28,395:INFO:Uploading results into container
2023-05-19 17:01:28,395:INFO:Uploading model into container now
2023-05-19 17:01:28,396:INFO:_master_model_container: 2
2023-05-19 17:01:28,396:INFO:_display_container: 2
2023-05-19 17:01:28,396:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:01:28,396:INFO:create_model() successfully completed......................................
2023-05-19 17:01:28,522:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:28,522:INFO:Creating metrics dataframe
2023-05-19 17:01:28,529:INFO:Initializing Naive Bayes
2023-05-19 17:01:28,529:INFO:Total runtime is 0.16638844410578407 minutes
2023-05-19 17:01:28,532:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:28,532:INFO:Initializing create_model()
2023-05-19 17:01:28,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:28,532:INFO:Checking exceptions
2023-05-19 17:01:28,532:INFO:Importing libraries
2023-05-19 17:01:28,532:INFO:Copying training dataset
2023-05-19 17:01:28,544:INFO:Defining folds
2023-05-19 17:01:28,544:INFO:Declaring metric variables
2023-05-19 17:01:28,548:INFO:Importing untrained model
2023-05-19 17:01:28,550:INFO:Naive Bayes Imported successfully
2023-05-19 17:01:28,555:INFO:Starting cross validation
2023-05-19 17:01:28,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:29,218:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,243:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,250:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,260:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,262:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,304:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,352:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,448:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,489:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:29,617:INFO:Calculating mean and std
2023-05-19 17:01:29,619:INFO:Creating metrics dataframe
2023-05-19 17:01:29,634:INFO:Uploading results into container
2023-05-19 17:01:29,635:INFO:Uploading model into container now
2023-05-19 17:01:29,635:INFO:_master_model_container: 3
2023-05-19 17:01:29,635:INFO:_display_container: 2
2023-05-19 17:01:29,636:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:01:29,636:INFO:create_model() successfully completed......................................
2023-05-19 17:01:29,761:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:29,761:INFO:Creating metrics dataframe
2023-05-19 17:01:29,767:INFO:Initializing Decision Tree Classifier
2023-05-19 17:01:29,768:INFO:Total runtime is 0.18702901999155677 minutes
2023-05-19 17:01:29,769:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:29,769:INFO:Initializing create_model()
2023-05-19 17:01:29,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:29,770:INFO:Checking exceptions
2023-05-19 17:01:29,770:INFO:Importing libraries
2023-05-19 17:01:29,770:INFO:Copying training dataset
2023-05-19 17:01:29,780:INFO:Defining folds
2023-05-19 17:01:29,780:INFO:Declaring metric variables
2023-05-19 17:01:29,783:INFO:Importing untrained model
2023-05-19 17:01:29,787:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:01:29,792:INFO:Starting cross validation
2023-05-19 17:01:29,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:30,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,396:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,433:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,451:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,575:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,590:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,603:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,604:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:30,737:INFO:Calculating mean and std
2023-05-19 17:01:30,740:INFO:Creating metrics dataframe
2023-05-19 17:01:30,758:INFO:Uploading results into container
2023-05-19 17:01:30,759:INFO:Uploading model into container now
2023-05-19 17:01:30,759:INFO:_master_model_container: 4
2023-05-19 17:01:30,759:INFO:_display_container: 2
2023-05-19 17:01:30,759:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:01:30,759:INFO:create_model() successfully completed......................................
2023-05-19 17:01:30,888:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:30,888:INFO:Creating metrics dataframe
2023-05-19 17:01:30,894:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:01:30,895:INFO:Total runtime is 0.20581254561742143 minutes
2023-05-19 17:01:30,896:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:30,897:INFO:Initializing create_model()
2023-05-19 17:01:30,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:30,897:INFO:Checking exceptions
2023-05-19 17:01:30,897:INFO:Importing libraries
2023-05-19 17:01:30,897:INFO:Copying training dataset
2023-05-19 17:01:30,906:INFO:Defining folds
2023-05-19 17:01:30,906:INFO:Declaring metric variables
2023-05-19 17:01:30,908:INFO:Importing untrained model
2023-05-19 17:01:30,911:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:01:30,914:INFO:Starting cross validation
2023-05-19 17:01:30,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:31,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,475:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,483:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,502:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,545:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,598:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,604:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,631:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,674:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,681:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:01:31,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,724:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:31,841:INFO:Calculating mean and std
2023-05-19 17:01:31,843:INFO:Creating metrics dataframe
2023-05-19 17:01:31,860:INFO:Uploading results into container
2023-05-19 17:01:31,860:INFO:Uploading model into container now
2023-05-19 17:01:31,860:INFO:_master_model_container: 5
2023-05-19 17:01:31,860:INFO:_display_container: 2
2023-05-19 17:01:31,861:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:01:31,861:INFO:create_model() successfully completed......................................
2023-05-19 17:01:31,982:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:31,982:INFO:Creating metrics dataframe
2023-05-19 17:01:31,988:INFO:Initializing Ridge Classifier
2023-05-19 17:01:31,988:INFO:Total runtime is 0.22404318253199257 minutes
2023-05-19 17:01:31,991:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:31,991:INFO:Initializing create_model()
2023-05-19 17:01:31,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:31,991:INFO:Checking exceptions
2023-05-19 17:01:31,991:INFO:Importing libraries
2023-05-19 17:01:31,991:INFO:Copying training dataset
2023-05-19 17:01:32,004:INFO:Defining folds
2023-05-19 17:01:32,004:INFO:Declaring metric variables
2023-05-19 17:01:32,007:INFO:Importing untrained model
2023-05-19 17:01:32,010:INFO:Ridge Classifier Imported successfully
2023-05-19 17:01:32,014:INFO:Starting cross validation
2023-05-19 17:01:32,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:32,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,614:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,670:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,689:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,689:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,700:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,737:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,754:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,813:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,830:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,841:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,848:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:01:32,853:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:32,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:32,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:33,011:INFO:Calculating mean and std
2023-05-19 17:01:33,013:INFO:Creating metrics dataframe
2023-05-19 17:01:33,029:INFO:Uploading results into container
2023-05-19 17:01:33,029:INFO:Uploading model into container now
2023-05-19 17:01:33,030:INFO:_master_model_container: 6
2023-05-19 17:01:33,030:INFO:_display_container: 2
2023-05-19 17:01:33,030:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:01:33,030:INFO:create_model() successfully completed......................................
2023-05-19 17:01:33,158:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:33,158:INFO:Creating metrics dataframe
2023-05-19 17:01:33,165:INFO:Initializing Random Forest Classifier
2023-05-19 17:01:33,165:INFO:Total runtime is 0.24365450541178382 minutes
2023-05-19 17:01:33,167:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:33,168:INFO:Initializing create_model()
2023-05-19 17:01:33,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:33,168:INFO:Checking exceptions
2023-05-19 17:01:33,168:INFO:Importing libraries
2023-05-19 17:01:33,168:INFO:Copying training dataset
2023-05-19 17:01:33,178:INFO:Defining folds
2023-05-19 17:01:33,178:INFO:Declaring metric variables
2023-05-19 17:01:33,182:INFO:Importing untrained model
2023-05-19 17:01:33,185:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:01:33,190:INFO:Starting cross validation
2023-05-19 17:01:33,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:34,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,189:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,229:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,260:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,539:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:34,668:INFO:Calculating mean and std
2023-05-19 17:01:34,671:INFO:Creating metrics dataframe
2023-05-19 17:01:34,686:INFO:Uploading results into container
2023-05-19 17:01:34,687:INFO:Uploading model into container now
2023-05-19 17:01:34,687:INFO:_master_model_container: 7
2023-05-19 17:01:34,687:INFO:_display_container: 2
2023-05-19 17:01:34,687:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:01:34,687:INFO:create_model() successfully completed......................................
2023-05-19 17:01:34,814:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:34,814:INFO:Creating metrics dataframe
2023-05-19 17:01:34,821:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:01:34,821:INFO:Total runtime is 0.2712538441022237 minutes
2023-05-19 17:01:34,824:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:34,824:INFO:Initializing create_model()
2023-05-19 17:01:34,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:34,824:INFO:Checking exceptions
2023-05-19 17:01:34,824:INFO:Importing libraries
2023-05-19 17:01:34,824:INFO:Copying training dataset
2023-05-19 17:01:34,836:INFO:Defining folds
2023-05-19 17:01:34,836:INFO:Declaring metric variables
2023-05-19 17:01:34,839:INFO:Importing untrained model
2023-05-19 17:01:34,842:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:01:34,847:INFO:Starting cross validation
2023-05-19 17:01:34,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:35,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,483:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,507:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,540:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,583:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,614:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,674:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,689:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:35,865:INFO:Calculating mean and std
2023-05-19 17:01:35,867:INFO:Creating metrics dataframe
2023-05-19 17:01:35,884:INFO:Uploading results into container
2023-05-19 17:01:35,885:INFO:Uploading model into container now
2023-05-19 17:01:35,885:INFO:_master_model_container: 8
2023-05-19 17:01:35,885:INFO:_display_container: 2
2023-05-19 17:01:35,886:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:01:35,886:INFO:create_model() successfully completed......................................
2023-05-19 17:01:36,011:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:36,011:INFO:Creating metrics dataframe
2023-05-19 17:01:36,018:INFO:Initializing Ada Boost Classifier
2023-05-19 17:01:36,018:INFO:Total runtime is 0.29120204846064246 minutes
2023-05-19 17:01:36,020:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:36,020:INFO:Initializing create_model()
2023-05-19 17:01:36,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:36,021:INFO:Checking exceptions
2023-05-19 17:01:36,021:INFO:Importing libraries
2023-05-19 17:01:36,021:INFO:Copying training dataset
2023-05-19 17:01:36,032:INFO:Defining folds
2023-05-19 17:01:36,032:INFO:Declaring metric variables
2023-05-19 17:01:36,034:INFO:Importing untrained model
2023-05-19 17:01:36,037:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:01:36,042:INFO:Starting cross validation
2023-05-19 17:01:36,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:36,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,750:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,767:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,821:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,838:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,856:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,893:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,897:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,908:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:36,968:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:37,048:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:37,058:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:37,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:37,185:INFO:Calculating mean and std
2023-05-19 17:01:37,187:INFO:Creating metrics dataframe
2023-05-19 17:01:37,208:INFO:Uploading results into container
2023-05-19 17:01:37,209:INFO:Uploading model into container now
2023-05-19 17:01:37,209:INFO:_master_model_container: 9
2023-05-19 17:01:37,209:INFO:_display_container: 2
2023-05-19 17:01:37,209:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:01:37,209:INFO:create_model() successfully completed......................................
2023-05-19 17:01:37,333:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:37,333:INFO:Creating metrics dataframe
2023-05-19 17:01:37,341:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:01:37,341:INFO:Total runtime is 0.3132526834805806 minutes
2023-05-19 17:01:37,345:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:37,345:INFO:Initializing create_model()
2023-05-19 17:01:37,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:37,345:INFO:Checking exceptions
2023-05-19 17:01:37,345:INFO:Importing libraries
2023-05-19 17:01:37,345:INFO:Copying training dataset
2023-05-19 17:01:37,355:INFO:Defining folds
2023-05-19 17:01:37,355:INFO:Declaring metric variables
2023-05-19 17:01:37,358:INFO:Importing untrained model
2023-05-19 17:01:37,361:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:01:37,366:INFO:Starting cross validation
2023-05-19 17:01:37,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:38,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,340:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,355:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,517:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,585:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,630:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:38,769:INFO:Calculating mean and std
2023-05-19 17:01:38,771:INFO:Creating metrics dataframe
2023-05-19 17:01:38,786:INFO:Uploading results into container
2023-05-19 17:01:38,787:INFO:Uploading model into container now
2023-05-19 17:01:38,787:INFO:_master_model_container: 10
2023-05-19 17:01:38,787:INFO:_display_container: 2
2023-05-19 17:01:38,787:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:01:38,787:INFO:create_model() successfully completed......................................
2023-05-19 17:01:38,910:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:38,910:INFO:Creating metrics dataframe
2023-05-19 17:01:38,917:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:01:38,917:INFO:Total runtime is 0.33951921065648394 minutes
2023-05-19 17:01:38,920:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:38,920:INFO:Initializing create_model()
2023-05-19 17:01:38,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:38,920:INFO:Checking exceptions
2023-05-19 17:01:38,920:INFO:Importing libraries
2023-05-19 17:01:38,921:INFO:Copying training dataset
2023-05-19 17:01:38,931:INFO:Defining folds
2023-05-19 17:01:38,932:INFO:Declaring metric variables
2023-05-19 17:01:38,935:INFO:Importing untrained model
2023-05-19 17:01:38,937:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:01:38,942:INFO:Starting cross validation
2023-05-19 17:01:38,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:39,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,511:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,514:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,525:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,547:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,548:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,640:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,673:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,804:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,813:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:39,929:INFO:Calculating mean and std
2023-05-19 17:01:39,931:INFO:Creating metrics dataframe
2023-05-19 17:01:39,947:INFO:Uploading results into container
2023-05-19 17:01:39,947:INFO:Uploading model into container now
2023-05-19 17:01:39,947:INFO:_master_model_container: 11
2023-05-19 17:01:39,947:INFO:_display_container: 2
2023-05-19 17:01:39,948:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:01:39,948:INFO:create_model() successfully completed......................................
2023-05-19 17:01:40,069:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:40,069:INFO:Creating metrics dataframe
2023-05-19 17:01:40,077:INFO:Initializing Extra Trees Classifier
2023-05-19 17:01:40,077:INFO:Total runtime is 0.35885934034983313 minutes
2023-05-19 17:01:40,080:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:40,080:INFO:Initializing create_model()
2023-05-19 17:01:40,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:40,080:INFO:Checking exceptions
2023-05-19 17:01:40,080:INFO:Importing libraries
2023-05-19 17:01:40,080:INFO:Copying training dataset
2023-05-19 17:01:40,091:INFO:Defining folds
2023-05-19 17:01:40,092:INFO:Declaring metric variables
2023-05-19 17:01:40,094:INFO:Importing untrained model
2023-05-19 17:01:40,096:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:01:40,101:INFO:Starting cross validation
2023-05-19 17:01:40,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:41,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,199:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,224:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,259:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,288:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,404:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,437:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,580:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,583:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:41,793:INFO:Calculating mean and std
2023-05-19 17:01:41,807:INFO:Creating metrics dataframe
2023-05-19 17:01:41,829:INFO:Uploading results into container
2023-05-19 17:01:41,830:INFO:Uploading model into container now
2023-05-19 17:01:41,830:INFO:_master_model_container: 12
2023-05-19 17:01:41,830:INFO:_display_container: 2
2023-05-19 17:01:41,831:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:01:41,831:INFO:create_model() successfully completed......................................
2023-05-19 17:01:41,970:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:41,970:INFO:Creating metrics dataframe
2023-05-19 17:01:41,979:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:01:41,979:INFO:Total runtime is 0.3905549963315328 minutes
2023-05-19 17:01:41,981:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:41,981:INFO:Initializing create_model()
2023-05-19 17:01:41,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:41,982:INFO:Checking exceptions
2023-05-19 17:01:41,982:INFO:Importing libraries
2023-05-19 17:01:41,982:INFO:Copying training dataset
2023-05-19 17:01:41,990:INFO:Defining folds
2023-05-19 17:01:41,991:INFO:Declaring metric variables
2023-05-19 17:01:41,993:INFO:Importing untrained model
2023-05-19 17:01:41,995:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:01:42,001:INFO:Starting cross validation
2023-05-19 17:01:42,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:42,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:42,957:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:42,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:42,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:42,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:42,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,002:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,034:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,113:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,150:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,158:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,177:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,195:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,205:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,219:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,225:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,250:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:43,378:INFO:Calculating mean and std
2023-05-19 17:01:43,380:INFO:Creating metrics dataframe
2023-05-19 17:01:43,397:INFO:Uploading results into container
2023-05-19 17:01:43,397:INFO:Uploading model into container now
2023-05-19 17:01:43,397:INFO:_master_model_container: 13
2023-05-19 17:01:43,397:INFO:_display_container: 2
2023-05-19 17:01:43,398:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:01:43,398:INFO:create_model() successfully completed......................................
2023-05-19 17:01:43,520:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:43,520:INFO:Creating metrics dataframe
2023-05-19 17:01:43,528:INFO:Initializing Dummy Classifier
2023-05-19 17:01:43,528:INFO:Total runtime is 0.4163722078005473 minutes
2023-05-19 17:01:43,530:INFO:SubProcess create_model() called ==================================
2023-05-19 17:01:43,530:INFO:Initializing create_model()
2023-05-19 17:01:43,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffb55b94790>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:43,530:INFO:Checking exceptions
2023-05-19 17:01:43,531:INFO:Importing libraries
2023-05-19 17:01:43,531:INFO:Copying training dataset
2023-05-19 17:01:43,541:INFO:Defining folds
2023-05-19 17:01:43,542:INFO:Declaring metric variables
2023-05-19 17:01:43,545:INFO:Importing untrained model
2023-05-19 17:01:43,548:INFO:Dummy Classifier Imported successfully
2023-05-19 17:01:43,552:INFO:Starting cross validation
2023-05-19 17:01:43,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:01:44,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,104:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,176:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,197:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,205:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,213:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,219:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,253:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,260:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:01:44,326:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:01:44,443:INFO:Calculating mean and std
2023-05-19 17:01:44,445:INFO:Creating metrics dataframe
2023-05-19 17:01:44,464:INFO:Uploading results into container
2023-05-19 17:01:44,465:INFO:Uploading model into container now
2023-05-19 17:01:44,465:INFO:_master_model_container: 14
2023-05-19 17:01:44,465:INFO:_display_container: 2
2023-05-19 17:01:44,465:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:01:44,465:INFO:create_model() successfully completed......................................
2023-05-19 17:01:44,596:INFO:SubProcess create_model() end ==================================
2023-05-19 17:01:44,596:INFO:Creating metrics dataframe
2023-05-19 17:01:44,614:INFO:Initializing create_model()
2023-05-19 17:01:44,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:01:44,615:INFO:Checking exceptions
2023-05-19 17:01:44,616:INFO:Importing libraries
2023-05-19 17:01:44,616:INFO:Copying training dataset
2023-05-19 17:01:44,630:INFO:Defining folds
2023-05-19 17:01:44,630:INFO:Declaring metric variables
2023-05-19 17:01:44,630:INFO:Importing untrained model
2023-05-19 17:01:44,630:INFO:Declaring custom model
2023-05-19 17:01:44,631:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:01:44,632:INFO:Cross validation set to False
2023-05-19 17:01:44,632:INFO:Fitting Model
2023-05-19 17:01:45,136:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:01:45,136:INFO:create_model() successfully completed......................................
2023-05-19 17:01:45,280:INFO:_master_model_container: 14
2023-05-19 17:01:45,280:INFO:_display_container: 2
2023-05-19 17:01:45,280:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:01:45,280:INFO:compare_models() successfully completed......................................
2023-05-19 17:01:45,281:INFO:Initializing finalize_model()
2023-05-19 17:01:45,281:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-19 17:01:45,282:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:01:45,290:INFO:Initializing create_model()
2023-05-19 17:01:45,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-19 17:01:45,290:INFO:Checking exceptions
2023-05-19 17:01:45,291:INFO:Importing libraries
2023-05-19 17:01:45,291:INFO:Copying training dataset
2023-05-19 17:01:45,291:INFO:Defining folds
2023-05-19 17:01:45,291:INFO:Declaring metric variables
2023-05-19 17:01:45,291:INFO:Importing untrained model
2023-05-19 17:01:45,291:INFO:Declaring custom model
2023-05-19 17:01:45,292:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:01:45,293:INFO:Cross validation set to False
2023-05-19 17:01:45,293:INFO:Fitting Model
2023-05-19 17:01:45,878:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 17:01:45,878:INFO:create_model() successfully completed......................................
2023-05-19 17:01:45,999:INFO:_master_model_container: 14
2023-05-19 17:01:45,999:INFO:_display_container: 2
2023-05-19 17:01:46,018:INFO:Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        n_estimators=100, n_jobs=-1,
                                        oob_score=False, random_state=42,
                                        verbose=0, warm_start=False))],
         verbose=False)
2023-05-19 17:01:46,018:INFO:finalize_model() successfully completed......................................
2023-05-19 17:02:13,521:INFO:Initializing compare_models()
2023-05-19 17:02:13,521:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:02:13,521:INFO:Checking exceptions
2023-05-19 17:02:13,529:INFO:Preparing display monitor
2023-05-19 17:02:13,552:INFO:Initializing Logistic Regression
2023-05-19 17:02:13,552:INFO:Total runtime is 4.343191782633463e-06 minutes
2023-05-19 17:02:13,555:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:13,555:INFO:Initializing create_model()
2023-05-19 17:02:13,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:13,556:INFO:Checking exceptions
2023-05-19 17:02:13,556:INFO:Importing libraries
2023-05-19 17:02:13,556:INFO:Copying training dataset
2023-05-19 17:02:13,569:INFO:Defining folds
2023-05-19 17:02:13,569:INFO:Declaring metric variables
2023-05-19 17:02:13,572:INFO:Importing untrained model
2023-05-19 17:02:13,575:INFO:Logistic Regression Imported successfully
2023-05-19 17:02:13,581:INFO:Starting cross validation
2023-05-19 17:02:13,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:14,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,163:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,165:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,165:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,182:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,184:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,223:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,306:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,379:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,405:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:14,549:INFO:Calculating mean and std
2023-05-19 17:02:14,552:INFO:Creating metrics dataframe
2023-05-19 17:02:14,572:INFO:Uploading results into container
2023-05-19 17:02:14,572:INFO:Uploading model into container now
2023-05-19 17:02:14,573:INFO:_master_model_container: 15
2023-05-19 17:02:14,573:INFO:_display_container: 3
2023-05-19 17:02:14,573:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:02:14,573:INFO:create_model() successfully completed......................................
2023-05-19 17:02:14,716:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:14,716:INFO:Creating metrics dataframe
2023-05-19 17:02:14,722:INFO:Initializing K Neighbors Classifier
2023-05-19 17:02:14,722:INFO:Total runtime is 0.019506470362345377 minutes
2023-05-19 17:02:14,725:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:14,725:INFO:Initializing create_model()
2023-05-19 17:02:14,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:14,725:INFO:Checking exceptions
2023-05-19 17:02:14,725:INFO:Importing libraries
2023-05-19 17:02:14,725:INFO:Copying training dataset
2023-05-19 17:02:14,737:INFO:Defining folds
2023-05-19 17:02:14,737:INFO:Declaring metric variables
2023-05-19 17:02:14,740:INFO:Importing untrained model
2023-05-19 17:02:14,743:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:02:14,747:INFO:Starting cross validation
2023-05-19 17:02:14,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:18,689:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,834:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,841:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,852:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,907:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:18,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:19,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:19,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,103:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,199:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,274:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:20,421:INFO:Calculating mean and std
2023-05-19 17:02:20,423:INFO:Creating metrics dataframe
2023-05-19 17:02:20,439:INFO:Uploading results into container
2023-05-19 17:02:20,440:INFO:Uploading model into container now
2023-05-19 17:02:20,440:INFO:_master_model_container: 16
2023-05-19 17:02:20,440:INFO:_display_container: 3
2023-05-19 17:02:20,440:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:02:20,440:INFO:create_model() successfully completed......................................
2023-05-19 17:02:20,578:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:20,578:INFO:Creating metrics dataframe
2023-05-19 17:02:20,585:INFO:Initializing Naive Bayes
2023-05-19 17:02:20,586:INFO:Total runtime is 0.11722728013992309 minutes
2023-05-19 17:02:20,588:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:20,589:INFO:Initializing create_model()
2023-05-19 17:02:20,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:20,589:INFO:Checking exceptions
2023-05-19 17:02:20,589:INFO:Importing libraries
2023-05-19 17:02:20,589:INFO:Copying training dataset
2023-05-19 17:02:20,601:INFO:Defining folds
2023-05-19 17:02:20,601:INFO:Declaring metric variables
2023-05-19 17:02:20,604:INFO:Importing untrained model
2023-05-19 17:02:20,608:INFO:Naive Bayes Imported successfully
2023-05-19 17:02:20,613:INFO:Starting cross validation
2023-05-19 17:02:20,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:21,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,322:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,488:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,488:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,502:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,504:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,518:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:21,683:INFO:Calculating mean and std
2023-05-19 17:02:21,684:INFO:Creating metrics dataframe
2023-05-19 17:02:21,698:INFO:Uploading results into container
2023-05-19 17:02:21,699:INFO:Uploading model into container now
2023-05-19 17:02:21,699:INFO:_master_model_container: 17
2023-05-19 17:02:21,699:INFO:_display_container: 3
2023-05-19 17:02:21,699:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:02:21,699:INFO:create_model() successfully completed......................................
2023-05-19 17:02:21,849:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:21,849:INFO:Creating metrics dataframe
2023-05-19 17:02:21,856:INFO:Initializing Decision Tree Classifier
2023-05-19 17:02:21,857:INFO:Total runtime is 0.13840946356455486 minutes
2023-05-19 17:02:21,859:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:21,860:INFO:Initializing create_model()
2023-05-19 17:02:21,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:21,860:INFO:Checking exceptions
2023-05-19 17:02:21,860:INFO:Importing libraries
2023-05-19 17:02:21,860:INFO:Copying training dataset
2023-05-19 17:02:21,871:INFO:Defining folds
2023-05-19 17:02:21,872:INFO:Declaring metric variables
2023-05-19 17:02:21,875:INFO:Importing untrained model
2023-05-19 17:02:21,878:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:02:21,883:INFO:Starting cross validation
2023-05-19 17:02:21,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:22,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,511:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,518:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,562:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,572:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,725:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,742:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:22,882:INFO:Calculating mean and std
2023-05-19 17:02:22,883:INFO:Creating metrics dataframe
2023-05-19 17:02:22,897:INFO:Uploading results into container
2023-05-19 17:02:22,897:INFO:Uploading model into container now
2023-05-19 17:02:22,898:INFO:_master_model_container: 18
2023-05-19 17:02:22,898:INFO:_display_container: 3
2023-05-19 17:02:22,898:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:02:22,898:INFO:create_model() successfully completed......................................
2023-05-19 17:02:23,038:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:23,038:INFO:Creating metrics dataframe
2023-05-19 17:02:23,047:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:02:23,047:INFO:Total runtime is 0.15825687249501547 minutes
2023-05-19 17:02:23,050:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:23,051:INFO:Initializing create_model()
2023-05-19 17:02:23,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:23,051:INFO:Checking exceptions
2023-05-19 17:02:23,051:INFO:Importing libraries
2023-05-19 17:02:23,051:INFO:Copying training dataset
2023-05-19 17:02:23,063:INFO:Defining folds
2023-05-19 17:02:23,063:INFO:Declaring metric variables
2023-05-19 17:02:23,066:INFO:Importing untrained model
2023-05-19 17:02:23,069:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:02:23,075:INFO:Starting cross validation
2023-05-19 17:02:23,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:23,590:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,598:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,616:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,618:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,626:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,634:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,640:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,642:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,670:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,674:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,681:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,687:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,740:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,826:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:02:23,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,908:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:23,918:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,036:INFO:Calculating mean and std
2023-05-19 17:02:24,037:INFO:Creating metrics dataframe
2023-05-19 17:02:24,052:INFO:Uploading results into container
2023-05-19 17:02:24,052:INFO:Uploading model into container now
2023-05-19 17:02:24,053:INFO:_master_model_container: 19
2023-05-19 17:02:24,053:INFO:_display_container: 3
2023-05-19 17:02:24,053:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:02:24,053:INFO:create_model() successfully completed......................................
2023-05-19 17:02:24,184:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:24,184:INFO:Creating metrics dataframe
2023-05-19 17:02:24,190:INFO:Initializing Ridge Classifier
2023-05-19 17:02:24,190:INFO:Total runtime is 0.1773066282272339 minutes
2023-05-19 17:02:24,193:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:24,193:INFO:Initializing create_model()
2023-05-19 17:02:24,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:24,193:INFO:Checking exceptions
2023-05-19 17:02:24,193:INFO:Importing libraries
2023-05-19 17:02:24,193:INFO:Copying training dataset
2023-05-19 17:02:24,206:INFO:Defining folds
2023-05-19 17:02:24,206:INFO:Declaring metric variables
2023-05-19 17:02:24,208:INFO:Importing untrained model
2023-05-19 17:02:24,211:INFO:Ridge Classifier Imported successfully
2023-05-19 17:02:24,215:INFO:Starting cross validation
2023-05-19 17:02:24,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:24,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,742:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,760:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,778:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,807:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,809:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,809:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,817:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,825:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,828:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,836:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,842:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,850:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,851:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,857:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:24,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,918:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:24,988:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:24,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:25,002:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,002:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,016:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,016:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:02:25,052:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,065:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:25,195:INFO:Calculating mean and std
2023-05-19 17:02:25,197:INFO:Creating metrics dataframe
2023-05-19 17:02:25,214:INFO:Uploading results into container
2023-05-19 17:02:25,215:INFO:Uploading model into container now
2023-05-19 17:02:25,215:INFO:_master_model_container: 20
2023-05-19 17:02:25,215:INFO:_display_container: 3
2023-05-19 17:02:25,215:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:02:25,215:INFO:create_model() successfully completed......................................
2023-05-19 17:02:25,346:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:25,346:INFO:Creating metrics dataframe
2023-05-19 17:02:25,353:INFO:Initializing Random Forest Classifier
2023-05-19 17:02:25,354:INFO:Total runtime is 0.19669434626897175 minutes
2023-05-19 17:02:25,356:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:25,356:INFO:Initializing create_model()
2023-05-19 17:02:25,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:25,356:INFO:Checking exceptions
2023-05-19 17:02:25,356:INFO:Importing libraries
2023-05-19 17:02:25,356:INFO:Copying training dataset
2023-05-19 17:02:25,369:INFO:Defining folds
2023-05-19 17:02:25,369:INFO:Declaring metric variables
2023-05-19 17:02:25,372:INFO:Importing untrained model
2023-05-19 17:02:25,375:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:02:25,380:INFO:Starting cross validation
2023-05-19 17:02:25,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:26,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,266:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,274:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,332:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,502:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,502:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:26,656:INFO:Calculating mean and std
2023-05-19 17:02:26,659:INFO:Creating metrics dataframe
2023-05-19 17:02:26,677:INFO:Uploading results into container
2023-05-19 17:02:26,678:INFO:Uploading model into container now
2023-05-19 17:02:26,678:INFO:_master_model_container: 21
2023-05-19 17:02:26,678:INFO:_display_container: 3
2023-05-19 17:02:26,678:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:02:26,678:INFO:create_model() successfully completed......................................
2023-05-19 17:02:26,800:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:26,801:INFO:Creating metrics dataframe
2023-05-19 17:02:26,807:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:02:26,808:INFO:Total runtime is 0.22092570463816324 minutes
2023-05-19 17:02:26,810:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:26,810:INFO:Initializing create_model()
2023-05-19 17:02:26,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:26,810:INFO:Checking exceptions
2023-05-19 17:02:26,810:INFO:Importing libraries
2023-05-19 17:02:26,810:INFO:Copying training dataset
2023-05-19 17:02:26,823:INFO:Defining folds
2023-05-19 17:02:26,823:INFO:Declaring metric variables
2023-05-19 17:02:26,827:INFO:Importing untrained model
2023-05-19 17:02:26,830:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:02:26,835:INFO:Starting cross validation
2023-05-19 17:02:26,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:27,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,483:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,619:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:27,779:INFO:Calculating mean and std
2023-05-19 17:02:27,781:INFO:Creating metrics dataframe
2023-05-19 17:02:27,796:INFO:Uploading results into container
2023-05-19 17:02:27,796:INFO:Uploading model into container now
2023-05-19 17:02:27,796:INFO:_master_model_container: 22
2023-05-19 17:02:27,796:INFO:_display_container: 3
2023-05-19 17:02:27,797:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:02:27,797:INFO:create_model() successfully completed......................................
2023-05-19 17:02:27,918:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:27,918:INFO:Creating metrics dataframe
2023-05-19 17:02:27,926:INFO:Initializing Ada Boost Classifier
2023-05-19 17:02:27,926:INFO:Total runtime is 0.23956492344538372 minutes
2023-05-19 17:02:27,928:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:27,928:INFO:Initializing create_model()
2023-05-19 17:02:27,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:27,928:INFO:Checking exceptions
2023-05-19 17:02:27,928:INFO:Importing libraries
2023-05-19 17:02:27,928:INFO:Copying training dataset
2023-05-19 17:02:27,939:INFO:Defining folds
2023-05-19 17:02:27,940:INFO:Declaring metric variables
2023-05-19 17:02:27,942:INFO:Importing untrained model
2023-05-19 17:02:27,945:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:02:27,950:INFO:Starting cross validation
2023-05-19 17:02:27,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:28,611:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,628:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,687:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,701:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,832:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,848:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,887:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,905:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,918:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:28,937:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:29,057:INFO:Calculating mean and std
2023-05-19 17:02:29,059:INFO:Creating metrics dataframe
2023-05-19 17:02:29,076:INFO:Uploading results into container
2023-05-19 17:02:29,077:INFO:Uploading model into container now
2023-05-19 17:02:29,077:INFO:_master_model_container: 23
2023-05-19 17:02:29,077:INFO:_display_container: 3
2023-05-19 17:02:29,077:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:02:29,077:INFO:create_model() successfully completed......................................
2023-05-19 17:02:29,205:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:29,205:INFO:Creating metrics dataframe
2023-05-19 17:02:29,213:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:02:29,213:INFO:Total runtime is 0.261017378171285 minutes
2023-05-19 17:02:29,216:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:29,216:INFO:Initializing create_model()
2023-05-19 17:02:29,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:29,216:INFO:Checking exceptions
2023-05-19 17:02:29,216:INFO:Importing libraries
2023-05-19 17:02:29,216:INFO:Copying training dataset
2023-05-19 17:02:29,228:INFO:Defining folds
2023-05-19 17:02:29,228:INFO:Declaring metric variables
2023-05-19 17:02:29,230:INFO:Importing untrained model
2023-05-19 17:02:29,233:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:02:29,238:INFO:Starting cross validation
2023-05-19 17:02:29,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:30,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,074:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,104:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,131:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,139:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,140:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,147:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,156:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,161:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,394:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,400:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,526:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:30,653:INFO:Calculating mean and std
2023-05-19 17:02:30,656:INFO:Creating metrics dataframe
2023-05-19 17:02:30,671:INFO:Uploading results into container
2023-05-19 17:02:30,672:INFO:Uploading model into container now
2023-05-19 17:02:30,672:INFO:_master_model_container: 24
2023-05-19 17:02:30,672:INFO:_display_container: 3
2023-05-19 17:02:30,673:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:02:30,673:INFO:create_model() successfully completed......................................
2023-05-19 17:02:30,800:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:30,800:INFO:Creating metrics dataframe
2023-05-19 17:02:30,808:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:02:30,808:INFO:Total runtime is 0.28760133186976117 minutes
2023-05-19 17:02:30,810:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:30,811:INFO:Initializing create_model()
2023-05-19 17:02:30,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:30,811:INFO:Checking exceptions
2023-05-19 17:02:30,811:INFO:Importing libraries
2023-05-19 17:02:30,811:INFO:Copying training dataset
2023-05-19 17:02:30,822:INFO:Defining folds
2023-05-19 17:02:30,823:INFO:Declaring metric variables
2023-05-19 17:02:30,825:INFO:Importing untrained model
2023-05-19 17:02:30,828:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:02:30,833:INFO:Starting cross validation
2023-05-19 17:02:30,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:31,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,373:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,391:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,400:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,405:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,409:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,433:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,451:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,585:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,619:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,722:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,731:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:31,848:INFO:Calculating mean and std
2023-05-19 17:02:31,850:INFO:Creating metrics dataframe
2023-05-19 17:02:31,868:INFO:Uploading results into container
2023-05-19 17:02:31,869:INFO:Uploading model into container now
2023-05-19 17:02:31,869:INFO:_master_model_container: 25
2023-05-19 17:02:31,869:INFO:_display_container: 3
2023-05-19 17:02:31,869:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:02:31,869:INFO:create_model() successfully completed......................................
2023-05-19 17:02:32,008:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:32,008:INFO:Creating metrics dataframe
2023-05-19 17:02:32,017:INFO:Initializing Extra Trees Classifier
2023-05-19 17:02:32,017:INFO:Total runtime is 0.30774970451990763 minutes
2023-05-19 17:02:32,020:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:32,020:INFO:Initializing create_model()
2023-05-19 17:02:32,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:32,021:INFO:Checking exceptions
2023-05-19 17:02:32,021:INFO:Importing libraries
2023-05-19 17:02:32,021:INFO:Copying training dataset
2023-05-19 17:02:32,034:INFO:Defining folds
2023-05-19 17:02:32,034:INFO:Declaring metric variables
2023-05-19 17:02:32,037:INFO:Importing untrained model
2023-05-19 17:02:32,041:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:02:32,047:INFO:Starting cross validation
2023-05-19 17:02:32,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:33,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,414:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,414:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,454:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,506:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,572:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,704:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:33,836:INFO:Calculating mean and std
2023-05-19 17:02:33,838:INFO:Creating metrics dataframe
2023-05-19 17:02:33,852:INFO:Uploading results into container
2023-05-19 17:02:33,853:INFO:Uploading model into container now
2023-05-19 17:02:33,853:INFO:_master_model_container: 26
2023-05-19 17:02:33,853:INFO:_display_container: 3
2023-05-19 17:02:33,853:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:02:33,854:INFO:create_model() successfully completed......................................
2023-05-19 17:02:33,995:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:33,995:INFO:Creating metrics dataframe
2023-05-19 17:02:34,004:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:02:34,005:INFO:Total runtime is 0.3408756693204244 minutes
2023-05-19 17:02:34,008:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:34,008:INFO:Initializing create_model()
2023-05-19 17:02:34,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:34,008:INFO:Checking exceptions
2023-05-19 17:02:34,008:INFO:Importing libraries
2023-05-19 17:02:34,008:INFO:Copying training dataset
2023-05-19 17:02:34,021:INFO:Defining folds
2023-05-19 17:02:34,021:INFO:Declaring metric variables
2023-05-19 17:02:34,024:INFO:Importing untrained model
2023-05-19 17:02:34,028:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:02:34,034:INFO:Starting cross validation
2023-05-19 17:02:34,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:35,072:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,073:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,090:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,094:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,113:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,166:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,333:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,348:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,372:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,585:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:35,715:INFO:Calculating mean and std
2023-05-19 17:02:35,717:INFO:Creating metrics dataframe
2023-05-19 17:02:35,734:INFO:Uploading results into container
2023-05-19 17:02:35,735:INFO:Uploading model into container now
2023-05-19 17:02:35,735:INFO:_master_model_container: 27
2023-05-19 17:02:35,735:INFO:_display_container: 3
2023-05-19 17:02:35,735:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:02:35,736:INFO:create_model() successfully completed......................................
2023-05-19 17:02:35,853:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:35,853:INFO:Creating metrics dataframe
2023-05-19 17:02:35,860:INFO:Initializing Dummy Classifier
2023-05-19 17:02:35,860:INFO:Total runtime is 0.37180133660634357 minutes
2023-05-19 17:02:35,862:INFO:SubProcess create_model() called ==================================
2023-05-19 17:02:35,862:INFO:Initializing create_model()
2023-05-19 17:02:35,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef411f70>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:35,862:INFO:Checking exceptions
2023-05-19 17:02:35,862:INFO:Importing libraries
2023-05-19 17:02:35,862:INFO:Copying training dataset
2023-05-19 17:02:35,872:INFO:Defining folds
2023-05-19 17:02:35,872:INFO:Declaring metric variables
2023-05-19 17:02:35,874:INFO:Importing untrained model
2023-05-19 17:02:35,877:INFO:Dummy Classifier Imported successfully
2023-05-19 17:02:35,880:INFO:Starting cross validation
2023-05-19 17:02:35,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:02:36,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,407:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,420:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,475:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,482:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,583:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,600:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,630:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:02:36,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:02:36,787:INFO:Calculating mean and std
2023-05-19 17:02:36,789:INFO:Creating metrics dataframe
2023-05-19 17:02:36,808:INFO:Uploading results into container
2023-05-19 17:02:36,809:INFO:Uploading model into container now
2023-05-19 17:02:36,809:INFO:_master_model_container: 28
2023-05-19 17:02:36,809:INFO:_display_container: 3
2023-05-19 17:02:36,809:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:02:36,810:INFO:create_model() successfully completed......................................
2023-05-19 17:02:36,959:INFO:SubProcess create_model() end ==================================
2023-05-19 17:02:36,959:INFO:Creating metrics dataframe
2023-05-19 17:02:36,978:INFO:Initializing create_model()
2023-05-19 17:02:36,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffb59f67cd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:02:36,978:INFO:Checking exceptions
2023-05-19 17:02:36,980:INFO:Importing libraries
2023-05-19 17:02:36,980:INFO:Copying training dataset
2023-05-19 17:02:36,995:INFO:Defining folds
2023-05-19 17:02:36,995:INFO:Declaring metric variables
2023-05-19 17:02:36,995:INFO:Importing untrained model
2023-05-19 17:02:36,995:INFO:Declaring custom model
2023-05-19 17:02:36,995:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:02:36,997:INFO:Cross validation set to False
2023-05-19 17:02:36,997:INFO:Fitting Model
2023-05-19 17:02:37,538:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:02:37,538:INFO:create_model() successfully completed......................................
2023-05-19 17:02:37,676:INFO:_master_model_container: 28
2023-05-19 17:02:37,677:INFO:_display_container: 3
2023-05-19 17:02:37,677:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:02:37,677:INFO:compare_models() successfully completed......................................
2023-05-19 17:02:55,017:INFO:PyCaret ClassificationExperiment
2023-05-19 17:02:55,017:INFO:Logging name: clf-default-name
2023-05-19 17:02:55,018:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 17:02:55,018:INFO:version 3.0.2
2023-05-19 17:02:55,018:INFO:Initializing setup()
2023-05-19 17:02:55,018:INFO:self.USI: c3f4
2023-05-19 17:02:55,018:INFO:self._variable_keys: {'fix_imbalance', 'X_train', 'y_test', 'n_jobs_param', 'target_param', 'memory', '_available_plots', 'y', 'X_test', 'USI', 'y_train', 'gpu_param', 'X', 'data', 'is_multiclass', 'idx', 'fold_shuffle_param', 'exp_name_log', 'html_param', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'fold_groups_param', '_ml_usecase'}
2023-05-19 17:02:55,018:INFO:Checking environment
2023-05-19 17:02:55,018:INFO:python_version: 3.8.16
2023-05-19 17:02:55,018:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-19 17:02:55,018:INFO:machine: x86_64
2023-05-19 17:02:55,018:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 17:02:55,018:INFO:Memory: svmem(total=16378347520, available=3786829824, percent=76.9, used=11534172160, free=1738051584, active=6607536128, inactive=6833430528, buffers=57614336, cached=3048509440, shared=705810432, slab=655011840)
2023-05-19 17:02:55,019:INFO:Physical Core: 10
2023-05-19 17:02:55,019:INFO:Logical Core: 16
2023-05-19 17:02:55,019:INFO:Checking libraries
2023-05-19 17:02:55,019:INFO:System:
2023-05-19 17:02:55,019:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-19 17:02:55,019:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-19 17:02:55,019:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-19 17:02:55,019:INFO:PyCaret required dependencies:
2023-05-19 17:02:55,019:INFO:                 pip: 23.0.1
2023-05-19 17:02:55,019:INFO:          setuptools: 66.0.0
2023-05-19 17:02:55,019:INFO:             pycaret: 3.0.2
2023-05-19 17:02:55,019:INFO:             IPython: 8.12.2
2023-05-19 17:02:55,019:INFO:          ipywidgets: 8.0.6
2023-05-19 17:02:55,019:INFO:                tqdm: 4.65.0
2023-05-19 17:02:55,019:INFO:               numpy: 1.23.5
2023-05-19 17:02:55,019:INFO:              pandas: 1.5.3
2023-05-19 17:02:55,019:INFO:              jinja2: 3.1.2
2023-05-19 17:02:55,019:INFO:               scipy: 1.10.1
2023-05-19 17:02:55,019:INFO:              joblib: 1.2.0
2023-05-19 17:02:55,019:INFO:             sklearn: 1.2.2
2023-05-19 17:02:55,019:INFO:                pyod: 1.0.9
2023-05-19 17:02:55,019:INFO:            imblearn: 0.10.1
2023-05-19 17:02:55,019:INFO:   category_encoders: 2.6.1
2023-05-19 17:02:55,019:INFO:            lightgbm: 3.3.5
2023-05-19 17:02:55,019:INFO:               numba: 0.57.0
2023-05-19 17:02:55,019:INFO:            requests: 2.29.0
2023-05-19 17:02:55,019:INFO:          matplotlib: 3.7.1
2023-05-19 17:02:55,019:INFO:          scikitplot: 0.3.7
2023-05-19 17:02:55,019:INFO:         yellowbrick: 1.5
2023-05-19 17:02:55,019:INFO:              plotly: 5.14.1
2023-05-19 17:02:55,019:INFO:             kaleido: 0.2.1
2023-05-19 17:02:55,019:INFO:         statsmodels: 0.14.0
2023-05-19 17:02:55,019:INFO:              sktime: 0.17.0
2023-05-19 17:02:55,019:INFO:               tbats: 1.1.3
2023-05-19 17:02:55,019:INFO:            pmdarima: 2.0.3
2023-05-19 17:02:55,019:INFO:              psutil: 5.9.0
2023-05-19 17:02:55,019:INFO:PyCaret optional dependencies:
2023-05-19 17:02:55,019:INFO:                shap: Not installed
2023-05-19 17:02:55,019:INFO:           interpret: Not installed
2023-05-19 17:02:55,019:INFO:                umap: Not installed
2023-05-19 17:02:55,019:INFO:    pandas_profiling: Not installed
2023-05-19 17:02:55,019:INFO:  explainerdashboard: Not installed
2023-05-19 17:02:55,019:INFO:             autoviz: Not installed
2023-05-19 17:02:55,019:INFO:           fairlearn: Not installed
2023-05-19 17:02:55,019:INFO:             xgboost: Not installed
2023-05-19 17:02:55,019:INFO:            catboost: Not installed
2023-05-19 17:02:55,019:INFO:              kmodes: Not installed
2023-05-19 17:02:55,019:INFO:             mlxtend: Not installed
2023-05-19 17:02:55,019:INFO:       statsforecast: Not installed
2023-05-19 17:02:55,019:INFO:        tune_sklearn: Not installed
2023-05-19 17:02:55,019:INFO:                 ray: Not installed
2023-05-19 17:02:55,019:INFO:            hyperopt: Not installed
2023-05-19 17:02:55,019:INFO:              optuna: Not installed
2023-05-19 17:02:55,019:INFO:               skopt: Not installed
2023-05-19 17:02:55,019:INFO:              mlflow: Not installed
2023-05-19 17:02:55,019:INFO:              gradio: Not installed
2023-05-19 17:02:55,019:INFO:             fastapi: Not installed
2023-05-19 17:02:55,019:INFO:             uvicorn: Not installed
2023-05-19 17:02:55,019:INFO:              m2cgen: Not installed
2023-05-19 17:02:55,019:INFO:           evidently: Not installed
2023-05-19 17:02:55,019:INFO:               fugue: Not installed
2023-05-19 17:02:55,019:INFO:           streamlit: Not installed
2023-05-19 17:02:55,019:INFO:             prophet: Not installed
2023-05-19 17:02:55,019:INFO:None
2023-05-19 17:02:55,019:INFO:Set up data.
2023-05-19 17:02:55,076:INFO:Set up train/test split.
2023-05-19 17:02:55,104:INFO:Set up index.
2023-05-19 17:02:55,105:INFO:Set up folding strategy.
2023-05-19 17:02:55,105:INFO:Assigning column types.
2023-05-19 17:02:55,112:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 17:02:55,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,169:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,185:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 17:02:55,206:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 17:02:55,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,257:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 17:02:55,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,330:INFO:Preparing preprocessing pipeline...
2023-05-19 17:02:55,333:INFO:Set up label encoding.
2023-05-19 17:02:55,333:INFO:Set up simple imputation.
2023-05-19 17:02:55,340:INFO:Set up encoding of ordinal features.
2023-05-19 17:02:55,344:INFO:Set up encoding of categorical features.
2023-05-19 17:02:55,345:INFO:Set up feature normalization.
2023-05-19 17:02:55,717:INFO:Finished creating preprocessing pipeline.
2023-05-19 17:02:55,740:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'dmg_src_id',
                                             'population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_perm...
                 TransformerWrapper(exclude=None, include=['name', 'info'],
                                    transformer=TargetEncoder(cols=['name',
                                                                    'info'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-19 17:02:55,740:INFO:Creating final display dataframe.
2023-05-19 17:02:55,882:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                         (49444, 29)  
5                                         (49444, 49)  
6                                         (39555, 49)  
7                                          (9889, 49)  
8                                                   3  
9                                                  20  
10                                                  8  
11                                              58.2%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               c3f4  
2023-05-19 17:02:55,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 17:02:55,985:INFO:setup() successfully completed in 0.98s...............
2023-05-19 17:03:32,428:INFO:Initializing compare_models()
2023-05-19 17:03:32,428:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:03:32,428:INFO:Checking exceptions
2023-05-19 17:03:32,437:INFO:Preparing display monitor
2023-05-19 17:03:32,460:INFO:Initializing Logistic Regression
2023-05-19 17:03:32,460:INFO:Total runtime is 3.429253896077474e-06 minutes
2023-05-19 17:03:32,464:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:32,464:INFO:Initializing create_model()
2023-05-19 17:03:32,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:32,465:INFO:Checking exceptions
2023-05-19 17:03:32,465:INFO:Importing libraries
2023-05-19 17:03:32,465:INFO:Copying training dataset
2023-05-19 17:03:32,485:INFO:Defining folds
2023-05-19 17:03:32,485:INFO:Declaring metric variables
2023-05-19 17:03:32,489:INFO:Importing untrained model
2023-05-19 17:03:32,492:INFO:Logistic Regression Imported successfully
2023-05-19 17:03:32,499:INFO:Starting cross validation
2023-05-19 17:03:32,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:33,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,064:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,074:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,093:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,109:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,111:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,111:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,111:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,128:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,241:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,243:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,251:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,257:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,259:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:33,420:INFO:Calculating mean and std
2023-05-19 17:03:33,421:INFO:Creating metrics dataframe
2023-05-19 17:03:33,438:INFO:Uploading results into container
2023-05-19 17:03:33,438:INFO:Uploading model into container now
2023-05-19 17:03:33,439:INFO:_master_model_container: 1
2023-05-19 17:03:33,439:INFO:_display_container: 2
2023-05-19 17:03:33,439:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:03:33,439:INFO:create_model() successfully completed......................................
2023-05-19 17:03:33,572:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:33,572:INFO:Creating metrics dataframe
2023-05-19 17:03:33,578:INFO:Initializing K Neighbors Classifier
2023-05-19 17:03:33,579:INFO:Total runtime is 0.018642584482828777 minutes
2023-05-19 17:03:33,582:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:33,582:INFO:Initializing create_model()
2023-05-19 17:03:33,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:33,582:INFO:Checking exceptions
2023-05-19 17:03:33,582:INFO:Importing libraries
2023-05-19 17:03:33,582:INFO:Copying training dataset
2023-05-19 17:03:33,594:INFO:Defining folds
2023-05-19 17:03:33,595:INFO:Declaring metric variables
2023-05-19 17:03:33,598:INFO:Importing untrained model
2023-05-19 17:03:33,600:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:03:33,604:INFO:Starting cross validation
2023-05-19 17:03:33,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:37,330:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,418:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,498:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:37,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,725:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,737:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,741:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,798:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:38,931:INFO:Calculating mean and std
2023-05-19 17:03:38,934:INFO:Creating metrics dataframe
2023-05-19 17:03:38,950:INFO:Uploading results into container
2023-05-19 17:03:38,951:INFO:Uploading model into container now
2023-05-19 17:03:38,951:INFO:_master_model_container: 2
2023-05-19 17:03:38,951:INFO:_display_container: 2
2023-05-19 17:03:38,951:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:03:38,951:INFO:create_model() successfully completed......................................
2023-05-19 17:03:39,082:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:39,082:INFO:Creating metrics dataframe
2023-05-19 17:03:39,089:INFO:Initializing Naive Bayes
2023-05-19 17:03:39,089:INFO:Total runtime is 0.11048378547032675 minutes
2023-05-19 17:03:39,092:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:39,092:INFO:Initializing create_model()
2023-05-19 17:03:39,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:39,092:INFO:Checking exceptions
2023-05-19 17:03:39,093:INFO:Importing libraries
2023-05-19 17:03:39,093:INFO:Copying training dataset
2023-05-19 17:03:39,104:INFO:Defining folds
2023-05-19 17:03:39,104:INFO:Declaring metric variables
2023-05-19 17:03:39,107:INFO:Importing untrained model
2023-05-19 17:03:39,110:INFO:Naive Bayes Imported successfully
2023-05-19 17:03:39,114:INFO:Starting cross validation
2023-05-19 17:03:39,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:39,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,734:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,759:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,771:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,772:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,779:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,803:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,910:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,957:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,959:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:39,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,115:INFO:Calculating mean and std
2023-05-19 17:03:40,118:INFO:Creating metrics dataframe
2023-05-19 17:03:40,140:INFO:Uploading results into container
2023-05-19 17:03:40,141:INFO:Uploading model into container now
2023-05-19 17:03:40,141:INFO:_master_model_container: 3
2023-05-19 17:03:40,141:INFO:_display_container: 2
2023-05-19 17:03:40,141:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:03:40,141:INFO:create_model() successfully completed......................................
2023-05-19 17:03:40,275:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:40,275:INFO:Creating metrics dataframe
2023-05-19 17:03:40,282:INFO:Initializing Decision Tree Classifier
2023-05-19 17:03:40,282:INFO:Total runtime is 0.13036572138468425 minutes
2023-05-19 17:03:40,284:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:40,285:INFO:Initializing create_model()
2023-05-19 17:03:40,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:40,285:INFO:Checking exceptions
2023-05-19 17:03:40,285:INFO:Importing libraries
2023-05-19 17:03:40,285:INFO:Copying training dataset
2023-05-19 17:03:40,297:INFO:Defining folds
2023-05-19 17:03:40,297:INFO:Declaring metric variables
2023-05-19 17:03:40,301:INFO:Importing untrained model
2023-05-19 17:03:40,303:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:03:40,309:INFO:Starting cross validation
2023-05-19 17:03:40,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:40,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,953:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,962:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,974:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:40,994:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,001:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,001:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,087:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,103:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,103:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,139:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:41,278:INFO:Calculating mean and std
2023-05-19 17:03:41,281:INFO:Creating metrics dataframe
2023-05-19 17:03:41,298:INFO:Uploading results into container
2023-05-19 17:03:41,299:INFO:Uploading model into container now
2023-05-19 17:03:41,299:INFO:_master_model_container: 4
2023-05-19 17:03:41,299:INFO:_display_container: 2
2023-05-19 17:03:41,299:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:03:41,299:INFO:create_model() successfully completed......................................
2023-05-19 17:03:41,428:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:41,429:INFO:Creating metrics dataframe
2023-05-19 17:03:41,435:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:03:41,435:INFO:Total runtime is 0.14958534638086954 minutes
2023-05-19 17:03:41,438:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:41,439:INFO:Initializing create_model()
2023-05-19 17:03:41,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:41,439:INFO:Checking exceptions
2023-05-19 17:03:41,439:INFO:Importing libraries
2023-05-19 17:03:41,439:INFO:Copying training dataset
2023-05-19 17:03:41,450:INFO:Defining folds
2023-05-19 17:03:41,450:INFO:Declaring metric variables
2023-05-19 17:03:41,454:INFO:Importing untrained model
2023-05-19 17:03:41,457:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:03:41,463:INFO:Starting cross validation
2023-05-19 17:03:41,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:41,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:41,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,002:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,006:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,007:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,010:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,014:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,015:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,022:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,024:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,039:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,043:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,048:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,096:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,148:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,164:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,170:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,177:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,200:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,215:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,218:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:03:42,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,266:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,276:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:42,394:INFO:Calculating mean and std
2023-05-19 17:03:42,396:INFO:Creating metrics dataframe
2023-05-19 17:03:42,415:INFO:Uploading results into container
2023-05-19 17:03:42,416:INFO:Uploading model into container now
2023-05-19 17:03:42,416:INFO:_master_model_container: 5
2023-05-19 17:03:42,416:INFO:_display_container: 2
2023-05-19 17:03:42,417:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:03:42,417:INFO:create_model() successfully completed......................................
2023-05-19 17:03:42,542:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:42,542:INFO:Creating metrics dataframe
2023-05-19 17:03:42,549:INFO:Initializing Ridge Classifier
2023-05-19 17:03:42,550:INFO:Total runtime is 0.16815671920776365 minutes
2023-05-19 17:03:42,552:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:42,552:INFO:Initializing create_model()
2023-05-19 17:03:42,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:42,553:INFO:Checking exceptions
2023-05-19 17:03:42,553:INFO:Importing libraries
2023-05-19 17:03:42,553:INFO:Copying training dataset
2023-05-19 17:03:42,565:INFO:Defining folds
2023-05-19 17:03:42,565:INFO:Declaring metric variables
2023-05-19 17:03:42,567:INFO:Importing untrained model
2023-05-19 17:03:42,569:INFO:Ridge Classifier Imported successfully
2023-05-19 17:03:42,573:INFO:Starting cross validation
2023-05-19 17:03:42,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:43,107:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,154:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,166:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,170:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,176:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,257:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,333:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,352:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:43,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:03:43,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:43,504:INFO:Calculating mean and std
2023-05-19 17:03:43,506:INFO:Creating metrics dataframe
2023-05-19 17:03:43,526:INFO:Uploading results into container
2023-05-19 17:03:43,527:INFO:Uploading model into container now
2023-05-19 17:03:43,527:INFO:_master_model_container: 6
2023-05-19 17:03:43,527:INFO:_display_container: 2
2023-05-19 17:03:43,527:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:03:43,527:INFO:create_model() successfully completed......................................
2023-05-19 17:03:43,644:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:43,645:INFO:Creating metrics dataframe
2023-05-19 17:03:43,652:INFO:Initializing Random Forest Classifier
2023-05-19 17:03:43,652:INFO:Total runtime is 0.18652598063151038 minutes
2023-05-19 17:03:43,654:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:43,654:INFO:Initializing create_model()
2023-05-19 17:03:43,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:43,654:INFO:Checking exceptions
2023-05-19 17:03:43,654:INFO:Importing libraries
2023-05-19 17:03:43,654:INFO:Copying training dataset
2023-05-19 17:03:43,665:INFO:Defining folds
2023-05-19 17:03:43,665:INFO:Declaring metric variables
2023-05-19 17:03:43,668:INFO:Importing untrained model
2023-05-19 17:03:43,670:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:03:43,674:INFO:Starting cross validation
2023-05-19 17:03:43,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:44,507:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,577:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,601:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,614:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,616:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,639:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,659:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,774:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,784:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,798:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,810:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:44,932:INFO:Calculating mean and std
2023-05-19 17:03:44,935:INFO:Creating metrics dataframe
2023-05-19 17:03:44,951:INFO:Uploading results into container
2023-05-19 17:03:44,952:INFO:Uploading model into container now
2023-05-19 17:03:44,952:INFO:_master_model_container: 7
2023-05-19 17:03:44,952:INFO:_display_container: 2
2023-05-19 17:03:44,953:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:03:44,953:INFO:create_model() successfully completed......................................
2023-05-19 17:03:45,078:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:45,078:INFO:Creating metrics dataframe
2023-05-19 17:03:45,085:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:03:45,085:INFO:Total runtime is 0.21041440566380815 minutes
2023-05-19 17:03:45,087:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:45,088:INFO:Initializing create_model()
2023-05-19 17:03:45,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:45,088:INFO:Checking exceptions
2023-05-19 17:03:45,088:INFO:Importing libraries
2023-05-19 17:03:45,088:INFO:Copying training dataset
2023-05-19 17:03:45,097:INFO:Defining folds
2023-05-19 17:03:45,098:INFO:Declaring metric variables
2023-05-19 17:03:45,101:INFO:Importing untrained model
2023-05-19 17:03:45,103:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:03:45,108:INFO:Starting cross validation
2023-05-19 17:03:45,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:45,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,724:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,827:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,842:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,862:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:45,892:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,014:INFO:Calculating mean and std
2023-05-19 17:03:46,016:INFO:Creating metrics dataframe
2023-05-19 17:03:46,034:INFO:Uploading results into container
2023-05-19 17:03:46,034:INFO:Uploading model into container now
2023-05-19 17:03:46,034:INFO:_master_model_container: 8
2023-05-19 17:03:46,034:INFO:_display_container: 2
2023-05-19 17:03:46,034:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:03:46,035:INFO:create_model() successfully completed......................................
2023-05-19 17:03:46,155:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:46,155:INFO:Creating metrics dataframe
2023-05-19 17:03:46,162:INFO:Initializing Ada Boost Classifier
2023-05-19 17:03:46,162:INFO:Total runtime is 0.22837014595667518 minutes
2023-05-19 17:03:46,164:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:46,165:INFO:Initializing create_model()
2023-05-19 17:03:46,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:46,165:INFO:Checking exceptions
2023-05-19 17:03:46,165:INFO:Importing libraries
2023-05-19 17:03:46,165:INFO:Copying training dataset
2023-05-19 17:03:46,175:INFO:Defining folds
2023-05-19 17:03:46,176:INFO:Declaring metric variables
2023-05-19 17:03:46,179:INFO:Importing untrained model
2023-05-19 17:03:46,181:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:03:46,186:INFO:Starting cross validation
2023-05-19 17:03:46,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:46,822:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,837:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,858:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,873:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,905:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,929:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,934:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,983:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:46,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,003:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,010:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,054:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,067:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,077:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,081:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,090:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,139:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:47,256:INFO:Calculating mean and std
2023-05-19 17:03:47,258:INFO:Creating metrics dataframe
2023-05-19 17:03:47,275:INFO:Uploading results into container
2023-05-19 17:03:47,276:INFO:Uploading model into container now
2023-05-19 17:03:47,276:INFO:_master_model_container: 9
2023-05-19 17:03:47,276:INFO:_display_container: 2
2023-05-19 17:03:47,277:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:03:47,277:INFO:create_model() successfully completed......................................
2023-05-19 17:03:47,401:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:47,401:INFO:Creating metrics dataframe
2023-05-19 17:03:47,408:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:03:47,408:INFO:Total runtime is 0.24912927150726316 minutes
2023-05-19 17:03:47,410:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:47,410:INFO:Initializing create_model()
2023-05-19 17:03:47,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:47,410:INFO:Checking exceptions
2023-05-19 17:03:47,410:INFO:Importing libraries
2023-05-19 17:03:47,410:INFO:Copying training dataset
2023-05-19 17:03:47,420:INFO:Defining folds
2023-05-19 17:03:47,420:INFO:Declaring metric variables
2023-05-19 17:03:47,423:INFO:Importing untrained model
2023-05-19 17:03:47,426:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:03:47,430:INFO:Starting cross validation
2023-05-19 17:03:47,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:48,275:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,285:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,302:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,314:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,332:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,352:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:48,847:INFO:Calculating mean and std
2023-05-19 17:03:48,850:INFO:Creating metrics dataframe
2023-05-19 17:03:48,867:INFO:Uploading results into container
2023-05-19 17:03:48,867:INFO:Uploading model into container now
2023-05-19 17:03:48,867:INFO:_master_model_container: 10
2023-05-19 17:03:48,867:INFO:_display_container: 2
2023-05-19 17:03:48,868:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:03:48,868:INFO:create_model() successfully completed......................................
2023-05-19 17:03:48,993:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:48,993:INFO:Creating metrics dataframe
2023-05-19 17:03:49,000:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:03:49,000:INFO:Total runtime is 0.2756715615590413 minutes
2023-05-19 17:03:49,003:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:49,004:INFO:Initializing create_model()
2023-05-19 17:03:49,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:49,004:INFO:Checking exceptions
2023-05-19 17:03:49,004:INFO:Importing libraries
2023-05-19 17:03:49,004:INFO:Copying training dataset
2023-05-19 17:03:49,015:INFO:Defining folds
2023-05-19 17:03:49,015:INFO:Declaring metric variables
2023-05-19 17:03:49,018:INFO:Importing untrained model
2023-05-19 17:03:49,020:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:03:49,025:INFO:Starting cross validation
2023-05-19 17:03:49,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:49,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,615:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,628:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,659:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,699:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,738:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,803:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,862:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:49,892:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:50,009:INFO:Calculating mean and std
2023-05-19 17:03:50,011:INFO:Creating metrics dataframe
2023-05-19 17:03:50,029:INFO:Uploading results into container
2023-05-19 17:03:50,030:INFO:Uploading model into container now
2023-05-19 17:03:50,030:INFO:_master_model_container: 11
2023-05-19 17:03:50,030:INFO:_display_container: 2
2023-05-19 17:03:50,030:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:03:50,030:INFO:create_model() successfully completed......................................
2023-05-19 17:03:50,152:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:50,152:INFO:Creating metrics dataframe
2023-05-19 17:03:50,160:INFO:Initializing Extra Trees Classifier
2023-05-19 17:03:50,160:INFO:Total runtime is 0.2949932297070821 minutes
2023-05-19 17:03:50,162:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:50,162:INFO:Initializing create_model()
2023-05-19 17:03:50,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:50,162:INFO:Checking exceptions
2023-05-19 17:03:50,163:INFO:Importing libraries
2023-05-19 17:03:50,163:INFO:Copying training dataset
2023-05-19 17:03:50,173:INFO:Defining folds
2023-05-19 17:03:50,173:INFO:Declaring metric variables
2023-05-19 17:03:50,175:INFO:Importing untrained model
2023-05-19 17:03:50,178:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:03:50,183:INFO:Starting cross validation
2023-05-19 17:03:50,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:51,141:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,170:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,198:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,333:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,355:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,472:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,494:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,566:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,575:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,601:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:51,719:INFO:Calculating mean and std
2023-05-19 17:03:51,721:INFO:Creating metrics dataframe
2023-05-19 17:03:51,739:INFO:Uploading results into container
2023-05-19 17:03:51,740:INFO:Uploading model into container now
2023-05-19 17:03:51,740:INFO:_master_model_container: 12
2023-05-19 17:03:51,740:INFO:_display_container: 2
2023-05-19 17:03:51,740:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:03:51,740:INFO:create_model() successfully completed......................................
2023-05-19 17:03:51,858:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:51,858:INFO:Creating metrics dataframe
2023-05-19 17:03:51,867:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:03:51,867:INFO:Total runtime is 0.3234497626622518 minutes
2023-05-19 17:03:51,870:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:51,870:INFO:Initializing create_model()
2023-05-19 17:03:51,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:51,870:INFO:Checking exceptions
2023-05-19 17:03:51,870:INFO:Importing libraries
2023-05-19 17:03:51,870:INFO:Copying training dataset
2023-05-19 17:03:51,886:INFO:Defining folds
2023-05-19 17:03:51,886:INFO:Declaring metric variables
2023-05-19 17:03:51,889:INFO:Importing untrained model
2023-05-19 17:03:51,892:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:03:51,896:INFO:Starting cross validation
2023-05-19 17:03:51,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:52,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,814:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,832:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,850:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,850:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,897:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,959:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:52,999:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,014:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,028:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,093:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,107:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,108:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,169:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,286:INFO:Calculating mean and std
2023-05-19 17:03:53,288:INFO:Creating metrics dataframe
2023-05-19 17:03:53,306:INFO:Uploading results into container
2023-05-19 17:03:53,306:INFO:Uploading model into container now
2023-05-19 17:03:53,307:INFO:_master_model_container: 13
2023-05-19 17:03:53,307:INFO:_display_container: 2
2023-05-19 17:03:53,307:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:03:53,307:INFO:create_model() successfully completed......................................
2023-05-19 17:03:53,433:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:53,433:INFO:Creating metrics dataframe
2023-05-19 17:03:53,441:INFO:Initializing Dummy Classifier
2023-05-19 17:03:53,441:INFO:Total runtime is 0.349687929948171 minutes
2023-05-19 17:03:53,444:INFO:SubProcess create_model() called ==================================
2023-05-19 17:03:53,444:INFO:Initializing create_model()
2023-05-19 17:03:53,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaff268df0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:53,444:INFO:Checking exceptions
2023-05-19 17:03:53,444:INFO:Importing libraries
2023-05-19 17:03:53,444:INFO:Copying training dataset
2023-05-19 17:03:53,455:INFO:Defining folds
2023-05-19 17:03:53,455:INFO:Declaring metric variables
2023-05-19 17:03:53,457:INFO:Importing untrained model
2023-05-19 17:03:53,461:INFO:Dummy Classifier Imported successfully
2023-05-19 17:03:53,467:INFO:Starting cross validation
2023-05-19 17:03:53,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:03:53,972:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,988:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,996:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:53,996:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,004:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,022:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,022:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,028:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,035:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,043:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,051:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,053:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,061:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,067:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,075:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,082:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,193:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,218:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,220:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:03:54,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:03:54,358:INFO:Calculating mean and std
2023-05-19 17:03:54,360:INFO:Creating metrics dataframe
2023-05-19 17:03:54,375:INFO:Uploading results into container
2023-05-19 17:03:54,375:INFO:Uploading model into container now
2023-05-19 17:03:54,376:INFO:_master_model_container: 14
2023-05-19 17:03:54,376:INFO:_display_container: 2
2023-05-19 17:03:54,376:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:03:54,376:INFO:create_model() successfully completed......................................
2023-05-19 17:03:54,496:INFO:SubProcess create_model() end ==================================
2023-05-19 17:03:54,496:INFO:Creating metrics dataframe
2023-05-19 17:03:54,510:INFO:Initializing create_model()
2023-05-19 17:03:54,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:03:54,510:INFO:Checking exceptions
2023-05-19 17:03:54,511:INFO:Importing libraries
2023-05-19 17:03:54,511:INFO:Copying training dataset
2023-05-19 17:03:54,520:INFO:Defining folds
2023-05-19 17:03:54,520:INFO:Declaring metric variables
2023-05-19 17:03:54,521:INFO:Importing untrained model
2023-05-19 17:03:54,521:INFO:Declaring custom model
2023-05-19 17:03:54,521:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:03:54,522:INFO:Cross validation set to False
2023-05-19 17:03:54,522:INFO:Fitting Model
2023-05-19 17:03:54,958:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:03:54,959:INFO:create_model() successfully completed......................................
2023-05-19 17:03:55,113:INFO:_master_model_container: 14
2023-05-19 17:03:55,113:INFO:_display_container: 2
2023-05-19 17:03:55,114:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:03:55,114:INFO:compare_models() successfully completed......................................
2023-05-19 17:04:44,303:INFO:Initializing compare_models()
2023-05-19 17:04:44,303:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:04:44,303:INFO:Checking exceptions
2023-05-19 17:04:44,308:INFO:Preparing display monitor
2023-05-19 17:04:44,333:INFO:Initializing Logistic Regression
2023-05-19 17:04:44,333:INFO:Total runtime is 4.36703364054362e-06 minutes
2023-05-19 17:04:44,337:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:44,337:INFO:Initializing create_model()
2023-05-19 17:04:44,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:44,337:INFO:Checking exceptions
2023-05-19 17:04:44,337:INFO:Importing libraries
2023-05-19 17:04:44,337:INFO:Copying training dataset
2023-05-19 17:04:44,353:INFO:Defining folds
2023-05-19 17:04:44,353:INFO:Declaring metric variables
2023-05-19 17:04:44,356:INFO:Importing untrained model
2023-05-19 17:04:44,360:INFO:Logistic Regression Imported successfully
2023-05-19 17:04:44,367:INFO:Starting cross validation
2023-05-19 17:04:44,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:44,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,942:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,957:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,966:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,974:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:44,999:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,018:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,023:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,042:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,139:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,141:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,183:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:45,314:INFO:Calculating mean and std
2023-05-19 17:04:45,316:INFO:Creating metrics dataframe
2023-05-19 17:04:45,333:INFO:Uploading results into container
2023-05-19 17:04:45,334:INFO:Uploading model into container now
2023-05-19 17:04:45,334:INFO:_master_model_container: 15
2023-05-19 17:04:45,334:INFO:_display_container: 3
2023-05-19 17:04:45,335:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:04:45,335:INFO:create_model() successfully completed......................................
2023-05-19 17:04:45,467:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:45,467:INFO:Creating metrics dataframe
2023-05-19 17:04:45,473:INFO:Initializing K Neighbors Classifier
2023-05-19 17:04:45,473:INFO:Total runtime is 0.019010539849599203 minutes
2023-05-19 17:04:45,476:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:45,476:INFO:Initializing create_model()
2023-05-19 17:04:45,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:45,477:INFO:Checking exceptions
2023-05-19 17:04:45,477:INFO:Importing libraries
2023-05-19 17:04:45,477:INFO:Copying training dataset
2023-05-19 17:04:45,488:INFO:Defining folds
2023-05-19 17:04:45,488:INFO:Declaring metric variables
2023-05-19 17:04:45,490:INFO:Importing untrained model
2023-05-19 17:04:45,493:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:04:45,498:INFO:Starting cross validation
2023-05-19 17:04:45,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:49,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,504:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:49,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,905:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,910:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,921:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,929:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,963:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:50,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,100:INFO:Calculating mean and std
2023-05-19 17:04:51,103:INFO:Creating metrics dataframe
2023-05-19 17:04:51,125:INFO:Uploading results into container
2023-05-19 17:04:51,125:INFO:Uploading model into container now
2023-05-19 17:04:51,126:INFO:_master_model_container: 16
2023-05-19 17:04:51,126:INFO:_display_container: 3
2023-05-19 17:04:51,126:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:04:51,126:INFO:create_model() successfully completed......................................
2023-05-19 17:04:51,262:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:51,262:INFO:Creating metrics dataframe
2023-05-19 17:04:51,270:INFO:Initializing Naive Bayes
2023-05-19 17:04:51,270:INFO:Total runtime is 0.11562632322311402 minutes
2023-05-19 17:04:51,273:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:51,273:INFO:Initializing create_model()
2023-05-19 17:04:51,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:51,273:INFO:Checking exceptions
2023-05-19 17:04:51,273:INFO:Importing libraries
2023-05-19 17:04:51,273:INFO:Copying training dataset
2023-05-19 17:04:51,285:INFO:Defining folds
2023-05-19 17:04:51,285:INFO:Declaring metric variables
2023-05-19 17:04:51,289:INFO:Importing untrained model
2023-05-19 17:04:51,292:INFO:Naive Bayes Imported successfully
2023-05-19 17:04:51,297:INFO:Starting cross validation
2023-05-19 17:04:51,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:51,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,974:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,977:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:51,996:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,001:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,004:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,016:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,023:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,041:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,069:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,087:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,087:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,106:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,137:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,160:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,183:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:52,317:INFO:Calculating mean and std
2023-05-19 17:04:52,320:INFO:Creating metrics dataframe
2023-05-19 17:04:52,338:INFO:Uploading results into container
2023-05-19 17:04:52,339:INFO:Uploading model into container now
2023-05-19 17:04:52,339:INFO:_master_model_container: 17
2023-05-19 17:04:52,339:INFO:_display_container: 3
2023-05-19 17:04:52,339:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:04:52,339:INFO:create_model() successfully completed......................................
2023-05-19 17:04:52,475:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:52,475:INFO:Creating metrics dataframe
2023-05-19 17:04:52,482:INFO:Initializing Decision Tree Classifier
2023-05-19 17:04:52,482:INFO:Total runtime is 0.13583072821299236 minutes
2023-05-19 17:04:52,484:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:52,485:INFO:Initializing create_model()
2023-05-19 17:04:52,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:52,485:INFO:Checking exceptions
2023-05-19 17:04:52,485:INFO:Importing libraries
2023-05-19 17:04:52,485:INFO:Copying training dataset
2023-05-19 17:04:52,496:INFO:Defining folds
2023-05-19 17:04:52,497:INFO:Declaring metric variables
2023-05-19 17:04:52,499:INFO:Importing untrained model
2023-05-19 17:04:52,503:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:04:52,508:INFO:Starting cross validation
2023-05-19 17:04:52,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:53,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,111:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,117:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,148:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,164:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,183:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,198:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,306:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:53,498:INFO:Calculating mean and std
2023-05-19 17:04:53,500:INFO:Creating metrics dataframe
2023-05-19 17:04:53,519:INFO:Uploading results into container
2023-05-19 17:04:53,519:INFO:Uploading model into container now
2023-05-19 17:04:53,520:INFO:_master_model_container: 18
2023-05-19 17:04:53,520:INFO:_display_container: 3
2023-05-19 17:04:53,520:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:04:53,520:INFO:create_model() successfully completed......................................
2023-05-19 17:04:53,649:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:53,649:INFO:Creating metrics dataframe
2023-05-19 17:04:53,657:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:04:53,657:INFO:Total runtime is 0.1554107427597046 minutes
2023-05-19 17:04:53,659:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:53,659:INFO:Initializing create_model()
2023-05-19 17:04:53,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:53,660:INFO:Checking exceptions
2023-05-19 17:04:53,660:INFO:Importing libraries
2023-05-19 17:04:53,660:INFO:Copying training dataset
2023-05-19 17:04:53,671:INFO:Defining folds
2023-05-19 17:04:53,671:INFO:Declaring metric variables
2023-05-19 17:04:53,675:INFO:Importing untrained model
2023-05-19 17:04:53,680:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:04:53,684:INFO:Starting cross validation
2023-05-19 17:04:53,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:54,268:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,303:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,315:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,366:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,372:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,372:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,394:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,420:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,442:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:04:54,492:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:54,641:INFO:Calculating mean and std
2023-05-19 17:04:54,644:INFO:Creating metrics dataframe
2023-05-19 17:04:54,663:INFO:Uploading results into container
2023-05-19 17:04:54,664:INFO:Uploading model into container now
2023-05-19 17:04:54,664:INFO:_master_model_container: 19
2023-05-19 17:04:54,664:INFO:_display_container: 3
2023-05-19 17:04:54,664:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:04:54,664:INFO:create_model() successfully completed......................................
2023-05-19 17:04:54,790:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:54,790:INFO:Creating metrics dataframe
2023-05-19 17:04:54,797:INFO:Initializing Ridge Classifier
2023-05-19 17:04:54,797:INFO:Total runtime is 0.17441137631734213 minutes
2023-05-19 17:04:54,799:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:54,800:INFO:Initializing create_model()
2023-05-19 17:04:54,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:54,800:INFO:Checking exceptions
2023-05-19 17:04:54,800:INFO:Importing libraries
2023-05-19 17:04:54,800:INFO:Copying training dataset
2023-05-19 17:04:54,813:INFO:Defining folds
2023-05-19 17:04:54,813:INFO:Declaring metric variables
2023-05-19 17:04:54,817:INFO:Importing untrained model
2023-05-19 17:04:54,819:INFO:Ridge Classifier Imported successfully
2023-05-19 17:04:54,824:INFO:Starting cross validation
2023-05-19 17:04:54,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:55,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,409:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,416:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,442:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,601:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,601:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,616:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,621:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:04:55,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:04:55,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:55,792:INFO:Calculating mean and std
2023-05-19 17:04:55,795:INFO:Creating metrics dataframe
2023-05-19 17:04:55,815:INFO:Uploading results into container
2023-05-19 17:04:55,816:INFO:Uploading model into container now
2023-05-19 17:04:55,816:INFO:_master_model_container: 20
2023-05-19 17:04:55,816:INFO:_display_container: 3
2023-05-19 17:04:55,816:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:04:55,817:INFO:create_model() successfully completed......................................
2023-05-19 17:04:55,943:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:55,943:INFO:Creating metrics dataframe
2023-05-19 17:04:55,950:INFO:Initializing Random Forest Classifier
2023-05-19 17:04:55,950:INFO:Total runtime is 0.19363073110580445 minutes
2023-05-19 17:04:55,952:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:55,953:INFO:Initializing create_model()
2023-05-19 17:04:55,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:55,953:INFO:Checking exceptions
2023-05-19 17:04:55,953:INFO:Importing libraries
2023-05-19 17:04:55,953:INFO:Copying training dataset
2023-05-19 17:04:55,965:INFO:Defining folds
2023-05-19 17:04:55,965:INFO:Declaring metric variables
2023-05-19 17:04:55,968:INFO:Importing untrained model
2023-05-19 17:04:55,971:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:04:55,975:INFO:Starting cross validation
2023-05-19 17:04:55,977:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:56,857:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,905:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,945:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,971:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:56,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,005:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,038:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,058:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,079:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,080:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,109:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,130:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,138:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:57,270:INFO:Calculating mean and std
2023-05-19 17:04:57,272:INFO:Creating metrics dataframe
2023-05-19 17:04:57,288:INFO:Uploading results into container
2023-05-19 17:04:57,289:INFO:Uploading model into container now
2023-05-19 17:04:57,289:INFO:_master_model_container: 21
2023-05-19 17:04:57,289:INFO:_display_container: 3
2023-05-19 17:04:57,290:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:04:57,290:INFO:create_model() successfully completed......................................
2023-05-19 17:04:57,415:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:57,415:INFO:Creating metrics dataframe
2023-05-19 17:04:57,423:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:04:57,423:INFO:Total runtime is 0.21817320187886557 minutes
2023-05-19 17:04:57,425:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:57,426:INFO:Initializing create_model()
2023-05-19 17:04:57,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:57,426:INFO:Checking exceptions
2023-05-19 17:04:57,426:INFO:Importing libraries
2023-05-19 17:04:57,426:INFO:Copying training dataset
2023-05-19 17:04:57,436:INFO:Defining folds
2023-05-19 17:04:57,436:INFO:Declaring metric variables
2023-05-19 17:04:57,440:INFO:Importing untrained model
2023-05-19 17:04:57,444:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:04:57,452:INFO:Starting cross validation
2023-05-19 17:04:57,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:58,009:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,024:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,034:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,041:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,042:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,042:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,050:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,054:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,057:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,075:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,088:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,200:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,215:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,218:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:58,393:INFO:Calculating mean and std
2023-05-19 17:04:58,395:INFO:Creating metrics dataframe
2023-05-19 17:04:58,416:INFO:Uploading results into container
2023-05-19 17:04:58,416:INFO:Uploading model into container now
2023-05-19 17:04:58,417:INFO:_master_model_container: 22
2023-05-19 17:04:58,417:INFO:_display_container: 3
2023-05-19 17:04:58,417:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:04:58,417:INFO:create_model() successfully completed......................................
2023-05-19 17:04:58,542:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:58,542:INFO:Creating metrics dataframe
2023-05-19 17:04:58,550:INFO:Initializing Ada Boost Classifier
2023-05-19 17:04:58,550:INFO:Total runtime is 0.23695329825083417 minutes
2023-05-19 17:04:58,552:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:58,552:INFO:Initializing create_model()
2023-05-19 17:04:58,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:58,552:INFO:Checking exceptions
2023-05-19 17:04:58,552:INFO:Importing libraries
2023-05-19 17:04:58,552:INFO:Copying training dataset
2023-05-19 17:04:58,563:INFO:Defining folds
2023-05-19 17:04:58,563:INFO:Declaring metric variables
2023-05-19 17:04:58,565:INFO:Importing untrained model
2023-05-19 17:04:58,568:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:04:58,574:INFO:Starting cross validation
2023-05-19 17:04:58,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:04:59,241:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,260:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,297:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,314:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,315:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,330:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,458:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,518:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:04:59,657:INFO:Calculating mean and std
2023-05-19 17:04:59,660:INFO:Creating metrics dataframe
2023-05-19 17:04:59,677:INFO:Uploading results into container
2023-05-19 17:04:59,678:INFO:Uploading model into container now
2023-05-19 17:04:59,678:INFO:_master_model_container: 23
2023-05-19 17:04:59,678:INFO:_display_container: 3
2023-05-19 17:04:59,678:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:04:59,678:INFO:create_model() successfully completed......................................
2023-05-19 17:04:59,804:INFO:SubProcess create_model() end ==================================
2023-05-19 17:04:59,804:INFO:Creating metrics dataframe
2023-05-19 17:04:59,811:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:04:59,811:INFO:Total runtime is 0.2579756021499634 minutes
2023-05-19 17:04:59,813:INFO:SubProcess create_model() called ==================================
2023-05-19 17:04:59,813:INFO:Initializing create_model()
2023-05-19 17:04:59,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:04:59,813:INFO:Checking exceptions
2023-05-19 17:04:59,814:INFO:Importing libraries
2023-05-19 17:04:59,814:INFO:Copying training dataset
2023-05-19 17:04:59,826:INFO:Defining folds
2023-05-19 17:04:59,826:INFO:Declaring metric variables
2023-05-19 17:04:59,829:INFO:Importing untrained model
2023-05-19 17:04:59,832:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:04:59,837:INFO:Starting cross validation
2023-05-19 17:04:59,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:00,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,706:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,740:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,933:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,962:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,963:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,978:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:00,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,005:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,024:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,036:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,164:INFO:Calculating mean and std
2023-05-19 17:05:01,167:INFO:Creating metrics dataframe
2023-05-19 17:05:01,183:INFO:Uploading results into container
2023-05-19 17:05:01,183:INFO:Uploading model into container now
2023-05-19 17:05:01,184:INFO:_master_model_container: 24
2023-05-19 17:05:01,184:INFO:_display_container: 3
2023-05-19 17:05:01,184:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:05:01,184:INFO:create_model() successfully completed......................................
2023-05-19 17:05:01,308:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:01,308:INFO:Creating metrics dataframe
2023-05-19 17:05:01,326:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:05:01,326:INFO:Total runtime is 0.28323148886362715 minutes
2023-05-19 17:05:01,330:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:01,330:INFO:Initializing create_model()
2023-05-19 17:05:01,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:01,330:INFO:Checking exceptions
2023-05-19 17:05:01,330:INFO:Importing libraries
2023-05-19 17:05:01,330:INFO:Copying training dataset
2023-05-19 17:05:01,341:INFO:Defining folds
2023-05-19 17:05:01,341:INFO:Declaring metric variables
2023-05-19 17:05:01,344:INFO:Importing untrained model
2023-05-19 17:05:01,347:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:05:01,352:INFO:Starting cross validation
2023-05-19 17:05:01,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:01,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,918:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,927:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,930:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,946:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,950:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,970:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:01,991:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,006:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,079:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,093:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,107:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,148:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:02,268:INFO:Calculating mean and std
2023-05-19 17:05:02,270:INFO:Creating metrics dataframe
2023-05-19 17:05:02,287:INFO:Uploading results into container
2023-05-19 17:05:02,288:INFO:Uploading model into container now
2023-05-19 17:05:02,288:INFO:_master_model_container: 25
2023-05-19 17:05:02,288:INFO:_display_container: 3
2023-05-19 17:05:02,289:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:05:02,289:INFO:create_model() successfully completed......................................
2023-05-19 17:05:02,410:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:02,410:INFO:Creating metrics dataframe
2023-05-19 17:05:02,417:INFO:Initializing Extra Trees Classifier
2023-05-19 17:05:02,418:INFO:Total runtime is 0.30141638517379765 minutes
2023-05-19 17:05:02,420:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:02,420:INFO:Initializing create_model()
2023-05-19 17:05:02,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:02,420:INFO:Checking exceptions
2023-05-19 17:05:02,420:INFO:Importing libraries
2023-05-19 17:05:02,420:INFO:Copying training dataset
2023-05-19 17:05:02,432:INFO:Defining folds
2023-05-19 17:05:02,432:INFO:Declaring metric variables
2023-05-19 17:05:02,434:INFO:Importing untrained model
2023-05-19 17:05:02,438:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:05:02,443:INFO:Starting cross validation
2023-05-19 17:05:02,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:03,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,482:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,498:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,524:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,526:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,591:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,594:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,639:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:03,945:INFO:Calculating mean and std
2023-05-19 17:05:03,949:INFO:Creating metrics dataframe
2023-05-19 17:05:03,967:INFO:Uploading results into container
2023-05-19 17:05:03,968:INFO:Uploading model into container now
2023-05-19 17:05:03,968:INFO:_master_model_container: 26
2023-05-19 17:05:03,968:INFO:_display_container: 3
2023-05-19 17:05:03,968:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:05:03,968:INFO:create_model() successfully completed......................................
2023-05-19 17:05:04,097:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:04,097:INFO:Creating metrics dataframe
2023-05-19 17:05:04,105:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:05:04,105:INFO:Total runtime is 0.3295337835947673 minutes
2023-05-19 17:05:04,107:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:04,107:INFO:Initializing create_model()
2023-05-19 17:05:04,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:04,107:INFO:Checking exceptions
2023-05-19 17:05:04,107:INFO:Importing libraries
2023-05-19 17:05:04,107:INFO:Copying training dataset
2023-05-19 17:05:04,118:INFO:Defining folds
2023-05-19 17:05:04,118:INFO:Declaring metric variables
2023-05-19 17:05:04,121:INFO:Importing untrained model
2023-05-19 17:05:04,124:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:05:04,130:INFO:Starting cross validation
2023-05-19 17:05:04,131:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:05,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,109:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,150:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,170:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,215:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,225:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,275:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,288:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,304:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,304:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,330:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:05,508:INFO:Calculating mean and std
2023-05-19 17:05:05,510:INFO:Creating metrics dataframe
2023-05-19 17:05:05,528:INFO:Uploading results into container
2023-05-19 17:05:05,529:INFO:Uploading model into container now
2023-05-19 17:05:05,529:INFO:_master_model_container: 27
2023-05-19 17:05:05,529:INFO:_display_container: 3
2023-05-19 17:05:05,529:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:05:05,529:INFO:create_model() successfully completed......................................
2023-05-19 17:05:05,651:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:05,651:INFO:Creating metrics dataframe
2023-05-19 17:05:05,657:INFO:Initializing Dummy Classifier
2023-05-19 17:05:05,658:INFO:Total runtime is 0.35541622638702397 minutes
2023-05-19 17:05:05,660:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:05,660:INFO:Initializing create_model()
2023-05-19 17:05:05,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaef9d73a0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:05,660:INFO:Checking exceptions
2023-05-19 17:05:05,660:INFO:Importing libraries
2023-05-19 17:05:05,660:INFO:Copying training dataset
2023-05-19 17:05:05,670:INFO:Defining folds
2023-05-19 17:05:05,670:INFO:Declaring metric variables
2023-05-19 17:05:05,672:INFO:Importing untrained model
2023-05-19 17:05:05,675:INFO:Dummy Classifier Imported successfully
2023-05-19 17:05:05,683:INFO:Starting cross validation
2023-05-19 17:05:05,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:06,240:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,306:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,314:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,315:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,322:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,416:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,422:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:05:06,490:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:06,607:INFO:Calculating mean and std
2023-05-19 17:05:06,609:INFO:Creating metrics dataframe
2023-05-19 17:05:06,625:INFO:Uploading results into container
2023-05-19 17:05:06,625:INFO:Uploading model into container now
2023-05-19 17:05:06,625:INFO:_master_model_container: 28
2023-05-19 17:05:06,626:INFO:_display_container: 3
2023-05-19 17:05:06,626:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:05:06,626:INFO:create_model() successfully completed......................................
2023-05-19 17:05:06,755:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:06,755:INFO:Creating metrics dataframe
2023-05-19 17:05:06,768:INFO:Initializing create_model()
2023-05-19 17:05:06,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:06,769:INFO:Checking exceptions
2023-05-19 17:05:06,770:INFO:Importing libraries
2023-05-19 17:05:06,770:INFO:Copying training dataset
2023-05-19 17:05:06,782:INFO:Defining folds
2023-05-19 17:05:06,782:INFO:Declaring metric variables
2023-05-19 17:05:06,782:INFO:Importing untrained model
2023-05-19 17:05:06,782:INFO:Declaring custom model
2023-05-19 17:05:06,783:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:05:06,784:INFO:Cross validation set to False
2023-05-19 17:05:06,784:INFO:Fitting Model
2023-05-19 17:05:07,226:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:05:07,226:INFO:create_model() successfully completed......................................
2023-05-19 17:05:07,373:INFO:_master_model_container: 28
2023-05-19 17:05:07,373:INFO:_display_container: 3
2023-05-19 17:05:07,373:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:05:07,373:INFO:compare_models() successfully completed......................................
2023-05-19 17:05:57,012:INFO:Initializing compare_models()
2023-05-19 17:05:57,013:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:05:57,013:INFO:Checking exceptions
2023-05-19 17:05:57,019:INFO:Preparing display monitor
2023-05-19 17:05:57,044:INFO:Initializing Logistic Regression
2023-05-19 17:05:57,044:INFO:Total runtime is 3.627936045328776e-06 minutes
2023-05-19 17:05:57,047:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:57,048:INFO:Initializing create_model()
2023-05-19 17:05:57,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:57,048:INFO:Checking exceptions
2023-05-19 17:05:57,048:INFO:Importing libraries
2023-05-19 17:05:57,048:INFO:Copying training dataset
2023-05-19 17:05:57,061:INFO:Defining folds
2023-05-19 17:05:57,061:INFO:Declaring metric variables
2023-05-19 17:05:57,064:INFO:Importing untrained model
2023-05-19 17:05:57,067:INFO:Logistic Regression Imported successfully
2023-05-19 17:05:57,073:INFO:Starting cross validation
2023-05-19 17:05:57,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:05:57,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,642:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,665:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,681:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,681:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,826:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,829:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,832:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,833:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,846:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,853:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,857:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,860:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:05:57,995:INFO:Calculating mean and std
2023-05-19 17:05:57,996:INFO:Creating metrics dataframe
2023-05-19 17:05:58,012:INFO:Uploading results into container
2023-05-19 17:05:58,012:INFO:Uploading model into container now
2023-05-19 17:05:58,013:INFO:_master_model_container: 29
2023-05-19 17:05:58,013:INFO:_display_container: 4
2023-05-19 17:05:58,013:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:05:58,013:INFO:create_model() successfully completed......................................
2023-05-19 17:05:58,140:INFO:SubProcess create_model() end ==================================
2023-05-19 17:05:58,140:INFO:Creating metrics dataframe
2023-05-19 17:05:58,146:INFO:Initializing K Neighbors Classifier
2023-05-19 17:05:58,146:INFO:Total runtime is 0.01837201913197835 minutes
2023-05-19 17:05:58,148:INFO:SubProcess create_model() called ==================================
2023-05-19 17:05:58,149:INFO:Initializing create_model()
2023-05-19 17:05:58,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:05:58,149:INFO:Checking exceptions
2023-05-19 17:05:58,149:INFO:Importing libraries
2023-05-19 17:05:58,149:INFO:Copying training dataset
2023-05-19 17:05:58,160:INFO:Defining folds
2023-05-19 17:05:58,160:INFO:Declaring metric variables
2023-05-19 17:05:58,162:INFO:Importing untrained model
2023-05-19 17:05:58,164:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:05:58,168:INFO:Starting cross validation
2023-05-19 17:05:58,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:01,839:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,897:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,940:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:01,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,194:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:02,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,253:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,286:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,486:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,495:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:03,643:INFO:Calculating mean and std
2023-05-19 17:06:03,646:INFO:Creating metrics dataframe
2023-05-19 17:06:03,663:INFO:Uploading results into container
2023-05-19 17:06:03,664:INFO:Uploading model into container now
2023-05-19 17:06:03,664:INFO:_master_model_container: 30
2023-05-19 17:06:03,664:INFO:_display_container: 4
2023-05-19 17:06:03,665:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:06:03,665:INFO:create_model() successfully completed......................................
2023-05-19 17:06:03,794:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:03,794:INFO:Creating metrics dataframe
2023-05-19 17:06:03,801:INFO:Initializing Naive Bayes
2023-05-19 17:06:03,801:INFO:Total runtime is 0.11262015899022419 minutes
2023-05-19 17:06:03,803:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:03,804:INFO:Initializing create_model()
2023-05-19 17:06:03,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:03,804:INFO:Checking exceptions
2023-05-19 17:06:03,804:INFO:Importing libraries
2023-05-19 17:06:03,804:INFO:Copying training dataset
2023-05-19 17:06:03,814:INFO:Defining folds
2023-05-19 17:06:03,815:INFO:Declaring metric variables
2023-05-19 17:06:03,817:INFO:Importing untrained model
2023-05-19 17:06:03,820:INFO:Naive Bayes Imported successfully
2023-05-19 17:06:03,825:INFO:Starting cross validation
2023-05-19 17:06:03,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:04,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,466:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,490:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,504:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,612:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,628:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,642:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,644:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:04,803:INFO:Calculating mean and std
2023-05-19 17:06:04,805:INFO:Creating metrics dataframe
2023-05-19 17:06:04,820:INFO:Uploading results into container
2023-05-19 17:06:04,820:INFO:Uploading model into container now
2023-05-19 17:06:04,821:INFO:_master_model_container: 31
2023-05-19 17:06:04,821:INFO:_display_container: 4
2023-05-19 17:06:04,821:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:06:04,821:INFO:create_model() successfully completed......................................
2023-05-19 17:06:04,947:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:04,947:INFO:Creating metrics dataframe
2023-05-19 17:06:04,954:INFO:Initializing Decision Tree Classifier
2023-05-19 17:06:04,954:INFO:Total runtime is 0.1318298578262329 minutes
2023-05-19 17:06:04,956:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:04,956:INFO:Initializing create_model()
2023-05-19 17:06:04,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:04,956:INFO:Checking exceptions
2023-05-19 17:06:04,956:INFO:Importing libraries
2023-05-19 17:06:04,956:INFO:Copying training dataset
2023-05-19 17:06:04,968:INFO:Defining folds
2023-05-19 17:06:04,968:INFO:Declaring metric variables
2023-05-19 17:06:04,971:INFO:Importing untrained model
2023-05-19 17:06:04,974:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:06:04,979:INFO:Starting cross validation
2023-05-19 17:06:04,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:05,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,568:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,587:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,606:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,620:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,625:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,626:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,754:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,756:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,769:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,771:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,771:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,784:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,816:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:05,943:INFO:Calculating mean and std
2023-05-19 17:06:05,947:INFO:Creating metrics dataframe
2023-05-19 17:06:05,965:INFO:Uploading results into container
2023-05-19 17:06:05,965:INFO:Uploading model into container now
2023-05-19 17:06:05,966:INFO:_master_model_container: 32
2023-05-19 17:06:05,966:INFO:_display_container: 4
2023-05-19 17:06:05,966:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:06:05,966:INFO:create_model() successfully completed......................................
2023-05-19 17:06:06,093:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:06,094:INFO:Creating metrics dataframe
2023-05-19 17:06:06,100:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:06:06,101:INFO:Total runtime is 0.15094374815622966 minutes
2023-05-19 17:06:06,103:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:06,104:INFO:Initializing create_model()
2023-05-19 17:06:06,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:06,104:INFO:Checking exceptions
2023-05-19 17:06:06,104:INFO:Importing libraries
2023-05-19 17:06:06,104:INFO:Copying training dataset
2023-05-19 17:06:06,114:INFO:Defining folds
2023-05-19 17:06:06,115:INFO:Declaring metric variables
2023-05-19 17:06:06,118:INFO:Importing untrained model
2023-05-19 17:06:06,120:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:06:06,125:INFO:Starting cross validation
2023-05-19 17:06:06,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:06,639:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,667:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,690:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,701:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,702:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,738:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,756:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,824:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,862:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,874:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:06,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,893:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,907:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:06,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,048:INFO:Calculating mean and std
2023-05-19 17:06:07,050:INFO:Creating metrics dataframe
2023-05-19 17:06:07,066:INFO:Uploading results into container
2023-05-19 17:06:07,067:INFO:Uploading model into container now
2023-05-19 17:06:07,067:INFO:_master_model_container: 33
2023-05-19 17:06:07,067:INFO:_display_container: 4
2023-05-19 17:06:07,067:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:06:07,067:INFO:create_model() successfully completed......................................
2023-05-19 17:06:07,195:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:07,195:INFO:Creating metrics dataframe
2023-05-19 17:06:07,201:INFO:Initializing Ridge Classifier
2023-05-19 17:06:07,201:INFO:Total runtime is 0.16928474903106688 minutes
2023-05-19 17:06:07,203:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:07,203:INFO:Initializing create_model()
2023-05-19 17:06:07,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:07,203:INFO:Checking exceptions
2023-05-19 17:06:07,203:INFO:Importing libraries
2023-05-19 17:06:07,203:INFO:Copying training dataset
2023-05-19 17:06:07,214:INFO:Defining folds
2023-05-19 17:06:07,214:INFO:Declaring metric variables
2023-05-19 17:06:07,217:INFO:Importing untrained model
2023-05-19 17:06:07,219:INFO:Ridge Classifier Imported successfully
2023-05-19 17:06:07,223:INFO:Starting cross validation
2023-05-19 17:06:07,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:07,735:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,746:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,763:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,821:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,830:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,836:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,852:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,890:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:07,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,985:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:07,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:08,004:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:08,009:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:08,009:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:08,010:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:08,150:INFO:Calculating mean and std
2023-05-19 17:06:08,152:INFO:Creating metrics dataframe
2023-05-19 17:06:08,169:INFO:Uploading results into container
2023-05-19 17:06:08,169:INFO:Uploading model into container now
2023-05-19 17:06:08,169:INFO:_master_model_container: 34
2023-05-19 17:06:08,170:INFO:_display_container: 4
2023-05-19 17:06:08,170:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:06:08,170:INFO:create_model() successfully completed......................................
2023-05-19 17:06:08,290:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:08,290:INFO:Creating metrics dataframe
2023-05-19 17:06:08,296:INFO:Initializing Random Forest Classifier
2023-05-19 17:06:08,296:INFO:Total runtime is 0.18754194180170694 minutes
2023-05-19 17:06:08,299:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:08,299:INFO:Initializing create_model()
2023-05-19 17:06:08,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:08,299:INFO:Checking exceptions
2023-05-19 17:06:08,299:INFO:Importing libraries
2023-05-19 17:06:08,299:INFO:Copying training dataset
2023-05-19 17:06:08,310:INFO:Defining folds
2023-05-19 17:06:08,310:INFO:Declaring metric variables
2023-05-19 17:06:08,313:INFO:Importing untrained model
2023-05-19 17:06:08,315:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:06:08,320:INFO:Starting cross validation
2023-05-19 17:06:08,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:09,184:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,285:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,332:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,442:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:09,584:INFO:Calculating mean and std
2023-05-19 17:06:09,586:INFO:Creating metrics dataframe
2023-05-19 17:06:09,602:INFO:Uploading results into container
2023-05-19 17:06:09,603:INFO:Uploading model into container now
2023-05-19 17:06:09,603:INFO:_master_model_container: 35
2023-05-19 17:06:09,603:INFO:_display_container: 4
2023-05-19 17:06:09,603:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:09,603:INFO:create_model() successfully completed......................................
2023-05-19 17:06:09,726:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:09,726:INFO:Creating metrics dataframe
2023-05-19 17:06:09,732:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:06:09,733:INFO:Total runtime is 0.21147689819335935 minutes
2023-05-19 17:06:09,735:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:09,735:INFO:Initializing create_model()
2023-05-19 17:06:09,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:09,735:INFO:Checking exceptions
2023-05-19 17:06:09,735:INFO:Importing libraries
2023-05-19 17:06:09,735:INFO:Copying training dataset
2023-05-19 17:06:09,746:INFO:Defining folds
2023-05-19 17:06:09,746:INFO:Declaring metric variables
2023-05-19 17:06:09,748:INFO:Importing untrained model
2023-05-19 17:06:09,751:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:06:09,755:INFO:Starting cross validation
2023-05-19 17:06:09,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:10,306:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,340:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,406:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,453:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,506:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:10,677:INFO:Calculating mean and std
2023-05-19 17:06:10,680:INFO:Creating metrics dataframe
2023-05-19 17:06:10,696:INFO:Uploading results into container
2023-05-19 17:06:10,696:INFO:Uploading model into container now
2023-05-19 17:06:10,696:INFO:_master_model_container: 36
2023-05-19 17:06:10,696:INFO:_display_container: 4
2023-05-19 17:06:10,696:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:06:10,696:INFO:create_model() successfully completed......................................
2023-05-19 17:06:10,822:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:10,822:INFO:Creating metrics dataframe
2023-05-19 17:06:10,829:INFO:Initializing Ada Boost Classifier
2023-05-19 17:06:10,829:INFO:Total runtime is 0.2297482967376709 minutes
2023-05-19 17:06:10,831:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:10,832:INFO:Initializing create_model()
2023-05-19 17:06:10,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:10,832:INFO:Checking exceptions
2023-05-19 17:06:10,832:INFO:Importing libraries
2023-05-19 17:06:10,832:INFO:Copying training dataset
2023-05-19 17:06:10,842:INFO:Defining folds
2023-05-19 17:06:10,842:INFO:Declaring metric variables
2023-05-19 17:06:10,845:INFO:Importing untrained model
2023-05-19 17:06:10,848:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:06:10,853:INFO:Starting cross validation
2023-05-19 17:06:10,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:11,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,554:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,562:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,665:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,724:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,742:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:11,896:INFO:Calculating mean and std
2023-05-19 17:06:11,898:INFO:Creating metrics dataframe
2023-05-19 17:06:11,917:INFO:Uploading results into container
2023-05-19 17:06:11,918:INFO:Uploading model into container now
2023-05-19 17:06:11,918:INFO:_master_model_container: 37
2023-05-19 17:06:11,918:INFO:_display_container: 4
2023-05-19 17:06:11,918:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:06:11,918:INFO:create_model() successfully completed......................................
2023-05-19 17:06:12,036:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:12,036:INFO:Creating metrics dataframe
2023-05-19 17:06:12,043:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:06:12,043:INFO:Total runtime is 0.24999181429545084 minutes
2023-05-19 17:06:12,045:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:12,045:INFO:Initializing create_model()
2023-05-19 17:06:12,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:12,045:INFO:Checking exceptions
2023-05-19 17:06:12,045:INFO:Importing libraries
2023-05-19 17:06:12,045:INFO:Copying training dataset
2023-05-19 17:06:12,054:INFO:Defining folds
2023-05-19 17:06:12,054:INFO:Declaring metric variables
2023-05-19 17:06:12,057:INFO:Importing untrained model
2023-05-19 17:06:12,059:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:06:12,063:INFO:Starting cross validation
2023-05-19 17:06:12,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:12,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,888:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,920:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:12,994:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,005:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,085:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,161:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,166:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,178:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,194:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,198:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:13,376:INFO:Calculating mean and std
2023-05-19 17:06:13,378:INFO:Creating metrics dataframe
2023-05-19 17:06:13,395:INFO:Uploading results into container
2023-05-19 17:06:13,395:INFO:Uploading model into container now
2023-05-19 17:06:13,396:INFO:_master_model_container: 38
2023-05-19 17:06:13,396:INFO:_display_container: 4
2023-05-19 17:06:13,396:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:06:13,396:INFO:create_model() successfully completed......................................
2023-05-19 17:06:13,519:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:13,520:INFO:Creating metrics dataframe
2023-05-19 17:06:13,526:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:06:13,526:INFO:Total runtime is 0.27470599810282387 minutes
2023-05-19 17:06:13,528:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:13,528:INFO:Initializing create_model()
2023-05-19 17:06:13,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:13,528:INFO:Checking exceptions
2023-05-19 17:06:13,528:INFO:Importing libraries
2023-05-19 17:06:13,528:INFO:Copying training dataset
2023-05-19 17:06:13,538:INFO:Defining folds
2023-05-19 17:06:13,539:INFO:Declaring metric variables
2023-05-19 17:06:13,541:INFO:Importing untrained model
2023-05-19 17:06:13,543:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:06:13,547:INFO:Starting cross validation
2023-05-19 17:06:13,548:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:14,088:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,117:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,130:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,140:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,147:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,153:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,156:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,165:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,245:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:14,438:INFO:Calculating mean and std
2023-05-19 17:06:14,441:INFO:Creating metrics dataframe
2023-05-19 17:06:14,459:INFO:Uploading results into container
2023-05-19 17:06:14,460:INFO:Uploading model into container now
2023-05-19 17:06:14,460:INFO:_master_model_container: 39
2023-05-19 17:06:14,460:INFO:_display_container: 4
2023-05-19 17:06:14,460:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:06:14,460:INFO:create_model() successfully completed......................................
2023-05-19 17:06:14,584:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:14,584:INFO:Creating metrics dataframe
2023-05-19 17:06:14,590:INFO:Initializing Extra Trees Classifier
2023-05-19 17:06:14,590:INFO:Total runtime is 0.29244072834650675 minutes
2023-05-19 17:06:14,593:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:14,593:INFO:Initializing create_model()
2023-05-19 17:06:14,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:14,593:INFO:Checking exceptions
2023-05-19 17:06:14,593:INFO:Importing libraries
2023-05-19 17:06:14,593:INFO:Copying training dataset
2023-05-19 17:06:14,603:INFO:Defining folds
2023-05-19 17:06:14,603:INFO:Declaring metric variables
2023-05-19 17:06:14,606:INFO:Importing untrained model
2023-05-19 17:06:14,609:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:06:14,614:INFO:Starting cross validation
2023-05-19 17:06:14,615:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:15,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,594:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,604:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,631:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,655:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,657:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,734:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,735:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,752:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,760:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,825:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,829:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,841:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,842:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,873:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:15,924:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:16,043:INFO:Calculating mean and std
2023-05-19 17:06:16,046:INFO:Creating metrics dataframe
2023-05-19 17:06:16,063:INFO:Uploading results into container
2023-05-19 17:06:16,063:INFO:Uploading model into container now
2023-05-19 17:06:16,064:INFO:_master_model_container: 40
2023-05-19 17:06:16,064:INFO:_display_container: 4
2023-05-19 17:06:16,064:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:16,064:INFO:create_model() successfully completed......................................
2023-05-19 17:06:16,186:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:16,186:INFO:Creating metrics dataframe
2023-05-19 17:06:16,194:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:06:16,194:INFO:Total runtime is 0.31916345755259196 minutes
2023-05-19 17:06:16,196:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:16,197:INFO:Initializing create_model()
2023-05-19 17:06:16,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:16,197:INFO:Checking exceptions
2023-05-19 17:06:16,197:INFO:Importing libraries
2023-05-19 17:06:16,197:INFO:Copying training dataset
2023-05-19 17:06:16,206:INFO:Defining folds
2023-05-19 17:06:16,206:INFO:Declaring metric variables
2023-05-19 17:06:16,209:INFO:Importing untrained model
2023-05-19 17:06:16,212:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:06:16,216:INFO:Starting cross validation
2023-05-19 17:06:16,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:17,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,131:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,147:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,161:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,179:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,179:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,213:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,221:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,389:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,432:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,437:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,450:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,457:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,457:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:17,594:INFO:Calculating mean and std
2023-05-19 17:06:17,597:INFO:Creating metrics dataframe
2023-05-19 17:06:17,615:INFO:Uploading results into container
2023-05-19 17:06:17,616:INFO:Uploading model into container now
2023-05-19 17:06:17,616:INFO:_master_model_container: 41
2023-05-19 17:06:17,616:INFO:_display_container: 4
2023-05-19 17:06:17,617:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:06:17,617:INFO:create_model() successfully completed......................................
2023-05-19 17:06:17,741:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:17,741:INFO:Creating metrics dataframe
2023-05-19 17:06:17,749:INFO:Initializing Dummy Classifier
2023-05-19 17:06:17,749:INFO:Total runtime is 0.3450883825620015 minutes
2023-05-19 17:06:17,751:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:17,751:INFO:Initializing create_model()
2023-05-19 17:06:17,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaf1016700>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:17,751:INFO:Checking exceptions
2023-05-19 17:06:17,751:INFO:Importing libraries
2023-05-19 17:06:17,751:INFO:Copying training dataset
2023-05-19 17:06:17,763:INFO:Defining folds
2023-05-19 17:06:17,763:INFO:Declaring metric variables
2023-05-19 17:06:17,766:INFO:Importing untrained model
2023-05-19 17:06:17,769:INFO:Dummy Classifier Imported successfully
2023-05-19 17:06:17,774:INFO:Starting cross validation
2023-05-19 17:06:17,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:18,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,313:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,322:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,338:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,352:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,492:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,498:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,504:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,517:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:18,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:18,662:INFO:Calculating mean and std
2023-05-19 17:06:18,664:INFO:Creating metrics dataframe
2023-05-19 17:06:18,680:INFO:Uploading results into container
2023-05-19 17:06:18,680:INFO:Uploading model into container now
2023-05-19 17:06:18,681:INFO:_master_model_container: 42
2023-05-19 17:06:18,681:INFO:_display_container: 4
2023-05-19 17:06:18,681:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:06:18,681:INFO:create_model() successfully completed......................................
2023-05-19 17:06:18,799:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:18,799:INFO:Creating metrics dataframe
2023-05-19 17:06:18,812:INFO:Initializing create_model()
2023-05-19 17:06:18,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:18,812:INFO:Checking exceptions
2023-05-19 17:06:18,813:INFO:Importing libraries
2023-05-19 17:06:18,813:INFO:Copying training dataset
2023-05-19 17:06:18,822:INFO:Defining folds
2023-05-19 17:06:18,822:INFO:Declaring metric variables
2023-05-19 17:06:18,823:INFO:Importing untrained model
2023-05-19 17:06:18,823:INFO:Declaring custom model
2023-05-19 17:06:18,823:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:06:18,824:INFO:Cross validation set to False
2023-05-19 17:06:18,824:INFO:Fitting Model
2023-05-19 17:06:19,253:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:19,253:INFO:create_model() successfully completed......................................
2023-05-19 17:06:19,391:INFO:_master_model_container: 42
2023-05-19 17:06:19,391:INFO:_display_container: 4
2023-05-19 17:06:19,392:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:19,392:INFO:compare_models() successfully completed......................................
2023-05-19 17:06:32,948:INFO:Initializing compare_models()
2023-05-19 17:06:32,949:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:06:32,949:INFO:Checking exceptions
2023-05-19 17:06:32,955:INFO:Preparing display monitor
2023-05-19 17:06:32,978:INFO:Initializing Logistic Regression
2023-05-19 17:06:32,978:INFO:Total runtime is 3.914038340250651e-06 minutes
2023-05-19 17:06:32,981:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:32,981:INFO:Initializing create_model()
2023-05-19 17:06:32,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:32,982:INFO:Checking exceptions
2023-05-19 17:06:32,982:INFO:Importing libraries
2023-05-19 17:06:32,982:INFO:Copying training dataset
2023-05-19 17:06:32,996:INFO:Defining folds
2023-05-19 17:06:32,996:INFO:Declaring metric variables
2023-05-19 17:06:32,999:INFO:Importing untrained model
2023-05-19 17:06:33,003:INFO:Logistic Regression Imported successfully
2023-05-19 17:06:33,009:INFO:Starting cross validation
2023-05-19 17:06:33,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:33,562:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,603:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,607:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,607:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,621:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,640:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,648:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,659:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,702:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,752:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,783:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,785:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,800:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:33,936:INFO:Calculating mean and std
2023-05-19 17:06:33,938:INFO:Creating metrics dataframe
2023-05-19 17:06:33,956:INFO:Uploading results into container
2023-05-19 17:06:33,956:INFO:Uploading model into container now
2023-05-19 17:06:33,956:INFO:_master_model_container: 43
2023-05-19 17:06:33,956:INFO:_display_container: 5
2023-05-19 17:06:33,956:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:06:33,956:INFO:create_model() successfully completed......................................
2023-05-19 17:06:34,095:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:34,095:INFO:Creating metrics dataframe
2023-05-19 17:06:34,101:INFO:Initializing K Neighbors Classifier
2023-05-19 17:06:34,101:INFO:Total runtime is 0.01872309446334839 minutes
2023-05-19 17:06:34,104:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:34,104:INFO:Initializing create_model()
2023-05-19 17:06:34,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:34,104:INFO:Checking exceptions
2023-05-19 17:06:34,104:INFO:Importing libraries
2023-05-19 17:06:34,104:INFO:Copying training dataset
2023-05-19 17:06:34,116:INFO:Defining folds
2023-05-19 17:06:34,116:INFO:Declaring metric variables
2023-05-19 17:06:34,118:INFO:Importing untrained model
2023-05-19 17:06:34,122:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:06:34,126:INFO:Starting cross validation
2023-05-19 17:06:34,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:37,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,907:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:37,998:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,016:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,034:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,633:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,661:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:38,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,286:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,333:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:39,474:INFO:Calculating mean and std
2023-05-19 17:06:39,477:INFO:Creating metrics dataframe
2023-05-19 17:06:39,498:INFO:Uploading results into container
2023-05-19 17:06:39,499:INFO:Uploading model into container now
2023-05-19 17:06:39,499:INFO:_master_model_container: 44
2023-05-19 17:06:39,499:INFO:_display_container: 5
2023-05-19 17:06:39,499:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:06:39,499:INFO:create_model() successfully completed......................................
2023-05-19 17:06:39,630:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:39,630:INFO:Creating metrics dataframe
2023-05-19 17:06:39,638:INFO:Initializing Naive Bayes
2023-05-19 17:06:39,638:INFO:Total runtime is 0.11100734074910482 minutes
2023-05-19 17:06:39,641:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:39,641:INFO:Initializing create_model()
2023-05-19 17:06:39,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:39,642:INFO:Checking exceptions
2023-05-19 17:06:39,642:INFO:Importing libraries
2023-05-19 17:06:39,642:INFO:Copying training dataset
2023-05-19 17:06:39,657:INFO:Defining folds
2023-05-19 17:06:39,657:INFO:Declaring metric variables
2023-05-19 17:06:39,660:INFO:Importing untrained model
2023-05-19 17:06:39,663:INFO:Naive Bayes Imported successfully
2023-05-19 17:06:39,667:INFO:Starting cross validation
2023-05-19 17:06:39,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:40,278:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,303:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,322:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,348:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,494:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,524:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,540:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,585:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:40,706:INFO:Calculating mean and std
2023-05-19 17:06:40,709:INFO:Creating metrics dataframe
2023-05-19 17:06:40,726:INFO:Uploading results into container
2023-05-19 17:06:40,727:INFO:Uploading model into container now
2023-05-19 17:06:40,727:INFO:_master_model_container: 45
2023-05-19 17:06:40,727:INFO:_display_container: 5
2023-05-19 17:06:40,727:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:06:40,727:INFO:create_model() successfully completed......................................
2023-05-19 17:06:40,864:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:40,864:INFO:Creating metrics dataframe
2023-05-19 17:06:40,871:INFO:Initializing Decision Tree Classifier
2023-05-19 17:06:40,871:INFO:Total runtime is 0.1315606395403544 minutes
2023-05-19 17:06:40,874:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:40,874:INFO:Initializing create_model()
2023-05-19 17:06:40,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:40,874:INFO:Checking exceptions
2023-05-19 17:06:40,874:INFO:Importing libraries
2023-05-19 17:06:40,874:INFO:Copying training dataset
2023-05-19 17:06:40,888:INFO:Defining folds
2023-05-19 17:06:40,888:INFO:Declaring metric variables
2023-05-19 17:06:40,891:INFO:Importing untrained model
2023-05-19 17:06:40,894:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:06:40,900:INFO:Starting cross validation
2023-05-19 17:06:40,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:41,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,527:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,547:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,563:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,566:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,587:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,700:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:41,860:INFO:Calculating mean and std
2023-05-19 17:06:41,863:INFO:Creating metrics dataframe
2023-05-19 17:06:41,879:INFO:Uploading results into container
2023-05-19 17:06:41,880:INFO:Uploading model into container now
2023-05-19 17:06:41,880:INFO:_master_model_container: 46
2023-05-19 17:06:41,880:INFO:_display_container: 5
2023-05-19 17:06:41,880:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:06:41,880:INFO:create_model() successfully completed......................................
2023-05-19 17:06:42,012:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:42,012:INFO:Creating metrics dataframe
2023-05-19 17:06:42,020:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:06:42,020:INFO:Total runtime is 0.15070109367370604 minutes
2023-05-19 17:06:42,022:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:42,022:INFO:Initializing create_model()
2023-05-19 17:06:42,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:42,022:INFO:Checking exceptions
2023-05-19 17:06:42,022:INFO:Importing libraries
2023-05-19 17:06:42,022:INFO:Copying training dataset
2023-05-19 17:06:42,034:INFO:Defining folds
2023-05-19 17:06:42,034:INFO:Declaring metric variables
2023-05-19 17:06:42,038:INFO:Importing untrained model
2023-05-19 17:06:42,041:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:06:42,046:INFO:Starting cross validation
2023-05-19 17:06:42,048:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:42,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,611:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,612:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,612:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,619:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,620:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,653:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,668:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,735:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,740:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,750:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,754:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,763:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:06:42,783:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,784:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,808:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:42,928:INFO:Calculating mean and std
2023-05-19 17:06:42,931:INFO:Creating metrics dataframe
2023-05-19 17:06:42,947:INFO:Uploading results into container
2023-05-19 17:06:42,947:INFO:Uploading model into container now
2023-05-19 17:06:42,948:INFO:_master_model_container: 47
2023-05-19 17:06:42,948:INFO:_display_container: 5
2023-05-19 17:06:42,948:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:06:42,948:INFO:create_model() successfully completed......................................
2023-05-19 17:06:43,073:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:43,073:INFO:Creating metrics dataframe
2023-05-19 17:06:43,079:INFO:Initializing Ridge Classifier
2023-05-19 17:06:43,080:INFO:Total runtime is 0.1683659474054972 minutes
2023-05-19 17:06:43,082:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:43,082:INFO:Initializing create_model()
2023-05-19 17:06:43,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:43,082:INFO:Checking exceptions
2023-05-19 17:06:43,083:INFO:Importing libraries
2023-05-19 17:06:43,083:INFO:Copying training dataset
2023-05-19 17:06:43,093:INFO:Defining folds
2023-05-19 17:06:43,093:INFO:Declaring metric variables
2023-05-19 17:06:43,095:INFO:Importing untrained model
2023-05-19 17:06:43,098:INFO:Ridge Classifier Imported successfully
2023-05-19 17:06:43,103:INFO:Starting cross validation
2023-05-19 17:06:43,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:43,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,674:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,690:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,694:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,718:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,731:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:43,759:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,859:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,874:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,911:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,911:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:06:43,930:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:43,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:44,078:INFO:Calculating mean and std
2023-05-19 17:06:44,080:INFO:Creating metrics dataframe
2023-05-19 17:06:44,097:INFO:Uploading results into container
2023-05-19 17:06:44,098:INFO:Uploading model into container now
2023-05-19 17:06:44,098:INFO:_master_model_container: 48
2023-05-19 17:06:44,098:INFO:_display_container: 5
2023-05-19 17:06:44,098:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:06:44,098:INFO:create_model() successfully completed......................................
2023-05-19 17:06:44,227:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:44,227:INFO:Creating metrics dataframe
2023-05-19 17:06:44,234:INFO:Initializing Random Forest Classifier
2023-05-19 17:06:44,234:INFO:Total runtime is 0.18760631481806433 minutes
2023-05-19 17:06:44,236:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:44,236:INFO:Initializing create_model()
2023-05-19 17:06:44,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:44,236:INFO:Checking exceptions
2023-05-19 17:06:44,236:INFO:Importing libraries
2023-05-19 17:06:44,236:INFO:Copying training dataset
2023-05-19 17:06:44,248:INFO:Defining folds
2023-05-19 17:06:44,248:INFO:Declaring metric variables
2023-05-19 17:06:44,251:INFO:Importing untrained model
2023-05-19 17:06:44,254:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:06:44,259:INFO:Starting cross validation
2023-05-19 17:06:44,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:45,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,141:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,165:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,199:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,200:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,223:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,367:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,382:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,396:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,396:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:45,531:INFO:Calculating mean and std
2023-05-19 17:06:45,535:INFO:Creating metrics dataframe
2023-05-19 17:06:45,553:INFO:Uploading results into container
2023-05-19 17:06:45,553:INFO:Uploading model into container now
2023-05-19 17:06:45,554:INFO:_master_model_container: 49
2023-05-19 17:06:45,554:INFO:_display_container: 5
2023-05-19 17:06:45,554:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:45,554:INFO:create_model() successfully completed......................................
2023-05-19 17:06:45,676:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:45,676:INFO:Creating metrics dataframe
2023-05-19 17:06:45,684:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:06:45,684:INFO:Total runtime is 0.211764645576477 minutes
2023-05-19 17:06:45,686:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:45,686:INFO:Initializing create_model()
2023-05-19 17:06:45,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:45,686:INFO:Checking exceptions
2023-05-19 17:06:45,686:INFO:Importing libraries
2023-05-19 17:06:45,686:INFO:Copying training dataset
2023-05-19 17:06:45,697:INFO:Defining folds
2023-05-19 17:06:45,697:INFO:Declaring metric variables
2023-05-19 17:06:45,699:INFO:Importing untrained model
2023-05-19 17:06:45,702:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:06:45,707:INFO:Starting cross validation
2023-05-19 17:06:45,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:46,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,320:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,332:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,353:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,356:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,441:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,448:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,495:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:46,641:INFO:Calculating mean and std
2023-05-19 17:06:46,645:INFO:Creating metrics dataframe
2023-05-19 17:06:46,661:INFO:Uploading results into container
2023-05-19 17:06:46,661:INFO:Uploading model into container now
2023-05-19 17:06:46,662:INFO:_master_model_container: 50
2023-05-19 17:06:46,662:INFO:_display_container: 5
2023-05-19 17:06:46,662:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:06:46,662:INFO:create_model() successfully completed......................................
2023-05-19 17:06:46,786:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:46,786:INFO:Creating metrics dataframe
2023-05-19 17:06:46,794:INFO:Initializing Ada Boost Classifier
2023-05-19 17:06:46,795:INFO:Total runtime is 0.230280327796936 minutes
2023-05-19 17:06:46,796:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:46,797:INFO:Initializing create_model()
2023-05-19 17:06:46,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:46,797:INFO:Checking exceptions
2023-05-19 17:06:46,797:INFO:Importing libraries
2023-05-19 17:06:46,797:INFO:Copying training dataset
2023-05-19 17:06:46,807:INFO:Defining folds
2023-05-19 17:06:46,807:INFO:Declaring metric variables
2023-05-19 17:06:46,810:INFO:Importing untrained model
2023-05-19 17:06:46,812:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:06:46,816:INFO:Starting cross validation
2023-05-19 17:06:46,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:47,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,493:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,511:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,517:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,545:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,558:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,577:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,587:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,681:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,718:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,735:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,760:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:47,887:INFO:Calculating mean and std
2023-05-19 17:06:47,889:INFO:Creating metrics dataframe
2023-05-19 17:06:47,906:INFO:Uploading results into container
2023-05-19 17:06:47,906:INFO:Uploading model into container now
2023-05-19 17:06:47,907:INFO:_master_model_container: 51
2023-05-19 17:06:47,907:INFO:_display_container: 5
2023-05-19 17:06:47,907:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:06:47,907:INFO:create_model() successfully completed......................................
2023-05-19 17:06:48,033:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:48,033:INFO:Creating metrics dataframe
2023-05-19 17:06:48,041:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:06:48,041:INFO:Total runtime is 0.2510583678881327 minutes
2023-05-19 17:06:48,044:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:48,044:INFO:Initializing create_model()
2023-05-19 17:06:48,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:48,045:INFO:Checking exceptions
2023-05-19 17:06:48,045:INFO:Importing libraries
2023-05-19 17:06:48,045:INFO:Copying training dataset
2023-05-19 17:06:48,055:INFO:Defining folds
2023-05-19 17:06:48,055:INFO:Declaring metric variables
2023-05-19 17:06:48,057:INFO:Importing untrained model
2023-05-19 17:06:48,060:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:06:48,065:INFO:Starting cross validation
2023-05-19 17:06:48,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:48,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,927:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,952:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,957:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,958:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,968:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,983:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:48,987:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,025:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,041:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,057:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,166:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,182:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,198:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,229:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,242:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,355:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:49,492:INFO:Calculating mean and std
2023-05-19 17:06:49,493:INFO:Creating metrics dataframe
2023-05-19 17:06:49,507:INFO:Uploading results into container
2023-05-19 17:06:49,508:INFO:Uploading model into container now
2023-05-19 17:06:49,508:INFO:_master_model_container: 52
2023-05-19 17:06:49,508:INFO:_display_container: 5
2023-05-19 17:06:49,508:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:06:49,508:INFO:create_model() successfully completed......................................
2023-05-19 17:06:49,632:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:49,632:INFO:Creating metrics dataframe
2023-05-19 17:06:49,639:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:06:49,639:INFO:Total runtime is 0.2776872038841247 minutes
2023-05-19 17:06:49,641:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:49,642:INFO:Initializing create_model()
2023-05-19 17:06:49,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:49,642:INFO:Checking exceptions
2023-05-19 17:06:49,642:INFO:Importing libraries
2023-05-19 17:06:49,642:INFO:Copying training dataset
2023-05-19 17:06:49,651:INFO:Defining folds
2023-05-19 17:06:49,652:INFO:Declaring metric variables
2023-05-19 17:06:49,654:INFO:Importing untrained model
2023-05-19 17:06:49,656:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:06:49,660:INFO:Starting cross validation
2023-05-19 17:06:49,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:50,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,221:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,225:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,243:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,283:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,416:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,421:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,433:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,446:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:50,574:INFO:Calculating mean and std
2023-05-19 17:06:50,577:INFO:Creating metrics dataframe
2023-05-19 17:06:50,592:INFO:Uploading results into container
2023-05-19 17:06:50,592:INFO:Uploading model into container now
2023-05-19 17:06:50,593:INFO:_master_model_container: 53
2023-05-19 17:06:50,593:INFO:_display_container: 5
2023-05-19 17:06:50,593:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:06:50,593:INFO:create_model() successfully completed......................................
2023-05-19 17:06:50,716:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:50,716:INFO:Creating metrics dataframe
2023-05-19 17:06:50,724:INFO:Initializing Extra Trees Classifier
2023-05-19 17:06:50,724:INFO:Total runtime is 0.29577658573786414 minutes
2023-05-19 17:06:50,727:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:50,727:INFO:Initializing create_model()
2023-05-19 17:06:50,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:50,727:INFO:Checking exceptions
2023-05-19 17:06:50,727:INFO:Importing libraries
2023-05-19 17:06:50,727:INFO:Copying training dataset
2023-05-19 17:06:50,737:INFO:Defining folds
2023-05-19 17:06:50,737:INFO:Declaring metric variables
2023-05-19 17:06:50,740:INFO:Importing untrained model
2023-05-19 17:06:50,743:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:06:50,747:INFO:Starting cross validation
2023-05-19 17:06:50,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:51,756:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,784:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,840:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,852:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,907:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,950:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,952:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,957:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,978:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,992:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:51,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,001:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,015:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,058:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:52,175:INFO:Calculating mean and std
2023-05-19 17:06:52,178:INFO:Creating metrics dataframe
2023-05-19 17:06:52,194:INFO:Uploading results into container
2023-05-19 17:06:52,195:INFO:Uploading model into container now
2023-05-19 17:06:52,195:INFO:_master_model_container: 54
2023-05-19 17:06:52,195:INFO:_display_container: 5
2023-05-19 17:06:52,195:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:52,195:INFO:create_model() successfully completed......................................
2023-05-19 17:06:52,326:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:52,326:INFO:Creating metrics dataframe
2023-05-19 17:06:52,336:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:06:52,336:INFO:Total runtime is 0.3226354837417602 minutes
2023-05-19 17:06:52,338:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:52,338:INFO:Initializing create_model()
2023-05-19 17:06:52,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:52,339:INFO:Checking exceptions
2023-05-19 17:06:52,339:INFO:Importing libraries
2023-05-19 17:06:52,339:INFO:Copying training dataset
2023-05-19 17:06:52,349:INFO:Defining folds
2023-05-19 17:06:52,350:INFO:Declaring metric variables
2023-05-19 17:06:52,352:INFO:Importing untrained model
2023-05-19 17:06:52,354:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:06:52,357:INFO:Starting cross validation
2023-05-19 17:06:52,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:53,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,275:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,327:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,353:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,559:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,575:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,612:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,614:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,644:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:53,772:INFO:Calculating mean and std
2023-05-19 17:06:53,774:INFO:Creating metrics dataframe
2023-05-19 17:06:53,791:INFO:Uploading results into container
2023-05-19 17:06:53,792:INFO:Uploading model into container now
2023-05-19 17:06:53,792:INFO:_master_model_container: 55
2023-05-19 17:06:53,792:INFO:_display_container: 5
2023-05-19 17:06:53,793:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:06:53,793:INFO:create_model() successfully completed......................................
2023-05-19 17:06:53,916:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:53,916:INFO:Creating metrics dataframe
2023-05-19 17:06:53,925:INFO:Initializing Dummy Classifier
2023-05-19 17:06:53,925:INFO:Total runtime is 0.3491147875785827 minutes
2023-05-19 17:06:53,927:INFO:SubProcess create_model() called ==================================
2023-05-19 17:06:53,928:INFO:Initializing create_model()
2023-05-19 17:06:53,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaefd45220>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:53,928:INFO:Checking exceptions
2023-05-19 17:06:53,928:INFO:Importing libraries
2023-05-19 17:06:53,928:INFO:Copying training dataset
2023-05-19 17:06:53,937:INFO:Defining folds
2023-05-19 17:06:53,937:INFO:Declaring metric variables
2023-05-19 17:06:53,941:INFO:Importing untrained model
2023-05-19 17:06:53,943:INFO:Dummy Classifier Imported successfully
2023-05-19 17:06:53,948:INFO:Starting cross validation
2023-05-19 17:06:53,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:06:54,473:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,492:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,540:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,547:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,549:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,566:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,568:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,673:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,685:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,701:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:06:54,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:06:54,749:INFO:Calculating mean and std
2023-05-19 17:06:54,750:INFO:Creating metrics dataframe
2023-05-19 17:06:54,779:INFO:Uploading results into container
2023-05-19 17:06:54,780:INFO:Uploading model into container now
2023-05-19 17:06:54,780:INFO:_master_model_container: 56
2023-05-19 17:06:54,780:INFO:_display_container: 5
2023-05-19 17:06:54,780:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:06:54,780:INFO:create_model() successfully completed......................................
2023-05-19 17:06:54,904:INFO:SubProcess create_model() end ==================================
2023-05-19 17:06:54,904:INFO:Creating metrics dataframe
2023-05-19 17:06:54,920:INFO:Initializing create_model()
2023-05-19 17:06:54,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:06:54,920:INFO:Checking exceptions
2023-05-19 17:06:54,921:INFO:Importing libraries
2023-05-19 17:06:54,921:INFO:Copying training dataset
2023-05-19 17:06:54,932:INFO:Defining folds
2023-05-19 17:06:54,932:INFO:Declaring metric variables
2023-05-19 17:06:54,932:INFO:Importing untrained model
2023-05-19 17:06:54,932:INFO:Declaring custom model
2023-05-19 17:06:54,932:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:06:54,934:INFO:Cross validation set to False
2023-05-19 17:06:54,934:INFO:Fitting Model
2023-05-19 17:06:55,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:55,372:INFO:create_model() successfully completed......................................
2023-05-19 17:06:55,518:INFO:_master_model_container: 56
2023-05-19 17:06:55,518:INFO:_display_container: 5
2023-05-19 17:06:55,518:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:06:55,518:INFO:compare_models() successfully completed......................................
2023-05-19 17:07:13,636:INFO:Initializing compare_models()
2023-05-19 17:07:13,636:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-19 17:07:13,636:INFO:Checking exceptions
2023-05-19 17:07:13,644:INFO:Preparing display monitor
2023-05-19 17:07:13,667:INFO:Initializing Logistic Regression
2023-05-19 17:07:13,668:INFO:Total runtime is 4.374980926513672e-06 minutes
2023-05-19 17:07:13,671:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:13,672:INFO:Initializing create_model()
2023-05-19 17:07:13,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:13,672:INFO:Checking exceptions
2023-05-19 17:07:13,672:INFO:Importing libraries
2023-05-19 17:07:13,672:INFO:Copying training dataset
2023-05-19 17:07:13,685:INFO:Defining folds
2023-05-19 17:07:13,685:INFO:Declaring metric variables
2023-05-19 17:07:13,689:INFO:Importing untrained model
2023-05-19 17:07:13,693:INFO:Logistic Regression Imported successfully
2023-05-19 17:07:13,701:INFO:Starting cross validation
2023-05-19 17:07:13,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:14,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,313:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,461:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,498:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,506:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,514:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:14,678:INFO:Calculating mean and std
2023-05-19 17:07:14,679:INFO:Creating metrics dataframe
2023-05-19 17:07:14,697:INFO:Uploading results into container
2023-05-19 17:07:14,698:INFO:Uploading model into container now
2023-05-19 17:07:14,699:INFO:_master_model_container: 57
2023-05-19 17:07:14,699:INFO:_display_container: 6
2023-05-19 17:07:14,699:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-19 17:07:14,699:INFO:create_model() successfully completed......................................
2023-05-19 17:07:14,834:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:14,834:INFO:Creating metrics dataframe
2023-05-19 17:07:14,841:INFO:Initializing K Neighbors Classifier
2023-05-19 17:07:14,842:INFO:Total runtime is 0.019570791721343996 minutes
2023-05-19 17:07:14,844:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:14,844:INFO:Initializing create_model()
2023-05-19 17:07:14,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:14,844:INFO:Checking exceptions
2023-05-19 17:07:14,844:INFO:Importing libraries
2023-05-19 17:07:14,844:INFO:Copying training dataset
2023-05-19 17:07:14,855:INFO:Defining folds
2023-05-19 17:07:14,855:INFO:Declaring metric variables
2023-05-19 17:07:14,858:INFO:Importing untrained model
2023-05-19 17:07:14,861:INFO:K Neighbors Classifier Imported successfully
2023-05-19 17:07:14,865:INFO:Starting cross validation
2023-05-19 17:07:14,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:18,826:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,844:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,849:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,885:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,899:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,901:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,919:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,930:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,934:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:18,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,332:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,350:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,379:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:20,499:INFO:Calculating mean and std
2023-05-19 17:07:20,501:INFO:Creating metrics dataframe
2023-05-19 17:07:20,516:INFO:Uploading results into container
2023-05-19 17:07:20,517:INFO:Uploading model into container now
2023-05-19 17:07:20,517:INFO:_master_model_container: 58
2023-05-19 17:07:20,517:INFO:_display_container: 6
2023-05-19 17:07:20,517:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-19 17:07:20,517:INFO:create_model() successfully completed......................................
2023-05-19 17:07:20,654:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:20,654:INFO:Creating metrics dataframe
2023-05-19 17:07:20,661:INFO:Initializing Naive Bayes
2023-05-19 17:07:20,661:INFO:Total runtime is 0.11656553347905477 minutes
2023-05-19 17:07:20,664:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:20,664:INFO:Initializing create_model()
2023-05-19 17:07:20,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:20,664:INFO:Checking exceptions
2023-05-19 17:07:20,664:INFO:Importing libraries
2023-05-19 17:07:20,664:INFO:Copying training dataset
2023-05-19 17:07:20,677:INFO:Defining folds
2023-05-19 17:07:20,677:INFO:Declaring metric variables
2023-05-19 17:07:20,681:INFO:Importing untrained model
2023-05-19 17:07:20,684:INFO:Naive Bayes Imported successfully
2023-05-19 17:07:20,689:INFO:Starting cross validation
2023-05-19 17:07:20,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:21,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,403:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,406:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,407:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,416:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,536:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,613:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:21,742:INFO:Calculating mean and std
2023-05-19 17:07:21,746:INFO:Creating metrics dataframe
2023-05-19 17:07:21,766:INFO:Uploading results into container
2023-05-19 17:07:21,766:INFO:Uploading model into container now
2023-05-19 17:07:21,767:INFO:_master_model_container: 59
2023-05-19 17:07:21,767:INFO:_display_container: 6
2023-05-19 17:07:21,767:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-19 17:07:21,767:INFO:create_model() successfully completed......................................
2023-05-19 17:07:21,906:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:21,906:INFO:Creating metrics dataframe
2023-05-19 17:07:21,913:INFO:Initializing Decision Tree Classifier
2023-05-19 17:07:21,913:INFO:Total runtime is 0.13743248383204143 minutes
2023-05-19 17:07:21,917:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:21,917:INFO:Initializing create_model()
2023-05-19 17:07:21,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:21,917:INFO:Checking exceptions
2023-05-19 17:07:21,917:INFO:Importing libraries
2023-05-19 17:07:21,917:INFO:Copying training dataset
2023-05-19 17:07:21,929:INFO:Defining folds
2023-05-19 17:07:21,930:INFO:Declaring metric variables
2023-05-19 17:07:21,933:INFO:Importing untrained model
2023-05-19 17:07:21,935:INFO:Decision Tree Classifier Imported successfully
2023-05-19 17:07:21,940:INFO:Starting cross validation
2023-05-19 17:07:21,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:22,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,554:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,571:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,572:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,572:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,590:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,591:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,591:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,594:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,615:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,723:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,734:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:22,897:INFO:Calculating mean and std
2023-05-19 17:07:22,901:INFO:Creating metrics dataframe
2023-05-19 17:07:22,918:INFO:Uploading results into container
2023-05-19 17:07:22,919:INFO:Uploading model into container now
2023-05-19 17:07:22,919:INFO:_master_model_container: 60
2023-05-19 17:07:22,919:INFO:_display_container: 6
2023-05-19 17:07:22,919:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-05-19 17:07:22,919:INFO:create_model() successfully completed......................................
2023-05-19 17:07:23,054:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:23,054:INFO:Creating metrics dataframe
2023-05-19 17:07:23,061:INFO:Initializing SVM - Linear Kernel
2023-05-19 17:07:23,061:INFO:Total runtime is 0.1565645217895508 minutes
2023-05-19 17:07:23,064:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:23,065:INFO:Initializing create_model()
2023-05-19 17:07:23,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:23,065:INFO:Checking exceptions
2023-05-19 17:07:23,065:INFO:Importing libraries
2023-05-19 17:07:23,065:INFO:Copying training dataset
2023-05-19 17:07:23,078:INFO:Defining folds
2023-05-19 17:07:23,078:INFO:Declaring metric variables
2023-05-19 17:07:23,081:INFO:Importing untrained model
2023-05-19 17:07:23,084:INFO:SVM - Linear Kernel Imported successfully
2023-05-19 17:07:23,088:INFO:Starting cross validation
2023-05-19 17:07:23,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:23,626:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,635:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,671:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,687:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,722:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,722:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,725:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,783:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,807:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,810:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,817:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,824:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,828:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,844:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,850:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-19 17:07:23,857:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:23,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,003:INFO:Calculating mean and std
2023-05-19 17:07:24,005:INFO:Creating metrics dataframe
2023-05-19 17:07:24,020:INFO:Uploading results into container
2023-05-19 17:07:24,021:INFO:Uploading model into container now
2023-05-19 17:07:24,021:INFO:_master_model_container: 61
2023-05-19 17:07:24,021:INFO:_display_container: 6
2023-05-19 17:07:24,021:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-19 17:07:24,021:INFO:create_model() successfully completed......................................
2023-05-19 17:07:24,148:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:24,148:INFO:Creating metrics dataframe
2023-05-19 17:07:24,154:INFO:Initializing Ridge Classifier
2023-05-19 17:07:24,154:INFO:Total runtime is 0.17477549314498902 minutes
2023-05-19 17:07:24,156:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:24,156:INFO:Initializing create_model()
2023-05-19 17:07:24,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:24,156:INFO:Checking exceptions
2023-05-19 17:07:24,156:INFO:Importing libraries
2023-05-19 17:07:24,156:INFO:Copying training dataset
2023-05-19 17:07:24,168:INFO:Defining folds
2023-05-19 17:07:24,168:INFO:Declaring metric variables
2023-05-19 17:07:24,170:INFO:Importing untrained model
2023-05-19 17:07:24,173:INFO:Ridge Classifier Imported successfully
2023-05-19 17:07:24,178:INFO:Starting cross validation
2023-05-19 17:07:24,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:24,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,756:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,769:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,772:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,787:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,798:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,814:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,816:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,818:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,829:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,830:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,834:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,849:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,940:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,977:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:24,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:24,989:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,004:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:25,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,022:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-19 17:07:25,028:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,042:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,055:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:25,073:INFO:Calculating mean and std
2023-05-19 17:07:25,074:INFO:Creating metrics dataframe
2023-05-19 17:07:25,115:INFO:Uploading results into container
2023-05-19 17:07:25,115:INFO:Uploading model into container now
2023-05-19 17:07:25,116:INFO:_master_model_container: 62
2023-05-19 17:07:25,116:INFO:_display_container: 6
2023-05-19 17:07:25,116:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-05-19 17:07:25,116:INFO:create_model() successfully completed......................................
2023-05-19 17:07:25,242:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:25,242:INFO:Creating metrics dataframe
2023-05-19 17:07:25,249:INFO:Initializing Random Forest Classifier
2023-05-19 17:07:25,249:INFO:Total runtime is 0.19303192297617594 minutes
2023-05-19 17:07:25,252:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:25,252:INFO:Initializing create_model()
2023-05-19 17:07:25,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:25,252:INFO:Checking exceptions
2023-05-19 17:07:25,252:INFO:Importing libraries
2023-05-19 17:07:25,252:INFO:Copying training dataset
2023-05-19 17:07:25,264:INFO:Defining folds
2023-05-19 17:07:25,264:INFO:Declaring metric variables
2023-05-19 17:07:25,266:INFO:Importing untrained model
2023-05-19 17:07:25,269:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:07:25,272:INFO:Starting cross validation
2023-05-19 17:07:25,274:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:26,077:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,104:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,163:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,211:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,220:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,240:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,240:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,249:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,251:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,257:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,355:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,396:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:26,530:INFO:Calculating mean and std
2023-05-19 17:07:26,532:INFO:Creating metrics dataframe
2023-05-19 17:07:26,550:INFO:Uploading results into container
2023-05-19 17:07:26,550:INFO:Uploading model into container now
2023-05-19 17:07:26,550:INFO:_master_model_container: 63
2023-05-19 17:07:26,550:INFO:_display_container: 6
2023-05-19 17:07:26,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:07:26,551:INFO:create_model() successfully completed......................................
2023-05-19 17:07:26,674:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:26,674:INFO:Creating metrics dataframe
2023-05-19 17:07:26,680:INFO:Initializing Quadratic Discriminant Analysis
2023-05-19 17:07:26,681:INFO:Total runtime is 0.21688551505406697 minutes
2023-05-19 17:07:26,683:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:26,683:INFO:Initializing create_model()
2023-05-19 17:07:26,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:26,684:INFO:Checking exceptions
2023-05-19 17:07:26,684:INFO:Importing libraries
2023-05-19 17:07:26,684:INFO:Copying training dataset
2023-05-19 17:07:26,700:INFO:Defining folds
2023-05-19 17:07:26,700:INFO:Declaring metric variables
2023-05-19 17:07:26,704:INFO:Importing untrained model
2023-05-19 17:07:26,709:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-19 17:07:26,716:INFO:Starting cross validation
2023-05-19 17:07:26,718:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:27,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,366:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,372:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,482:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,495:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,524:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:27,645:INFO:Calculating mean and std
2023-05-19 17:07:27,649:INFO:Creating metrics dataframe
2023-05-19 17:07:27,666:INFO:Uploading results into container
2023-05-19 17:07:27,666:INFO:Uploading model into container now
2023-05-19 17:07:27,666:INFO:_master_model_container: 64
2023-05-19 17:07:27,666:INFO:_display_container: 6
2023-05-19 17:07:27,666:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-19 17:07:27,666:INFO:create_model() successfully completed......................................
2023-05-19 17:07:27,794:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:27,794:INFO:Creating metrics dataframe
2023-05-19 17:07:27,801:INFO:Initializing Ada Boost Classifier
2023-05-19 17:07:27,801:INFO:Total runtime is 0.23556722005208333 minutes
2023-05-19 17:07:27,804:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:27,805:INFO:Initializing create_model()
2023-05-19 17:07:27,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:27,805:INFO:Checking exceptions
2023-05-19 17:07:27,805:INFO:Importing libraries
2023-05-19 17:07:27,805:INFO:Copying training dataset
2023-05-19 17:07:27,815:INFO:Defining folds
2023-05-19 17:07:27,815:INFO:Declaring metric variables
2023-05-19 17:07:27,818:INFO:Importing untrained model
2023-05-19 17:07:27,821:INFO:Ada Boost Classifier Imported successfully
2023-05-19 17:07:27,826:INFO:Starting cross validation
2023-05-19 17:07:27,828:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:28,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,495:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,515:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,524:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,545:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,565:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,735:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,746:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,750:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,758:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,772:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,774:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:28,907:INFO:Calculating mean and std
2023-05-19 17:07:28,909:INFO:Creating metrics dataframe
2023-05-19 17:07:28,925:INFO:Uploading results into container
2023-05-19 17:07:28,925:INFO:Uploading model into container now
2023-05-19 17:07:28,925:INFO:_master_model_container: 65
2023-05-19 17:07:28,925:INFO:_display_container: 6
2023-05-19 17:07:28,926:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-05-19 17:07:28,926:INFO:create_model() successfully completed......................................
2023-05-19 17:07:29,052:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:29,052:INFO:Creating metrics dataframe
2023-05-19 17:07:29,061:INFO:Initializing Gradient Boosting Classifier
2023-05-19 17:07:29,061:INFO:Total runtime is 0.2565579573313395 minutes
2023-05-19 17:07:29,064:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:29,064:INFO:Initializing create_model()
2023-05-19 17:07:29,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:29,064:INFO:Checking exceptions
2023-05-19 17:07:29,064:INFO:Importing libraries
2023-05-19 17:07:29,064:INFO:Copying training dataset
2023-05-19 17:07:29,074:INFO:Defining folds
2023-05-19 17:07:29,075:INFO:Declaring metric variables
2023-05-19 17:07:29,078:INFO:Importing untrained model
2023-05-19 17:07:29,081:INFO:Gradient Boosting Classifier Imported successfully
2023-05-19 17:07:29,085:INFO:Starting cross validation
2023-05-19 17:07:29,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:29,885:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,903:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,921:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,960:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,963:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,974:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,976:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,976:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:29,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,012:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,045:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,202:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,222:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,235:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,262:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,369:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,379:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,391:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:30,405:INFO:Calculating mean and std
2023-05-19 17:07:30,406:INFO:Creating metrics dataframe
2023-05-19 17:07:30,439:INFO:Uploading results into container
2023-05-19 17:07:30,439:INFO:Uploading model into container now
2023-05-19 17:07:30,439:INFO:_master_model_container: 66
2023-05-19 17:07:30,439:INFO:_display_container: 6
2023-05-19 17:07:30,440:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-19 17:07:30,440:INFO:create_model() successfully completed......................................
2023-05-19 17:07:30,564:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:30,565:INFO:Creating metrics dataframe
2023-05-19 17:07:30,572:INFO:Initializing Linear Discriminant Analysis
2023-05-19 17:07:30,572:INFO:Total runtime is 0.28174423774083457 minutes
2023-05-19 17:07:30,574:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:30,574:INFO:Initializing create_model()
2023-05-19 17:07:30,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:30,574:INFO:Checking exceptions
2023-05-19 17:07:30,574:INFO:Importing libraries
2023-05-19 17:07:30,574:INFO:Copying training dataset
2023-05-19 17:07:30,585:INFO:Defining folds
2023-05-19 17:07:30,585:INFO:Declaring metric variables
2023-05-19 17:07:30,588:INFO:Importing untrained model
2023-05-19 17:07:30,591:INFO:Linear Discriminant Analysis Imported successfully
2023-05-19 17:07:30,595:INFO:Starting cross validation
2023-05-19 17:07:30,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:31,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,141:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,191:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,217:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,220:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,226:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,235:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,251:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,337:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,373:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,388:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,400:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:31,530:INFO:Calculating mean and std
2023-05-19 17:07:31,533:INFO:Creating metrics dataframe
2023-05-19 17:07:31,551:INFO:Uploading results into container
2023-05-19 17:07:31,552:INFO:Uploading model into container now
2023-05-19 17:07:31,552:INFO:_master_model_container: 67
2023-05-19 17:07:31,552:INFO:_display_container: 6
2023-05-19 17:07:31,552:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-19 17:07:31,552:INFO:create_model() successfully completed......................................
2023-05-19 17:07:31,676:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:31,676:INFO:Creating metrics dataframe
2023-05-19 17:07:31,685:INFO:Initializing Extra Trees Classifier
2023-05-19 17:07:31,685:INFO:Total runtime is 0.3003007928530375 minutes
2023-05-19 17:07:31,688:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:31,688:INFO:Initializing create_model()
2023-05-19 17:07:31,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:31,688:INFO:Checking exceptions
2023-05-19 17:07:31,688:INFO:Importing libraries
2023-05-19 17:07:31,688:INFO:Copying training dataset
2023-05-19 17:07:31,699:INFO:Defining folds
2023-05-19 17:07:31,700:INFO:Declaring metric variables
2023-05-19 17:07:31,703:INFO:Importing untrained model
2023-05-19 17:07:31,706:INFO:Extra Trees Classifier Imported successfully
2023-05-19 17:07:31,711:INFO:Starting cross validation
2023-05-19 17:07:31,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:32,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,749:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,772:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,778:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,782:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,783:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,810:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,838:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,838:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,908:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,946:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,951:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,968:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,972:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,972:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,986:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:32,987:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:33,001:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:33,003:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:33,134:INFO:Calculating mean and std
2023-05-19 17:07:33,136:INFO:Creating metrics dataframe
2023-05-19 17:07:33,150:INFO:Uploading results into container
2023-05-19 17:07:33,151:INFO:Uploading model into container now
2023-05-19 17:07:33,151:INFO:_master_model_container: 68
2023-05-19 17:07:33,151:INFO:_display_container: 6
2023-05-19 17:07:33,151:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-05-19 17:07:33,151:INFO:create_model() successfully completed......................................
2023-05-19 17:07:33,282:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:33,282:INFO:Creating metrics dataframe
2023-05-19 17:07:33,291:INFO:Initializing Light Gradient Boosting Machine
2023-05-19 17:07:33,291:INFO:Total runtime is 0.3270533521970113 minutes
2023-05-19 17:07:33,294:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:33,294:INFO:Initializing create_model()
2023-05-19 17:07:33,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:33,294:INFO:Checking exceptions
2023-05-19 17:07:33,294:INFO:Importing libraries
2023-05-19 17:07:33,294:INFO:Copying training dataset
2023-05-19 17:07:33,307:INFO:Defining folds
2023-05-19 17:07:33,307:INFO:Declaring metric variables
2023-05-19 17:07:33,309:INFO:Importing untrained model
2023-05-19 17:07:33,313:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 17:07:33,317:INFO:Starting cross validation
2023-05-19 17:07:33,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:34,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,245:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,293:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,326:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,442:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,534:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,534:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,547:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,548:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,559:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,561:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:34,693:INFO:Calculating mean and std
2023-05-19 17:07:34,697:INFO:Creating metrics dataframe
2023-05-19 17:07:34,717:INFO:Uploading results into container
2023-05-19 17:07:34,717:INFO:Uploading model into container now
2023-05-19 17:07:34,717:INFO:_master_model_container: 69
2023-05-19 17:07:34,717:INFO:_display_container: 6
2023-05-19 17:07:34,717:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 17:07:34,718:INFO:create_model() successfully completed......................................
2023-05-19 17:07:34,844:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:34,844:INFO:Creating metrics dataframe
2023-05-19 17:07:34,852:INFO:Initializing Dummy Classifier
2023-05-19 17:07:34,852:INFO:Total runtime is 0.3530783971150716 minutes
2023-05-19 17:07:34,854:INFO:SubProcess create_model() called ==================================
2023-05-19 17:07:34,854:INFO:Initializing create_model()
2023-05-19 17:07:34,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ffaed08ffd0>, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:34,854:INFO:Checking exceptions
2023-05-19 17:07:34,854:INFO:Importing libraries
2023-05-19 17:07:34,854:INFO:Copying training dataset
2023-05-19 17:07:34,865:INFO:Defining folds
2023-05-19 17:07:34,865:INFO:Declaring metric variables
2023-05-19 17:07:34,868:INFO:Importing untrained model
2023-05-19 17:07:34,871:INFO:Dummy Classifier Imported successfully
2023-05-19 17:07:34,875:INFO:Starting cross validation
2023-05-19 17:07:34,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 17:07:35,404:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,421:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,431:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,432:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,456:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,457:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,465:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,465:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,485:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,494:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,498:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,500:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,507:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,580:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,590:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,594:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,602:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,606:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,614:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,630:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,646:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,653:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-19 17:07:35,657:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-19 17:07:35,788:INFO:Calculating mean and std
2023-05-19 17:07:35,790:INFO:Creating metrics dataframe
2023-05-19 17:07:35,808:INFO:Uploading results into container
2023-05-19 17:07:35,808:INFO:Uploading model into container now
2023-05-19 17:07:35,809:INFO:_master_model_container: 70
2023-05-19 17:07:35,809:INFO:_display_container: 6
2023-05-19 17:07:35,809:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-05-19 17:07:35,809:INFO:create_model() successfully completed......................................
2023-05-19 17:07:35,935:INFO:SubProcess create_model() end ==================================
2023-05-19 17:07:35,935:INFO:Creating metrics dataframe
2023-05-19 17:07:35,950:INFO:Initializing create_model()
2023-05-19 17:07:35,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 17:07:35,950:INFO:Checking exceptions
2023-05-19 17:07:35,951:INFO:Importing libraries
2023-05-19 17:07:35,951:INFO:Copying training dataset
2023-05-19 17:07:35,962:INFO:Defining folds
2023-05-19 17:07:35,962:INFO:Declaring metric variables
2023-05-19 17:07:35,962:INFO:Importing untrained model
2023-05-19 17:07:35,962:INFO:Declaring custom model
2023-05-19 17:07:35,963:INFO:Random Forest Classifier Imported successfully
2023-05-19 17:07:35,964:INFO:Cross validation set to False
2023-05-19 17:07:35,964:INFO:Fitting Model
2023-05-19 17:07:36,407:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:07:36,407:INFO:create_model() successfully completed......................................
2023-05-19 17:07:36,561:INFO:_master_model_container: 70
2023-05-19 17:07:36,562:INFO:_display_container: 6
2023-05-19 17:07:36,562:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-05-19 17:07:36,562:INFO:compare_models() successfully completed......................................
2023-05-19 17:08:47,159:INFO:Initializing evaluate_model()
2023-05-19 17:08:47,160:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-19 17:08:47,183:INFO:Initializing plot_model()
2023-05-19 17:08:47,183:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 17:08:47,183:INFO:Checking exceptions
2023-05-19 17:08:47,207:INFO:Preloading libraries
2023-05-19 17:08:47,235:INFO:Copying training dataset
2023-05-19 17:08:47,235:INFO:Plot type: pipeline
2023-05-19 17:08:47,451:INFO:Visual Rendered Successfully
2023-05-19 17:08:47,572:INFO:plot_model() successfully completed......................................
2023-05-19 17:09:20,564:INFO:Initializing plot_model()
2023-05-19 17:09:20,565:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 17:09:20,565:INFO:Checking exceptions
2023-05-19 17:09:20,587:INFO:Preloading libraries
2023-05-19 17:09:20,611:INFO:Copying training dataset
2023-05-19 17:09:20,611:INFO:Plot type: auc
2023-05-19 17:09:20,745:INFO:Fitting Model
2023-05-19 17:09:20,746:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 17:09:20,747:INFO:Scoring test/hold-out set
2023-05-19 17:09:20,962:INFO:Visual Rendered Successfully
2023-05-19 17:09:21,096:INFO:plot_model() successfully completed......................................
2023-05-19 17:10:01,210:INFO:Initializing plot_model()
2023-05-19 17:10:01,210:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 17:10:01,211:INFO:Checking exceptions
2023-05-19 17:10:01,232:INFO:Preloading libraries
2023-05-19 17:10:01,248:INFO:Copying training dataset
2023-05-19 17:10:01,248:INFO:Plot type: auc
2023-05-19 17:10:01,362:INFO:Fitting Model
2023-05-19 17:10:01,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 17:10:01,364:INFO:Scoring test/hold-out set
2023-05-19 17:10:01,571:INFO:Visual Rendered Successfully
2023-05-19 17:10:01,717:INFO:plot_model() successfully completed......................................
2023-05-19 22:47:58,968:INFO:Initializing plot_model()
2023-05-19 22:47:58,968:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:47:58,968:INFO:Checking exceptions
2023-05-19 22:47:58,990:INFO:Preloading libraries
2023-05-19 22:47:59,005:INFO:Copying training dataset
2023-05-19 22:47:59,005:INFO:Plot type: parameter
2023-05-19 22:47:59,008:INFO:Visual Rendered Successfully
2023-05-19 22:47:59,139:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:01,025:INFO:Initializing plot_model()
2023-05-19 22:48:01,025:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:01,025:INFO:Checking exceptions
2023-05-19 22:48:01,045:INFO:Preloading libraries
2023-05-19 22:48:01,057:INFO:Copying training dataset
2023-05-19 22:48:01,058:INFO:Plot type: auc
2023-05-19 22:48:01,147:INFO:Fitting Model
2023-05-19 22:48:01,147:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 22:48:01,159:INFO:Scoring test/hold-out set
2023-05-19 22:48:01,340:INFO:Visual Rendered Successfully
2023-05-19 22:48:01,483:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:05,781:INFO:Initializing plot_model()
2023-05-19 22:48:05,781:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:05,781:INFO:Checking exceptions
2023-05-19 22:48:05,812:INFO:Preloading libraries
2023-05-19 22:48:05,825:INFO:Copying training dataset
2023-05-19 22:48:05,825:INFO:Plot type: confusion_matrix
2023-05-19 22:48:05,916:INFO:Fitting Model
2023-05-19 22:48:05,916:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 22:48:05,917:INFO:Scoring test/hold-out set
2023-05-19 22:48:06,099:INFO:Visual Rendered Successfully
2023-05-19 22:48:06,237:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:10,341:INFO:Initializing plot_model()
2023-05-19 22:48:10,341:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:10,341:INFO:Checking exceptions
2023-05-19 22:48:16,580:INFO:Initializing plot_model()
2023-05-19 22:48:16,581:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:16,581:INFO:Checking exceptions
2023-05-19 22:48:16,602:INFO:Preloading libraries
2023-05-19 22:48:16,614:INFO:Copying training dataset
2023-05-19 22:48:16,614:INFO:Plot type: pr
2023-05-19 22:48:16,703:INFO:Fitting Model
2023-05-19 22:48:19,660:INFO:Scoring test/hold-out set
2023-05-19 22:48:20,141:INFO:Visual Rendered Successfully
2023-05-19 22:48:20,311:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:20,325:INFO:Initializing plot_model()
2023-05-19 22:48:20,325:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:20,325:INFO:Checking exceptions
2023-05-19 22:48:20,355:INFO:Preloading libraries
2023-05-19 22:48:20,380:INFO:Copying training dataset
2023-05-19 22:48:20,380:INFO:Plot type: error
2023-05-19 22:48:20,476:INFO:Fitting Model
2023-05-19 22:48:20,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 22:48:20,476:INFO:Scoring test/hold-out set
2023-05-19 22:48:20,681:INFO:Visual Rendered Successfully
2023-05-19 22:48:20,812:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:27,931:INFO:Initializing plot_model()
2023-05-19 22:48:27,931:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:27,931:INFO:Checking exceptions
2023-05-19 22:48:27,951:INFO:Preloading libraries
2023-05-19 22:48:27,975:INFO:Copying training dataset
2023-05-19 22:48:27,975:INFO:Plot type: class_report
2023-05-19 22:48:28,063:INFO:Fitting Model
2023-05-19 22:48:28,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-19 22:48:28,064:INFO:Scoring test/hold-out set
2023-05-19 22:48:28,300:INFO:Visual Rendered Successfully
2023-05-19 22:48:28,426:INFO:plot_model() successfully completed......................................
2023-05-19 22:48:33,682:INFO:Initializing plot_model()
2023-05-19 22:48:33,682:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:33,682:INFO:Checking exceptions
2023-05-19 22:48:39,884:INFO:Initializing plot_model()
2023-05-19 22:48:39,884:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:48:39,885:INFO:Checking exceptions
2023-05-19 22:48:39,916:INFO:Preloading libraries
2023-05-19 22:48:39,928:INFO:Copying training dataset
2023-05-19 22:48:39,928:INFO:Plot type: learning
2023-05-19 22:48:40,025:INFO:Fitting Model
2023-05-19 22:49:03,350:INFO:Visual Rendered Successfully
2023-05-19 22:49:03,499:INFO:plot_model() successfully completed......................................
2023-05-19 22:49:03,538:INFO:Initializing plot_model()
2023-05-19 22:49:03,538:INFO:plot_model(plot=ks, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:49:03,538:INFO:Checking exceptions
2023-05-19 22:49:03,559:INFO:Preloading libraries
2023-05-19 22:49:03,578:INFO:Copying training dataset
2023-05-19 22:49:03,578:INFO:Plot type: ks
2023-05-19 22:49:03,579:INFO:Generating predictions / predict_proba on X_test
2023-05-19 22:49:06,703:INFO:Initializing plot_model()
2023-05-19 22:49:06,703:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ffaefda1c10>, system=True)
2023-05-19 22:49:06,703:INFO:Checking exceptions
2023-05-19 22:49:06,726:INFO:Preloading libraries
2023-05-19 22:49:06,740:INFO:Copying training dataset
2023-05-19 22:49:06,740:INFO:Plot type: tree
2023-05-19 22:49:07,366:INFO:Plotting decision trees
2023-05-19 22:49:07,405:INFO:Plotting tree 0
2023-05-19 22:49:12,142:INFO:Plotting tree 1
2023-05-19 22:49:16,335:INFO:Plotting tree 2
2023-05-19 22:49:20,884:INFO:Plotting tree 3
2023-05-19 22:49:25,509:INFO:Plotting tree 4
2023-05-19 22:49:30,154:INFO:Plotting tree 5
2023-05-19 22:49:35,345:INFO:Plotting tree 6
2023-05-19 22:49:40,230:INFO:Plotting tree 7
2023-05-19 22:49:44,730:INFO:Plotting tree 8
2023-05-19 22:49:48,616:INFO:Plotting tree 9
2023-05-19 22:49:53,831:INFO:Plotting tree 10
2023-05-19 22:50:00,387:INFO:Plotting tree 11
2023-05-19 22:50:05,279:INFO:Plotting tree 12
2023-05-19 22:50:09,906:INFO:Plotting tree 13
2023-05-19 22:50:15,021:INFO:Plotting tree 14
2023-05-19 22:50:19,449:INFO:Plotting tree 15
2023-05-19 22:50:24,127:INFO:Plotting tree 16
2023-05-19 22:50:28,661:INFO:Plotting tree 17
2023-05-19 22:50:33,263:INFO:Plotting tree 18
2023-05-19 22:50:38,262:INFO:Plotting tree 19
2023-05-19 22:50:42,577:INFO:Plotting tree 20
2023-05-19 22:50:47,270:INFO:Plotting tree 21
2023-05-19 22:50:51,692:INFO:Plotting tree 22
2023-05-19 22:50:56,057:INFO:Plotting tree 23
2023-05-19 22:51:01,343:INFO:Plotting tree 24
2023-05-19 22:51:05,790:INFO:Plotting tree 25
2023-05-19 22:51:10,357:INFO:Plotting tree 26
2023-05-19 22:51:14,767:INFO:Plotting tree 27
2023-05-19 22:51:19,389:INFO:Plotting tree 28
2023-05-19 22:51:24,912:INFO:Plotting tree 29
2023-05-19 22:51:29,356:INFO:Plotting tree 30
2023-05-19 22:51:33,921:INFO:Plotting tree 31
2023-05-19 22:51:38,620:INFO:Plotting tree 32
2023-05-19 22:51:43,150:INFO:Plotting tree 33
2023-05-19 22:51:47,707:INFO:Plotting tree 34
2023-05-19 22:51:52,510:INFO:Plotting tree 35
2023-05-19 22:51:58,180:INFO:Plotting tree 36
2023-05-19 22:52:02,709:INFO:Plotting tree 37
2023-05-19 22:52:07,331:INFO:Plotting tree 38
2023-05-19 22:52:11,939:INFO:Plotting tree 39
2023-05-19 22:52:16,533:INFO:Plotting tree 40
2023-05-19 22:52:21,001:INFO:Plotting tree 41
2023-05-19 22:52:25,495:INFO:Plotting tree 42
2023-05-19 22:52:30,041:INFO:Plotting tree 43
2023-05-19 22:52:34,539:INFO:Plotting tree 44
2023-05-19 22:52:40,441:INFO:Plotting tree 45
2023-05-19 22:52:45,257:INFO:Plotting tree 46
2023-05-19 22:52:49,850:INFO:Plotting tree 47
2023-05-19 22:52:54,400:INFO:Plotting tree 48
2023-05-19 22:52:58,952:INFO:Plotting tree 49
2023-05-19 22:53:08,105:INFO:Plotting tree 50
2023-05-19 22:53:27,377:INFO:Plotting tree 51
2023-05-19 22:53:44,402:INFO:Plotting tree 52
2023-05-19 22:54:08,331:INFO:Plotting tree 53
2023-05-19 22:54:13,333:INFO:Plotting tree 54
2023-05-19 22:54:19,885:INFO:Plotting tree 55
2023-05-19 22:54:25,384:INFO:Plotting tree 56
2023-05-19 22:54:29,668:INFO:Plotting tree 57
2023-05-19 22:54:34,810:INFO:Plotting tree 58
2023-05-19 22:54:39,750:INFO:Plotting tree 59
2023-05-19 22:54:44,328:INFO:Plotting tree 60
2023-05-19 22:54:48,820:INFO:Plotting tree 61
2023-05-19 22:54:53,841:INFO:Plotting tree 62
2023-05-19 22:54:58,949:INFO:Plotting tree 63
2023-05-19 22:55:04,127:INFO:Plotting tree 64
2023-05-19 22:55:09,411:INFO:Plotting tree 65
2023-05-19 22:55:14,075:INFO:Plotting tree 66
2023-05-19 22:55:20,403:INFO:Plotting tree 67
2023-05-19 22:55:25,073:INFO:Plotting tree 68
2023-05-19 22:55:29,374:INFO:Plotting tree 69
2023-05-19 22:55:33,996:INFO:Plotting tree 70
2023-05-19 22:55:38,610:INFO:Plotting tree 71
2023-05-19 22:55:43,106:INFO:Plotting tree 72
2023-05-19 22:55:47,653:INFO:Plotting tree 73
2023-05-19 22:55:52,169:INFO:Plotting tree 74
2023-05-19 22:55:56,901:INFO:Plotting tree 75
2023-05-19 22:56:01,393:INFO:Plotting tree 76
2023-05-19 22:56:06,067:INFO:Plotting tree 77
2023-05-19 22:56:10,719:INFO:Plotting tree 78
2023-05-19 22:56:15,353:INFO:Plotting tree 79
2023-05-19 22:56:19,881:INFO:Plotting tree 80
2023-05-19 22:56:26,665:INFO:Plotting tree 81
2023-05-19 22:56:31,175:INFO:Plotting tree 82
2023-05-19 22:56:35,702:INFO:Plotting tree 83
2023-05-19 22:56:40,283:INFO:Plotting tree 84
2023-05-19 22:56:44,964:INFO:Plotting tree 85
2023-05-19 22:56:49,581:INFO:Plotting tree 86
2023-05-19 22:56:54,189:INFO:Plotting tree 87
2023-05-19 22:56:58,653:INFO:Plotting tree 88
2023-05-19 22:57:03,377:INFO:Plotting tree 89
2023-05-19 22:57:07,894:INFO:Plotting tree 90
2023-05-19 22:57:12,431:INFO:Plotting tree 91
2023-05-19 22:57:16,797:INFO:Plotting tree 92
2023-05-19 22:57:21,295:INFO:Plotting tree 93
2023-05-19 22:57:25,909:INFO:Plotting tree 94
2023-05-19 22:57:30,590:INFO:Plotting tree 95
2023-05-19 22:57:35,277:INFO:Plotting tree 96
2023-05-19 22:57:42,610:INFO:Plotting tree 97
2023-05-19 22:57:47,217:INFO:Plotting tree 98
2023-05-19 22:57:51,634:INFO:Plotting tree 99
2023-05-22 00:11:41,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-22 00:11:41,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-22 00:11:41,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-22 00:11:41,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-22 00:11:41,561:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-23 17:22:17,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 17:22:17,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 17:22:17,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 17:22:17,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 17:22:18,104:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-23 17:23:37,797:INFO:PyCaret ClassificationExperiment
2023-05-23 17:23:37,798:INFO:Logging name: clf-default-name
2023-05-23 17:23:37,798:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:23:37,798:INFO:version 3.0.2
2023-05-23 17:23:37,798:INFO:Initializing setup()
2023-05-23 17:23:37,798:INFO:self.USI: 4f64
2023-05-23 17:23:37,798:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:23:37,798:INFO:Checking environment
2023-05-23 17:23:37,798:INFO:python_version: 3.8.16
2023-05-23 17:23:37,798:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:23:37,798:INFO:machine: x86_64
2023-05-23 17:23:37,798:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:23:37,799:INFO:Memory: svmem(total=16378347520, available=4704927744, percent=71.3, used=10491006976, free=541179904, active=6901170176, inactive=7584145408, buffers=94416896, cached=5251743744, shared=827887616, slab=777277440)
2023-05-23 17:23:37,800:INFO:Physical Core: 10
2023-05-23 17:23:37,800:INFO:Logical Core: 16
2023-05-23 17:23:37,800:INFO:Checking libraries
2023-05-23 17:23:37,800:INFO:System:
2023-05-23 17:23:37,800:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:23:37,800:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:23:37,800:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:23:37,800:INFO:PyCaret required dependencies:
2023-05-23 17:23:37,800:INFO:                 pip: 23.0.1
2023-05-23 17:23:37,800:INFO:          setuptools: 66.0.0
2023-05-23 17:23:37,800:INFO:             pycaret: 3.0.2
2023-05-23 17:23:37,800:INFO:             IPython: 8.12.2
2023-05-23 17:23:37,800:INFO:          ipywidgets: 8.0.6
2023-05-23 17:23:37,800:INFO:                tqdm: 4.65.0
2023-05-23 17:23:37,800:INFO:               numpy: 1.23.5
2023-05-23 17:23:37,800:INFO:              pandas: 1.5.3
2023-05-23 17:23:37,800:INFO:              jinja2: 3.1.2
2023-05-23 17:23:37,800:INFO:               scipy: 1.10.1
2023-05-23 17:23:37,800:INFO:              joblib: 1.2.0
2023-05-23 17:23:37,800:INFO:             sklearn: 1.2.2
2023-05-23 17:23:37,800:INFO:                pyod: 1.0.9
2023-05-23 17:23:37,800:INFO:            imblearn: 0.10.1
2023-05-23 17:23:37,800:INFO:   category_encoders: 2.6.1
2023-05-23 17:23:37,800:INFO:            lightgbm: 3.3.5
2023-05-23 17:23:37,800:INFO:               numba: 0.57.0
2023-05-23 17:23:37,800:INFO:            requests: 2.29.0
2023-05-23 17:23:37,800:INFO:          matplotlib: 3.7.1
2023-05-23 17:23:37,800:INFO:          scikitplot: 0.3.7
2023-05-23 17:23:37,800:INFO:         yellowbrick: 1.5
2023-05-23 17:23:37,800:INFO:              plotly: 5.14.1
2023-05-23 17:23:37,800:INFO:             kaleido: 0.2.1
2023-05-23 17:23:37,800:INFO:         statsmodels: 0.14.0
2023-05-23 17:23:37,800:INFO:              sktime: 0.17.0
2023-05-23 17:23:37,800:INFO:               tbats: 1.1.3
2023-05-23 17:23:37,801:INFO:            pmdarima: 2.0.3
2023-05-23 17:23:37,801:INFO:              psutil: 5.9.0
2023-05-23 17:23:37,801:INFO:PyCaret optional dependencies:
2023-05-23 17:23:37,813:INFO:                shap: Not installed
2023-05-23 17:23:37,813:INFO:           interpret: Not installed
2023-05-23 17:23:37,813:INFO:                umap: Not installed
2023-05-23 17:23:37,813:INFO:    pandas_profiling: Not installed
2023-05-23 17:23:37,813:INFO:  explainerdashboard: Not installed
2023-05-23 17:23:37,813:INFO:             autoviz: Not installed
2023-05-23 17:23:37,813:INFO:           fairlearn: Not installed
2023-05-23 17:23:37,813:INFO:             xgboost: Not installed
2023-05-23 17:23:37,813:INFO:            catboost: Not installed
2023-05-23 17:23:37,813:INFO:              kmodes: Not installed
2023-05-23 17:23:37,813:INFO:             mlxtend: Not installed
2023-05-23 17:23:37,813:INFO:       statsforecast: Not installed
2023-05-23 17:23:37,813:INFO:        tune_sklearn: Not installed
2023-05-23 17:23:37,813:INFO:                 ray: Not installed
2023-05-23 17:23:37,813:INFO:            hyperopt: Not installed
2023-05-23 17:23:37,813:INFO:              optuna: Not installed
2023-05-23 17:23:37,813:INFO:               skopt: Not installed
2023-05-23 17:23:37,813:INFO:              mlflow: Not installed
2023-05-23 17:23:37,813:INFO:              gradio: Not installed
2023-05-23 17:23:37,813:INFO:             fastapi: Not installed
2023-05-23 17:23:37,813:INFO:             uvicorn: Not installed
2023-05-23 17:23:37,813:INFO:              m2cgen: Not installed
2023-05-23 17:23:37,814:INFO:           evidently: Not installed
2023-05-23 17:23:37,814:INFO:               fugue: Not installed
2023-05-23 17:23:37,814:INFO:           streamlit: Not installed
2023-05-23 17:23:37,814:INFO:             prophet: Not installed
2023-05-23 17:23:37,814:INFO:None
2023-05-23 17:23:37,814:INFO:Set up data.
2023-05-23 17:25:04,184:INFO:PyCaret ClassificationExperiment
2023-05-23 17:25:04,184:INFO:Logging name: clf-default-name
2023-05-23 17:25:04,185:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:25:04,185:INFO:version 3.0.2
2023-05-23 17:25:04,185:INFO:Initializing setup()
2023-05-23 17:25:04,185:INFO:self.USI: 93f1
2023-05-23 17:25:04,185:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:25:04,185:INFO:Checking environment
2023-05-23 17:25:04,185:INFO:python_version: 3.8.16
2023-05-23 17:25:04,185:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:25:04,185:INFO:machine: x86_64
2023-05-23 17:25:04,185:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:25:04,185:INFO:Memory: svmem(total=16378347520, available=3976654848, percent=75.7, used=11137609728, free=398442496, active=6724661248, inactive=7879979008, buffers=89378816, cached=4752916480, shared=901074944, slab=771911680)
2023-05-23 17:25:04,185:INFO:Physical Core: 10
2023-05-23 17:25:04,185:INFO:Logical Core: 16
2023-05-23 17:25:04,185:INFO:Checking libraries
2023-05-23 17:25:04,185:INFO:System:
2023-05-23 17:25:04,185:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:25:04,185:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:25:04,185:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:25:04,185:INFO:PyCaret required dependencies:
2023-05-23 17:25:04,186:INFO:                 pip: 23.0.1
2023-05-23 17:25:04,186:INFO:          setuptools: 66.0.0
2023-05-23 17:25:04,186:INFO:             pycaret: 3.0.2
2023-05-23 17:25:04,186:INFO:             IPython: 8.12.2
2023-05-23 17:25:04,186:INFO:          ipywidgets: 8.0.6
2023-05-23 17:25:04,186:INFO:                tqdm: 4.65.0
2023-05-23 17:25:04,186:INFO:               numpy: 1.23.5
2023-05-23 17:25:04,186:INFO:              pandas: 1.5.3
2023-05-23 17:25:04,186:INFO:              jinja2: 3.1.2
2023-05-23 17:25:04,186:INFO:               scipy: 1.10.1
2023-05-23 17:25:04,186:INFO:              joblib: 1.2.0
2023-05-23 17:25:04,186:INFO:             sklearn: 1.2.2
2023-05-23 17:25:04,186:INFO:                pyod: 1.0.9
2023-05-23 17:25:04,186:INFO:            imblearn: 0.10.1
2023-05-23 17:25:04,186:INFO:   category_encoders: 2.6.1
2023-05-23 17:25:04,186:INFO:            lightgbm: 3.3.5
2023-05-23 17:25:04,186:INFO:               numba: 0.57.0
2023-05-23 17:25:04,186:INFO:            requests: 2.29.0
2023-05-23 17:25:04,186:INFO:          matplotlib: 3.7.1
2023-05-23 17:25:04,186:INFO:          scikitplot: 0.3.7
2023-05-23 17:25:04,186:INFO:         yellowbrick: 1.5
2023-05-23 17:25:04,186:INFO:              plotly: 5.14.1
2023-05-23 17:25:04,186:INFO:             kaleido: 0.2.1
2023-05-23 17:25:04,186:INFO:         statsmodels: 0.14.0
2023-05-23 17:25:04,186:INFO:              sktime: 0.17.0
2023-05-23 17:25:04,186:INFO:               tbats: 1.1.3
2023-05-23 17:25:04,186:INFO:            pmdarima: 2.0.3
2023-05-23 17:25:04,186:INFO:              psutil: 5.9.0
2023-05-23 17:25:04,186:INFO:PyCaret optional dependencies:
2023-05-23 17:25:04,186:INFO:                shap: Not installed
2023-05-23 17:25:04,186:INFO:           interpret: Not installed
2023-05-23 17:25:04,186:INFO:                umap: Not installed
2023-05-23 17:25:04,186:INFO:    pandas_profiling: Not installed
2023-05-23 17:25:04,186:INFO:  explainerdashboard: Not installed
2023-05-23 17:25:04,186:INFO:             autoviz: Not installed
2023-05-23 17:25:04,186:INFO:           fairlearn: Not installed
2023-05-23 17:25:04,186:INFO:             xgboost: Not installed
2023-05-23 17:25:04,186:INFO:            catboost: Not installed
2023-05-23 17:25:04,186:INFO:              kmodes: Not installed
2023-05-23 17:25:04,186:INFO:             mlxtend: Not installed
2023-05-23 17:25:04,186:INFO:       statsforecast: Not installed
2023-05-23 17:25:04,186:INFO:        tune_sklearn: Not installed
2023-05-23 17:25:04,186:INFO:                 ray: Not installed
2023-05-23 17:25:04,186:INFO:            hyperopt: Not installed
2023-05-23 17:25:04,186:INFO:              optuna: Not installed
2023-05-23 17:25:04,186:INFO:               skopt: Not installed
2023-05-23 17:25:04,186:INFO:              mlflow: Not installed
2023-05-23 17:25:04,186:INFO:              gradio: Not installed
2023-05-23 17:25:04,186:INFO:             fastapi: Not installed
2023-05-23 17:25:04,186:INFO:             uvicorn: Not installed
2023-05-23 17:25:04,186:INFO:              m2cgen: Not installed
2023-05-23 17:25:04,187:INFO:           evidently: Not installed
2023-05-23 17:25:04,187:INFO:               fugue: Not installed
2023-05-23 17:25:04,187:INFO:           streamlit: Not installed
2023-05-23 17:25:04,187:INFO:             prophet: Not installed
2023-05-23 17:25:04,187:INFO:None
2023-05-23 17:25:04,187:INFO:Set up data.
2023-05-23 17:25:39,251:INFO:PyCaret ClassificationExperiment
2023-05-23 17:25:39,251:INFO:Logging name: clf-default-name
2023-05-23 17:25:39,251:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:25:39,251:INFO:version 3.0.2
2023-05-23 17:25:39,251:INFO:Initializing setup()
2023-05-23 17:25:39,251:INFO:self.USI: 2dee
2023-05-23 17:25:39,251:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:25:39,251:INFO:Checking environment
2023-05-23 17:25:39,251:INFO:python_version: 3.8.16
2023-05-23 17:25:39,251:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:25:39,251:INFO:machine: x86_64
2023-05-23 17:25:39,251:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:25:39,251:INFO:Memory: svmem(total=16378347520, available=3685683200, percent=77.5, used=11454332928, free=543113216, active=6496595968, inactive=8086376448, buffers=85094400, cached=4295806976, shared=833380352, slab=756375552)
2023-05-23 17:25:39,252:INFO:Physical Core: 10
2023-05-23 17:25:39,252:INFO:Logical Core: 16
2023-05-23 17:25:39,252:INFO:Checking libraries
2023-05-23 17:25:39,252:INFO:System:
2023-05-23 17:25:39,252:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:25:39,252:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:25:39,252:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:25:39,252:INFO:PyCaret required dependencies:
2023-05-23 17:25:39,252:INFO:                 pip: 23.0.1
2023-05-23 17:25:39,252:INFO:          setuptools: 66.0.0
2023-05-23 17:25:39,252:INFO:             pycaret: 3.0.2
2023-05-23 17:25:39,252:INFO:             IPython: 8.12.2
2023-05-23 17:25:39,252:INFO:          ipywidgets: 8.0.6
2023-05-23 17:25:39,252:INFO:                tqdm: 4.65.0
2023-05-23 17:25:39,252:INFO:               numpy: 1.23.5
2023-05-23 17:25:39,252:INFO:              pandas: 1.5.3
2023-05-23 17:25:39,252:INFO:              jinja2: 3.1.2
2023-05-23 17:25:39,252:INFO:               scipy: 1.10.1
2023-05-23 17:25:39,252:INFO:              joblib: 1.2.0
2023-05-23 17:25:39,252:INFO:             sklearn: 1.2.2
2023-05-23 17:25:39,252:INFO:                pyod: 1.0.9
2023-05-23 17:25:39,252:INFO:            imblearn: 0.10.1
2023-05-23 17:25:39,252:INFO:   category_encoders: 2.6.1
2023-05-23 17:25:39,252:INFO:            lightgbm: 3.3.5
2023-05-23 17:25:39,252:INFO:               numba: 0.57.0
2023-05-23 17:25:39,253:INFO:            requests: 2.29.0
2023-05-23 17:25:39,253:INFO:          matplotlib: 3.7.1
2023-05-23 17:25:39,253:INFO:          scikitplot: 0.3.7
2023-05-23 17:25:39,253:INFO:         yellowbrick: 1.5
2023-05-23 17:25:39,253:INFO:              plotly: 5.14.1
2023-05-23 17:25:39,253:INFO:             kaleido: 0.2.1
2023-05-23 17:25:39,253:INFO:         statsmodels: 0.14.0
2023-05-23 17:25:39,253:INFO:              sktime: 0.17.0
2023-05-23 17:25:39,253:INFO:               tbats: 1.1.3
2023-05-23 17:25:39,253:INFO:            pmdarima: 2.0.3
2023-05-23 17:25:39,253:INFO:              psutil: 5.9.0
2023-05-23 17:25:39,253:INFO:PyCaret optional dependencies:
2023-05-23 17:25:39,253:INFO:                shap: Not installed
2023-05-23 17:25:39,253:INFO:           interpret: Not installed
2023-05-23 17:25:39,253:INFO:                umap: Not installed
2023-05-23 17:25:39,253:INFO:    pandas_profiling: Not installed
2023-05-23 17:25:39,253:INFO:  explainerdashboard: Not installed
2023-05-23 17:25:39,253:INFO:             autoviz: Not installed
2023-05-23 17:25:39,253:INFO:           fairlearn: Not installed
2023-05-23 17:25:39,253:INFO:             xgboost: Not installed
2023-05-23 17:25:39,253:INFO:            catboost: Not installed
2023-05-23 17:25:39,253:INFO:              kmodes: Not installed
2023-05-23 17:25:39,253:INFO:             mlxtend: Not installed
2023-05-23 17:25:39,253:INFO:       statsforecast: Not installed
2023-05-23 17:25:39,253:INFO:        tune_sklearn: Not installed
2023-05-23 17:25:39,253:INFO:                 ray: Not installed
2023-05-23 17:25:39,253:INFO:            hyperopt: Not installed
2023-05-23 17:25:39,253:INFO:              optuna: Not installed
2023-05-23 17:25:39,253:INFO:               skopt: Not installed
2023-05-23 17:25:39,253:INFO:              mlflow: Not installed
2023-05-23 17:25:39,253:INFO:              gradio: Not installed
2023-05-23 17:25:39,253:INFO:             fastapi: Not installed
2023-05-23 17:25:39,253:INFO:             uvicorn: Not installed
2023-05-23 17:25:39,253:INFO:              m2cgen: Not installed
2023-05-23 17:25:39,253:INFO:           evidently: Not installed
2023-05-23 17:25:39,253:INFO:               fugue: Not installed
2023-05-23 17:25:39,253:INFO:           streamlit: Not installed
2023-05-23 17:25:39,253:INFO:             prophet: Not installed
2023-05-23 17:25:39,253:INFO:None
2023-05-23 17:25:39,253:INFO:Set up data.
2023-05-23 17:27:47,946:INFO:PyCaret ClassificationExperiment
2023-05-23 17:27:47,946:INFO:Logging name: clf-default-name
2023-05-23 17:27:47,946:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:27:47,946:INFO:version 3.0.2
2023-05-23 17:27:47,946:INFO:Initializing setup()
2023-05-23 17:27:47,946:INFO:self.USI: 4c5c
2023-05-23 17:27:47,946:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:27:47,946:INFO:Checking environment
2023-05-23 17:27:47,946:INFO:python_version: 3.8.16
2023-05-23 17:27:47,946:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:27:47,946:INFO:machine: x86_64
2023-05-23 17:27:47,946:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:27:47,946:INFO:Memory: svmem(total=16378347520, available=2798551040, percent=82.9, used=12327428096, free=422629376, active=5818372096, inactive=8926437376, buffers=91430912, cached=3536859136, shared=888582144, slab=693149696)
2023-05-23 17:27:47,947:INFO:Physical Core: 10
2023-05-23 17:27:47,947:INFO:Logical Core: 16
2023-05-23 17:27:47,947:INFO:Checking libraries
2023-05-23 17:27:47,947:INFO:System:
2023-05-23 17:27:47,947:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:27:47,947:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:27:47,947:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:27:47,947:INFO:PyCaret required dependencies:
2023-05-23 17:27:47,947:INFO:                 pip: 23.0.1
2023-05-23 17:27:47,947:INFO:          setuptools: 66.0.0
2023-05-23 17:27:47,947:INFO:             pycaret: 3.0.2
2023-05-23 17:27:47,947:INFO:             IPython: 8.12.2
2023-05-23 17:27:47,947:INFO:          ipywidgets: 8.0.6
2023-05-23 17:27:47,947:INFO:                tqdm: 4.65.0
2023-05-23 17:27:47,947:INFO:               numpy: 1.23.5
2023-05-23 17:27:47,947:INFO:              pandas: 1.5.3
2023-05-23 17:27:47,947:INFO:              jinja2: 3.1.2
2023-05-23 17:27:47,947:INFO:               scipy: 1.10.1
2023-05-23 17:27:47,947:INFO:              joblib: 1.2.0
2023-05-23 17:27:47,947:INFO:             sklearn: 1.2.2
2023-05-23 17:27:47,947:INFO:                pyod: 1.0.9
2023-05-23 17:27:47,947:INFO:            imblearn: 0.10.1
2023-05-23 17:27:47,947:INFO:   category_encoders: 2.6.1
2023-05-23 17:27:47,947:INFO:            lightgbm: 3.3.5
2023-05-23 17:27:47,947:INFO:               numba: 0.57.0
2023-05-23 17:27:47,947:INFO:            requests: 2.29.0
2023-05-23 17:27:47,947:INFO:          matplotlib: 3.7.1
2023-05-23 17:27:47,947:INFO:          scikitplot: 0.3.7
2023-05-23 17:27:47,947:INFO:         yellowbrick: 1.5
2023-05-23 17:27:47,947:INFO:              plotly: 5.14.1
2023-05-23 17:27:47,947:INFO:             kaleido: 0.2.1
2023-05-23 17:27:47,947:INFO:         statsmodels: 0.14.0
2023-05-23 17:27:47,947:INFO:              sktime: 0.17.0
2023-05-23 17:27:47,948:INFO:               tbats: 1.1.3
2023-05-23 17:27:47,948:INFO:            pmdarima: 2.0.3
2023-05-23 17:27:47,948:INFO:              psutil: 5.9.0
2023-05-23 17:27:47,948:INFO:PyCaret optional dependencies:
2023-05-23 17:27:47,948:INFO:                shap: Not installed
2023-05-23 17:27:47,948:INFO:           interpret: Not installed
2023-05-23 17:27:47,948:INFO:                umap: Not installed
2023-05-23 17:27:47,948:INFO:    pandas_profiling: Not installed
2023-05-23 17:27:47,948:INFO:  explainerdashboard: Not installed
2023-05-23 17:27:47,948:INFO:             autoviz: Not installed
2023-05-23 17:27:47,948:INFO:           fairlearn: Not installed
2023-05-23 17:27:47,948:INFO:             xgboost: Not installed
2023-05-23 17:27:47,948:INFO:            catboost: Not installed
2023-05-23 17:27:47,948:INFO:              kmodes: Not installed
2023-05-23 17:27:47,948:INFO:             mlxtend: Not installed
2023-05-23 17:27:47,948:INFO:       statsforecast: Not installed
2023-05-23 17:27:47,948:INFO:        tune_sklearn: Not installed
2023-05-23 17:27:47,948:INFO:                 ray: Not installed
2023-05-23 17:27:47,948:INFO:            hyperopt: Not installed
2023-05-23 17:27:47,948:INFO:              optuna: Not installed
2023-05-23 17:27:47,948:INFO:               skopt: Not installed
2023-05-23 17:27:47,948:INFO:              mlflow: Not installed
2023-05-23 17:27:47,948:INFO:              gradio: Not installed
2023-05-23 17:27:47,948:INFO:             fastapi: Not installed
2023-05-23 17:27:47,948:INFO:             uvicorn: Not installed
2023-05-23 17:27:47,948:INFO:              m2cgen: Not installed
2023-05-23 17:27:47,948:INFO:           evidently: Not installed
2023-05-23 17:27:47,948:INFO:               fugue: Not installed
2023-05-23 17:27:47,948:INFO:           streamlit: Not installed
2023-05-23 17:27:47,948:INFO:             prophet: Not installed
2023-05-23 17:27:47,948:INFO:None
2023-05-23 17:27:47,948:INFO:Set up data.
2023-05-23 17:46:09,225:INFO:PyCaret ClassificationExperiment
2023-05-23 17:46:09,236:INFO:Logging name: clf-default-name
2023-05-23 17:46:09,236:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:46:09,236:INFO:version 3.0.2
2023-05-23 17:46:09,236:INFO:Initializing setup()
2023-05-23 17:46:09,236:INFO:self.USI: 9b20
2023-05-23 17:46:09,236:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:46:09,236:INFO:Checking environment
2023-05-23 17:46:09,236:INFO:python_version: 3.8.16
2023-05-23 17:46:09,236:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:46:09,236:INFO:machine: x86_64
2023-05-23 17:46:09,236:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:46:09,237:INFO:Memory: svmem(total=16378347520, available=4041736192, percent=75.3, used=11203252224, free=2134745088, active=5442703360, inactive=7546863616, buffers=114454528, cached=2925895680, shared=778006528, slab=672686080)
2023-05-23 17:46:09,237:INFO:Physical Core: 10
2023-05-23 17:46:09,238:INFO:Logical Core: 16
2023-05-23 17:46:09,238:INFO:Checking libraries
2023-05-23 17:46:09,238:INFO:System:
2023-05-23 17:46:09,238:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:46:09,238:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:46:09,238:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:46:09,238:INFO:PyCaret required dependencies:
2023-05-23 17:46:09,238:INFO:                 pip: 23.0.1
2023-05-23 17:46:09,238:INFO:          setuptools: 66.0.0
2023-05-23 17:46:09,238:INFO:             pycaret: 3.0.2
2023-05-23 17:46:09,238:INFO:             IPython: 8.12.2
2023-05-23 17:46:09,238:INFO:          ipywidgets: 8.0.6
2023-05-23 17:46:09,238:INFO:                tqdm: 4.65.0
2023-05-23 17:46:09,238:INFO:               numpy: 1.23.5
2023-05-23 17:46:09,238:INFO:              pandas: 1.5.3
2023-05-23 17:46:09,238:INFO:              jinja2: 3.1.2
2023-05-23 17:46:09,238:INFO:               scipy: 1.10.1
2023-05-23 17:46:09,238:INFO:              joblib: 1.2.0
2023-05-23 17:46:09,238:INFO:             sklearn: 1.2.2
2023-05-23 17:46:09,238:INFO:                pyod: 1.0.9
2023-05-23 17:46:09,238:INFO:            imblearn: 0.10.1
2023-05-23 17:46:09,238:INFO:   category_encoders: 2.6.1
2023-05-23 17:46:09,238:INFO:            lightgbm: 3.3.5
2023-05-23 17:46:09,238:INFO:               numba: 0.57.0
2023-05-23 17:46:09,238:INFO:            requests: 2.29.0
2023-05-23 17:46:09,238:INFO:          matplotlib: 3.7.1
2023-05-23 17:46:09,238:INFO:          scikitplot: 0.3.7
2023-05-23 17:46:09,238:INFO:         yellowbrick: 1.5
2023-05-23 17:46:09,238:INFO:              plotly: 5.14.1
2023-05-23 17:46:09,238:INFO:             kaleido: 0.2.1
2023-05-23 17:46:09,238:INFO:         statsmodels: 0.14.0
2023-05-23 17:46:09,238:INFO:              sktime: 0.17.0
2023-05-23 17:46:09,238:INFO:               tbats: 1.1.3
2023-05-23 17:46:09,239:INFO:            pmdarima: 2.0.3
2023-05-23 17:46:09,239:INFO:              psutil: 5.9.0
2023-05-23 17:46:09,239:INFO:PyCaret optional dependencies:
2023-05-23 17:46:09,239:INFO:                shap: Not installed
2023-05-23 17:46:09,239:INFO:           interpret: Not installed
2023-05-23 17:46:09,239:INFO:                umap: Not installed
2023-05-23 17:46:09,239:INFO:    pandas_profiling: Not installed
2023-05-23 17:46:09,239:INFO:  explainerdashboard: Not installed
2023-05-23 17:46:09,239:INFO:             autoviz: Not installed
2023-05-23 17:46:09,239:INFO:           fairlearn: Not installed
2023-05-23 17:46:09,239:INFO:             xgboost: Not installed
2023-05-23 17:46:09,239:INFO:            catboost: Not installed
2023-05-23 17:46:09,239:INFO:              kmodes: Not installed
2023-05-23 17:46:09,239:INFO:             mlxtend: Not installed
2023-05-23 17:46:09,239:INFO:       statsforecast: Not installed
2023-05-23 17:46:09,239:INFO:        tune_sklearn: Not installed
2023-05-23 17:46:09,239:INFO:                 ray: Not installed
2023-05-23 17:46:09,239:INFO:            hyperopt: Not installed
2023-05-23 17:46:09,239:INFO:              optuna: Not installed
2023-05-23 17:46:09,239:INFO:               skopt: Not installed
2023-05-23 17:46:09,239:INFO:              mlflow: Not installed
2023-05-23 17:46:09,239:INFO:              gradio: Not installed
2023-05-23 17:46:09,239:INFO:             fastapi: Not installed
2023-05-23 17:46:09,239:INFO:             uvicorn: Not installed
2023-05-23 17:46:09,239:INFO:              m2cgen: Not installed
2023-05-23 17:46:09,239:INFO:           evidently: Not installed
2023-05-23 17:46:09,239:INFO:               fugue: Not installed
2023-05-23 17:46:09,239:INFO:           streamlit: Not installed
2023-05-23 17:46:09,239:INFO:             prophet: Not installed
2023-05-23 17:46:09,239:INFO:None
2023-05-23 17:46:09,239:INFO:Set up data.
2023-05-23 17:48:43,059:INFO:PyCaret ClassificationExperiment
2023-05-23 17:48:43,059:INFO:Logging name: clf-default-name
2023-05-23 17:48:43,060:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:48:43,060:INFO:version 3.0.2
2023-05-23 17:48:43,060:INFO:Initializing setup()
2023-05-23 17:48:43,060:INFO:self.USI: 5316
2023-05-23 17:48:43,060:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:48:43,060:INFO:Checking environment
2023-05-23 17:48:43,060:INFO:python_version: 3.8.16
2023-05-23 17:48:43,060:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:48:43,060:INFO:machine: x86_64
2023-05-23 17:48:43,060:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:48:43,060:INFO:Memory: svmem(total=16378347520, available=3434778624, percent=79.0, used=11765923840, free=1040482304, active=5850050560, inactive=8237666304, buffers=115380224, cached=3456561152, shared=822501376, slab=673030144)
2023-05-23 17:48:43,060:INFO:Physical Core: 10
2023-05-23 17:48:43,060:INFO:Logical Core: 16
2023-05-23 17:48:43,061:INFO:Checking libraries
2023-05-23 17:48:43,061:INFO:System:
2023-05-23 17:48:43,061:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:48:43,061:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:48:43,061:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:48:43,061:INFO:PyCaret required dependencies:
2023-05-23 17:48:43,061:INFO:                 pip: 23.0.1
2023-05-23 17:48:43,061:INFO:          setuptools: 66.0.0
2023-05-23 17:48:43,061:INFO:             pycaret: 3.0.2
2023-05-23 17:48:43,061:INFO:             IPython: 8.12.2
2023-05-23 17:48:43,061:INFO:          ipywidgets: 8.0.6
2023-05-23 17:48:43,061:INFO:                tqdm: 4.65.0
2023-05-23 17:48:43,061:INFO:               numpy: 1.23.5
2023-05-23 17:48:43,061:INFO:              pandas: 1.5.3
2023-05-23 17:48:43,061:INFO:              jinja2: 3.1.2
2023-05-23 17:48:43,061:INFO:               scipy: 1.10.1
2023-05-23 17:48:43,061:INFO:              joblib: 1.2.0
2023-05-23 17:48:43,061:INFO:             sklearn: 1.2.2
2023-05-23 17:48:43,061:INFO:                pyod: 1.0.9
2023-05-23 17:48:43,061:INFO:            imblearn: 0.10.1
2023-05-23 17:48:43,061:INFO:   category_encoders: 2.6.1
2023-05-23 17:48:43,061:INFO:            lightgbm: 3.3.5
2023-05-23 17:48:43,061:INFO:               numba: 0.57.0
2023-05-23 17:48:43,061:INFO:            requests: 2.29.0
2023-05-23 17:48:43,061:INFO:          matplotlib: 3.7.1
2023-05-23 17:48:43,061:INFO:          scikitplot: 0.3.7
2023-05-23 17:48:43,061:INFO:         yellowbrick: 1.5
2023-05-23 17:48:43,061:INFO:              plotly: 5.14.1
2023-05-23 17:48:43,061:INFO:             kaleido: 0.2.1
2023-05-23 17:48:43,061:INFO:         statsmodels: 0.14.0
2023-05-23 17:48:43,061:INFO:              sktime: 0.17.0
2023-05-23 17:48:43,061:INFO:               tbats: 1.1.3
2023-05-23 17:48:43,061:INFO:            pmdarima: 2.0.3
2023-05-23 17:48:43,061:INFO:              psutil: 5.9.0
2023-05-23 17:48:43,061:INFO:PyCaret optional dependencies:
2023-05-23 17:48:43,061:INFO:                shap: Not installed
2023-05-23 17:48:43,061:INFO:           interpret: Not installed
2023-05-23 17:48:43,061:INFO:                umap: Not installed
2023-05-23 17:48:43,061:INFO:    pandas_profiling: Not installed
2023-05-23 17:48:43,061:INFO:  explainerdashboard: Not installed
2023-05-23 17:48:43,061:INFO:             autoviz: Not installed
2023-05-23 17:48:43,061:INFO:           fairlearn: Not installed
2023-05-23 17:48:43,061:INFO:             xgboost: Not installed
2023-05-23 17:48:43,061:INFO:            catboost: Not installed
2023-05-23 17:48:43,061:INFO:              kmodes: Not installed
2023-05-23 17:48:43,061:INFO:             mlxtend: Not installed
2023-05-23 17:48:43,061:INFO:       statsforecast: Not installed
2023-05-23 17:48:43,061:INFO:        tune_sklearn: Not installed
2023-05-23 17:48:43,061:INFO:                 ray: Not installed
2023-05-23 17:48:43,062:INFO:            hyperopt: Not installed
2023-05-23 17:48:43,062:INFO:              optuna: Not installed
2023-05-23 17:48:43,062:INFO:               skopt: Not installed
2023-05-23 17:48:43,062:INFO:              mlflow: Not installed
2023-05-23 17:48:43,062:INFO:              gradio: Not installed
2023-05-23 17:48:43,062:INFO:             fastapi: Not installed
2023-05-23 17:48:43,062:INFO:             uvicorn: Not installed
2023-05-23 17:48:43,062:INFO:              m2cgen: Not installed
2023-05-23 17:48:43,062:INFO:           evidently: Not installed
2023-05-23 17:48:43,062:INFO:               fugue: Not installed
2023-05-23 17:48:43,062:INFO:           streamlit: Not installed
2023-05-23 17:48:43,062:INFO:             prophet: Not installed
2023-05-23 17:48:43,062:INFO:None
2023-05-23 17:48:43,062:INFO:Set up data.
2023-05-23 17:55:57,802:INFO:PyCaret ClassificationExperiment
2023-05-23 17:55:57,802:INFO:Logging name: clf-default-name
2023-05-23 17:55:57,802:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 17:55:57,802:INFO:version 3.0.2
2023-05-23 17:55:57,802:INFO:Initializing setup()
2023-05-23 17:55:57,802:INFO:self.USI: 23bc
2023-05-23 17:55:57,802:INFO:self._variable_keys: {'fold_generator', 'y', 'y_train', 'gpu_n_jobs_param', 'fold_groups_param', 'memory', 'USI', 'log_plots_param', 'n_jobs_param', 'target_param', 'exp_name_log', 'logging_param', 'gpu_param', 'X_train', '_ml_usecase', 'exp_id', 'pipeline', 'fold_shuffle_param', 'data', 'idx', 'html_param', 'X_test', 'y_test', 'fix_imbalance', 'X', 'seed', '_available_plots', 'is_multiclass'}
2023-05-23 17:55:57,802:INFO:Checking environment
2023-05-23 17:55:57,802:INFO:python_version: 3.8.16
2023-05-23 17:55:57,802:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 17:55:57,802:INFO:machine: x86_64
2023-05-23 17:55:57,802:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:55:57,802:INFO:Memory: svmem(total=16378347520, available=2948194304, percent=82.0, used=12275642368, free=448454656, active=5738487808, inactive=8917385216, buffers=136564736, cached=3517685760, shared=799354880, slab=674029568)
2023-05-23 17:55:57,803:INFO:Physical Core: 10
2023-05-23 17:55:57,803:INFO:Logical Core: 16
2023-05-23 17:55:57,803:INFO:Checking libraries
2023-05-23 17:55:57,803:INFO:System:
2023-05-23 17:55:57,803:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 17:55:57,803:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 17:55:57,803:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 17:55:57,803:INFO:PyCaret required dependencies:
2023-05-23 17:55:57,803:INFO:                 pip: 23.0.1
2023-05-23 17:55:57,803:INFO:          setuptools: 66.0.0
2023-05-23 17:55:57,803:INFO:             pycaret: 3.0.2
2023-05-23 17:55:57,803:INFO:             IPython: 8.12.2
2023-05-23 17:55:57,803:INFO:          ipywidgets: 8.0.6
2023-05-23 17:55:57,803:INFO:                tqdm: 4.65.0
2023-05-23 17:55:57,803:INFO:               numpy: 1.23.5
2023-05-23 17:55:57,803:INFO:              pandas: 1.5.3
2023-05-23 17:55:57,803:INFO:              jinja2: 3.1.2
2023-05-23 17:55:57,803:INFO:               scipy: 1.10.1
2023-05-23 17:55:57,803:INFO:              joblib: 1.2.0
2023-05-23 17:55:57,803:INFO:             sklearn: 1.2.2
2023-05-23 17:55:57,803:INFO:                pyod: 1.0.9
2023-05-23 17:55:57,803:INFO:            imblearn: 0.10.1
2023-05-23 17:55:57,803:INFO:   category_encoders: 2.6.1
2023-05-23 17:55:57,803:INFO:            lightgbm: 3.3.5
2023-05-23 17:55:57,803:INFO:               numba: 0.57.0
2023-05-23 17:55:57,803:INFO:            requests: 2.29.0
2023-05-23 17:55:57,803:INFO:          matplotlib: 3.7.1
2023-05-23 17:55:57,803:INFO:          scikitplot: 0.3.7
2023-05-23 17:55:57,803:INFO:         yellowbrick: 1.5
2023-05-23 17:55:57,803:INFO:              plotly: 5.14.1
2023-05-23 17:55:57,803:INFO:             kaleido: 0.2.1
2023-05-23 17:55:57,803:INFO:         statsmodels: 0.14.0
2023-05-23 17:55:57,803:INFO:              sktime: 0.17.0
2023-05-23 17:55:57,803:INFO:               tbats: 1.1.3
2023-05-23 17:55:57,803:INFO:            pmdarima: 2.0.3
2023-05-23 17:55:57,803:INFO:              psutil: 5.9.0
2023-05-23 17:55:57,803:INFO:PyCaret optional dependencies:
2023-05-23 17:55:57,803:INFO:                shap: Not installed
2023-05-23 17:55:57,803:INFO:           interpret: Not installed
2023-05-23 17:55:57,803:INFO:                umap: Not installed
2023-05-23 17:55:57,803:INFO:    pandas_profiling: Not installed
2023-05-23 17:55:57,803:INFO:  explainerdashboard: Not installed
2023-05-23 17:55:57,803:INFO:             autoviz: Not installed
2023-05-23 17:55:57,803:INFO:           fairlearn: Not installed
2023-05-23 17:55:57,803:INFO:             xgboost: Not installed
2023-05-23 17:55:57,803:INFO:            catboost: Not installed
2023-05-23 17:55:57,803:INFO:              kmodes: Not installed
2023-05-23 17:55:57,803:INFO:             mlxtend: Not installed
2023-05-23 17:55:57,803:INFO:       statsforecast: Not installed
2023-05-23 17:55:57,803:INFO:        tune_sklearn: Not installed
2023-05-23 17:55:57,803:INFO:                 ray: Not installed
2023-05-23 17:55:57,803:INFO:            hyperopt: Not installed
2023-05-23 17:55:57,803:INFO:              optuna: Not installed
2023-05-23 17:55:57,803:INFO:               skopt: Not installed
2023-05-23 17:55:57,803:INFO:              mlflow: Not installed
2023-05-23 17:55:57,804:INFO:              gradio: Not installed
2023-05-23 17:55:57,804:INFO:             fastapi: Not installed
2023-05-23 17:55:57,804:INFO:             uvicorn: Not installed
2023-05-23 17:55:57,804:INFO:              m2cgen: Not installed
2023-05-23 17:55:57,804:INFO:           evidently: Not installed
2023-05-23 17:55:57,804:INFO:               fugue: Not installed
2023-05-23 17:55:57,804:INFO:           streamlit: Not installed
2023-05-23 17:55:57,804:INFO:             prophet: Not installed
2023-05-23 17:55:57,804:INFO:None
2023-05-23 17:55:57,804:INFO:Set up data.
2023-05-23 17:55:59,603:INFO:Set up train/test split.
2023-05-23 17:56:00,264:INFO:Set up index.
2023-05-23 17:56:00,276:INFO:Set up folding strategy.
2023-05-23 17:56:00,276:INFO:Assigning column types.
2023-05-23 17:56:00,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-23 17:56:00,678:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,691:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,760:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,761:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,776:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-23 17:56:00,803:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 17:56:00,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,862:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-23 17:56:00,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:00,958:INFO:Preparing preprocessing pipeline...
2023-05-23 17:56:00,992:INFO:Set up label encoding.
2023-05-23 17:56:00,992:INFO:Set up simple imputation.
2023-05-23 17:56:01,132:INFO:Set up encoding of ordinal features.
2023-05-23 17:56:01,304:INFO:Set up encoding of categorical features.
2023-05-23 17:56:01,304:INFO:Set up feature normalization.
2023-05-23 17:56:01,338:INFO:Set up column name cleaning.
2023-05-23 17:56:17,331:INFO:Finished creating preprocessing pipeline.
2023-05-23 17:56:17,347:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-23 17:56:17,347:INFO:Creating final display dataframe.
2023-05-23 17:56:29,712:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                       (322424, 133)  
5                                       (322424, 160)  
6                                       (257939, 160)  
7                                        (64485, 160)  
8                                                   1  
9                                                 122  
10                                                 10  
11                                               7.9%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               23bc  
2023-05-23 17:56:29,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:29,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:29,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:29,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 17:56:29,820:INFO:setup() successfully completed in 32.02s...............
2023-05-23 18:02:54,279:INFO:Initializing compare_models()
2023-05-23 18:02:54,281:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1cde0a6790>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f1cde0a6790>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-23 18:02:54,281:INFO:Checking exceptions
2023-05-23 18:02:54,447:INFO:Preparing display monitor
2023-05-23 18:02:54,498:INFO:Initializing Logistic Regression
2023-05-23 18:02:54,498:INFO:Total runtime is 3.3418337504069012e-06 minutes
2023-05-23 18:02:54,501:INFO:SubProcess create_model() called ==================================
2023-05-23 18:02:54,501:INFO:Initializing create_model()
2023-05-23 18:02:54,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f1cde0a6790>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1ce151bf40>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 18:02:54,502:INFO:Checking exceptions
2023-05-23 18:02:54,502:INFO:Importing libraries
2023-05-23 18:02:54,502:INFO:Copying training dataset
2023-05-23 18:02:54,785:INFO:Defining folds
2023-05-23 18:02:54,785:INFO:Declaring metric variables
2023-05-23 18:02:54,788:INFO:Importing untrained model
2023-05-23 18:02:54,790:INFO:Logistic Regression Imported successfully
2023-05-23 18:02:54,795:INFO:Starting cross validation
2023-05-23 18:02:54,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 18:03:19,824:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:19,850:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:19,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:19,969:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:20,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:21,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:21,250:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:21,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:21,338:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:21,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:24,070:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:24,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:24,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:24,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:24,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:24,424:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:03:26,960:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:27,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:27,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:27,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 18:03:29,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 18:04:32,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:32,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:32,799:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:35,621:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:35,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:35,823:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:38,890:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:38,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:39,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:40,722:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:40,803:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:40,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:45,451:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:45,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:45,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:46,991:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:47,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 18:04:47,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:03:37,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:03:37,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:03:37,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:03:37,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:03:37,940:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-23 21:05:08,535:INFO:PyCaret ClassificationExperiment
2023-05-23 21:05:08,535:INFO:Logging name: clf-default-name
2023-05-23 21:05:08,535:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-23 21:05:08,535:INFO:version 3.0.2
2023-05-23 21:05:08,535:INFO:Initializing setup()
2023-05-23 21:05:08,535:INFO:self.USI: c561
2023-05-23 21:05:08,535:INFO:self._variable_keys: {'pipeline', 'gpu_param', 'X', 'html_param', '_available_plots', 'USI', 'memory', 'X_test', 'log_plots_param', 'target_param', 'fold_shuffle_param', 'seed', 'idx', 'y_test', 'n_jobs_param', 'X_train', 'data', 'is_multiclass', 'gpu_n_jobs_param', 'fold_generator', 'y_train', '_ml_usecase', 'y', 'exp_name_log', 'fold_groups_param', 'logging_param', 'fix_imbalance', 'exp_id'}
2023-05-23 21:05:08,535:INFO:Checking environment
2023-05-23 21:05:08,535:INFO:python_version: 3.8.16
2023-05-23 21:05:08,535:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 21:05:08,535:INFO:machine: x86_64
2023-05-23 21:05:08,535:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:05:08,535:INFO:Memory: svmem(total=16378347520, available=9678618624, percent=40.9, used=5715177472, free=3550097408, active=2014081024, inactive=9576706048, buffers=116801536, cached=6996271104, shared=634355712, slab=655233024)
2023-05-23 21:05:08,536:INFO:Physical Core: 10
2023-05-23 21:05:08,536:INFO:Logical Core: 16
2023-05-23 21:05:08,536:INFO:Checking libraries
2023-05-23 21:05:08,536:INFO:System:
2023-05-23 21:05:08,536:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 21:05:08,536:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 21:05:08,536:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:05:08,536:INFO:PyCaret required dependencies:
2023-05-23 21:05:08,536:INFO:                 pip: 23.0.1
2023-05-23 21:05:08,536:INFO:          setuptools: 66.0.0
2023-05-23 21:05:08,536:INFO:             pycaret: 3.0.2
2023-05-23 21:05:08,536:INFO:             IPython: 8.12.2
2023-05-23 21:05:08,536:INFO:          ipywidgets: 8.0.6
2023-05-23 21:05:08,536:INFO:                tqdm: 4.65.0
2023-05-23 21:05:08,536:INFO:               numpy: 1.23.5
2023-05-23 21:05:08,536:INFO:              pandas: 1.5.3
2023-05-23 21:05:08,536:INFO:              jinja2: 3.1.2
2023-05-23 21:05:08,536:INFO:               scipy: 1.10.1
2023-05-23 21:05:08,536:INFO:              joblib: 1.2.0
2023-05-23 21:05:08,536:INFO:             sklearn: 1.2.2
2023-05-23 21:05:08,536:INFO:                pyod: 1.0.9
2023-05-23 21:05:08,536:INFO:            imblearn: 0.10.1
2023-05-23 21:05:08,536:INFO:   category_encoders: 2.6.1
2023-05-23 21:05:08,536:INFO:            lightgbm: 3.3.5
2023-05-23 21:05:08,536:INFO:               numba: 0.57.0
2023-05-23 21:05:08,536:INFO:            requests: 2.29.0
2023-05-23 21:05:08,536:INFO:          matplotlib: 3.7.1
2023-05-23 21:05:08,536:INFO:          scikitplot: 0.3.7
2023-05-23 21:05:08,536:INFO:         yellowbrick: 1.5
2023-05-23 21:05:08,536:INFO:              plotly: 5.14.1
2023-05-23 21:05:08,536:INFO:             kaleido: 0.2.1
2023-05-23 21:05:08,536:INFO:         statsmodels: 0.14.0
2023-05-23 21:05:08,536:INFO:              sktime: 0.17.0
2023-05-23 21:05:08,536:INFO:               tbats: 1.1.3
2023-05-23 21:05:08,536:INFO:            pmdarima: 2.0.3
2023-05-23 21:05:08,536:INFO:              psutil: 5.9.0
2023-05-23 21:05:08,537:INFO:PyCaret optional dependencies:
2023-05-23 21:05:08,549:INFO:                shap: Not installed
2023-05-23 21:05:08,549:INFO:           interpret: Not installed
2023-05-23 21:05:08,549:INFO:                umap: Not installed
2023-05-23 21:05:08,549:INFO:    pandas_profiling: Not installed
2023-05-23 21:05:08,549:INFO:  explainerdashboard: Not installed
2023-05-23 21:05:08,549:INFO:             autoviz: Not installed
2023-05-23 21:05:08,549:INFO:           fairlearn: Not installed
2023-05-23 21:05:08,549:INFO:             xgboost: Not installed
2023-05-23 21:05:08,549:INFO:            catboost: Not installed
2023-05-23 21:05:08,549:INFO:              kmodes: Not installed
2023-05-23 21:05:08,549:INFO:             mlxtend: Not installed
2023-05-23 21:05:08,549:INFO:       statsforecast: Not installed
2023-05-23 21:05:08,549:INFO:        tune_sklearn: Not installed
2023-05-23 21:05:08,549:INFO:                 ray: Not installed
2023-05-23 21:05:08,549:INFO:            hyperopt: Not installed
2023-05-23 21:05:08,549:INFO:              optuna: Not installed
2023-05-23 21:05:08,549:INFO:               skopt: Not installed
2023-05-23 21:05:08,549:INFO:              mlflow: Not installed
2023-05-23 21:05:08,549:INFO:              gradio: Not installed
2023-05-23 21:05:08,549:INFO:             fastapi: Not installed
2023-05-23 21:05:08,549:INFO:             uvicorn: Not installed
2023-05-23 21:05:08,549:INFO:              m2cgen: Not installed
2023-05-23 21:05:08,549:INFO:           evidently: Not installed
2023-05-23 21:05:08,549:INFO:               fugue: Not installed
2023-05-23 21:05:08,549:INFO:           streamlit: Not installed
2023-05-23 21:05:08,549:INFO:             prophet: Not installed
2023-05-23 21:05:08,549:INFO:None
2023-05-23 21:05:08,549:INFO:Set up data.
2023-05-23 21:05:09,578:INFO:Set up train/test split.
2023-05-23 21:05:10,070:INFO:Set up index.
2023-05-23 21:05:10,080:INFO:Set up folding strategy.
2023-05-23 21:05:10,080:INFO:Assigning column types.
2023-05-23 21:05:10,350:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-23 21:05:10,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,404:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,445:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,460:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-23 21:05:10,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-23 21:05:10,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,534:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-23 21:05:10,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:10,613:INFO:Preparing preprocessing pipeline...
2023-05-23 21:05:10,657:INFO:Set up label encoding.
2023-05-23 21:05:10,657:INFO:Set up simple imputation.
2023-05-23 21:05:10,770:INFO:Set up encoding of ordinal features.
2023-05-23 21:05:10,832:INFO:Set up encoding of categorical features.
2023-05-23 21:05:10,833:INFO:Set up feature normalization.
2023-05-23 21:05:10,864:INFO:Set up column name cleaning.
2023-05-23 21:05:22,285:INFO:Finished creating preprocessing pipeline.
2023-05-23 21:05:22,297:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-23 21:05:22,297:INFO:Creating final display dataframe.
2023-05-23 21:05:28,554:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                       (322424, 133)  
5                                       (322424, 160)  
6                                       (257939, 160)  
7                                        (64485, 160)  
8                                                   1  
9                                                 122  
10                                                 10  
11                                               7.9%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               c561  
2023-05-23 21:05:28,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:28,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:28,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:28,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:05:28,627:INFO:setup() successfully completed in 20.1s...............
2023-05-23 21:07:45,738:INFO:Initializing compare_models()
2023-05-23 21:07:45,738:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-23 21:07:45,738:INFO:Checking exceptions
2023-05-23 21:07:45,925:INFO:Preparing display monitor
2023-05-23 21:07:45,964:INFO:Initializing Logistic Regression
2023-05-23 21:07:45,964:INFO:Total runtime is 4.633267720540365e-06 minutes
2023-05-23 21:07:45,967:INFO:SubProcess create_model() called ==================================
2023-05-23 21:07:45,967:INFO:Initializing create_model()
2023-05-23 21:07:45,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2379c46310>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 21:07:45,967:INFO:Checking exceptions
2023-05-23 21:07:45,967:INFO:Importing libraries
2023-05-23 21:07:45,967:INFO:Copying training dataset
2023-05-23 21:07:46,212:INFO:Defining folds
2023-05-23 21:07:46,212:INFO:Declaring metric variables
2023-05-23 21:07:46,214:INFO:Importing untrained model
2023-05-23 21:07:46,215:INFO:Logistic Regression Imported successfully
2023-05-23 21:07:46,221:INFO:Starting cross validation
2023-05-23 21:07:46,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 21:08:04,181:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-05-23 21:08:04,197:WARNING:Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2023-05-23 21:08:04,208:INFO:Initializing create_model()
2023-05-23 21:08:04,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2379c46310>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 21:08:04,208:INFO:Checking exceptions
2023-05-23 21:08:04,209:INFO:Importing libraries
2023-05-23 21:08:04,212:INFO:Copying training dataset
2023-05-23 21:08:04,568:INFO:Defining folds
2023-05-23 21:08:04,569:INFO:Declaring metric variables
2023-05-23 21:08:04,630:INFO:Importing untrained model
2023-05-23 21:08:04,636:INFO:Logistic Regression Imported successfully
2023-05-23 21:08:04,642:INFO:Starting cross validation
2023-05-23 21:08:04,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 21:08:14,150:ERROR:create_model() for lr raised an exception or returned all 0.0:
2023-05-23 21:08:14,155:ERROR:Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2023-05-23 21:08:14,156:INFO:Initializing K Neighbors Classifier
2023-05-23 21:08:14,156:INFO:Total runtime is 0.4698748469352722 minutes
2023-05-23 21:08:14,170:INFO:SubProcess create_model() called ==================================
2023-05-23 21:08:14,170:INFO:Initializing create_model()
2023-05-23 21:08:14,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2379c46310>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 21:08:14,171:INFO:Checking exceptions
2023-05-23 21:08:14,171:INFO:Importing libraries
2023-05-23 21:08:14,172:INFO:Copying training dataset
2023-05-23 21:08:14,535:INFO:Defining folds
2023-05-23 21:08:14,536:INFO:Declaring metric variables
2023-05-23 21:08:14,539:INFO:Importing untrained model
2023-05-23 21:08:14,542:INFO:K Neighbors Classifier Imported successfully
2023-05-23 21:08:14,546:INFO:Starting cross validation
2023-05-23 21:08:14,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 21:08:28,632:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2023-05-23 21:08:28,638:WARNING:Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2023-05-23 21:08:28,641:INFO:Initializing create_model()
2023-05-23 21:08:28,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2379c46310>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 21:08:28,641:INFO:Checking exceptions
2023-05-23 21:08:28,641:INFO:Importing libraries
2023-05-23 21:08:28,643:INFO:Copying training dataset
2023-05-23 21:08:29,238:INFO:Defining folds
2023-05-23 21:08:29,238:INFO:Declaring metric variables
2023-05-23 21:08:29,253:INFO:Importing untrained model
2023-05-23 21:08:29,256:INFO:K Neighbors Classifier Imported successfully
2023-05-23 21:08:29,261:INFO:Starting cross validation
2023-05-23 21:08:29,277:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 21:08:35,631:ERROR:create_model() for knn raised an exception or returned all 0.0:
2023-05-23 21:08:35,636:ERROR:Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 444, in result
    return self.__get_result()
  File "/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}

2023-05-23 21:08:35,637:INFO:Initializing Naive Bayes
2023-05-23 21:08:35,637:INFO:Total runtime is 0.827888270219167 minutes
2023-05-23 21:08:35,653:INFO:SubProcess create_model() called ==================================
2023-05-23 21:08:35,654:INFO:Initializing create_model()
2023-05-23 21:08:35,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2370a0fee0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2379c46310>, model_only=True, return_train_score=False, kwargs={})
2023-05-23 21:08:35,654:INFO:Checking exceptions
2023-05-23 21:08:35,654:INFO:Importing libraries
2023-05-23 21:08:35,656:INFO:Copying training dataset
2023-05-23 21:08:36,118:INFO:Defining folds
2023-05-23 21:08:36,118:INFO:Declaring metric variables
2023-05-23 21:08:36,121:INFO:Importing untrained model
2023-05-23 21:08:36,123:INFO:Naive Bayes Imported successfully
2023-05-23 21:08:36,126:INFO:Starting cross validation
2023-05-23 21:08:36,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-23 21:09:49,137:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:50,490:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:52,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:52,508:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:53,263:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:53,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:53,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:53,775:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:53,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:54,138:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:54,258:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:54,268:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 1.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:54,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:54,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:54,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:55,183:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:55,223:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:55,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:55,906:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:56,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:56,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:56,853:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:57,194:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:57,420:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:58,526:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:58,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:58,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:59,179:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:09:59,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:59,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:59,771:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:09:59,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:01,753:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:01,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:01,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:02,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:02,133:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:02,138:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:10:03,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-23 21:10:05,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:10:05,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-23 21:10:08,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,618:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,694:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:08,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:16,210:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:16,315:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:16,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,245:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,271:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,340:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,572:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,602:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,603:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,661:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,687:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,761:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:10:17,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 'Possibly damaged') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-23 21:21:20,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:21:20,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:21:20,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:21:20,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-23 21:21:21,400:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-23 21:21:49,323:INFO:PyCaret RegressionExperiment
2023-05-23 21:21:49,323:INFO:Logging name: reg-default-name
2023-05-23 21:21:49,324:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-23 21:21:49,324:INFO:version 3.0.2
2023-05-23 21:21:49,324:INFO:Initializing setup()
2023-05-23 21:21:49,324:INFO:self.USI: c6ea
2023-05-23 21:21:49,324:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-23 21:21:49,324:INFO:Checking environment
2023-05-23 21:21:49,324:INFO:python_version: 3.8.16
2023-05-23 21:21:49,324:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 21:21:49,324:INFO:machine: x86_64
2023-05-23 21:21:49,324:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:21:49,324:INFO:Memory: svmem(total=16378347520, available=11694579712, percent=28.6, used=3668299776, free=2240012288, active=1372827648, inactive=11484934144, buffers=188612608, cached=10281422848, shared=662482944, slab=651264000)
2023-05-23 21:21:49,324:INFO:Physical Core: 10
2023-05-23 21:21:49,324:INFO:Logical Core: 16
2023-05-23 21:21:49,324:INFO:Checking libraries
2023-05-23 21:21:49,324:INFO:System:
2023-05-23 21:21:49,325:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 21:21:49,325:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 21:21:49,325:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:21:49,325:INFO:PyCaret required dependencies:
2023-05-23 21:21:49,325:INFO:                 pip: 23.0.1
2023-05-23 21:21:49,325:INFO:          setuptools: 66.0.0
2023-05-23 21:21:49,325:INFO:             pycaret: 3.0.2
2023-05-23 21:21:49,325:INFO:             IPython: 8.12.2
2023-05-23 21:21:49,325:INFO:          ipywidgets: 8.0.6
2023-05-23 21:21:49,325:INFO:                tqdm: 4.65.0
2023-05-23 21:21:49,325:INFO:               numpy: 1.23.5
2023-05-23 21:21:49,325:INFO:              pandas: 1.5.3
2023-05-23 21:21:49,325:INFO:              jinja2: 3.1.2
2023-05-23 21:21:49,325:INFO:               scipy: 1.10.1
2023-05-23 21:21:49,325:INFO:              joblib: 1.2.0
2023-05-23 21:21:49,325:INFO:             sklearn: 1.2.2
2023-05-23 21:21:49,325:INFO:                pyod: 1.0.9
2023-05-23 21:21:49,325:INFO:            imblearn: 0.10.1
2023-05-23 21:21:49,325:INFO:   category_encoders: 2.6.1
2023-05-23 21:21:49,325:INFO:            lightgbm: 3.3.5
2023-05-23 21:21:49,325:INFO:               numba: 0.57.0
2023-05-23 21:21:49,325:INFO:            requests: 2.29.0
2023-05-23 21:21:49,325:INFO:          matplotlib: 3.7.1
2023-05-23 21:21:49,325:INFO:          scikitplot: 0.3.7
2023-05-23 21:21:49,325:INFO:         yellowbrick: 1.5
2023-05-23 21:21:49,325:INFO:              plotly: 5.14.1
2023-05-23 21:21:49,325:INFO:             kaleido: 0.2.1
2023-05-23 21:21:49,325:INFO:         statsmodels: 0.14.0
2023-05-23 21:21:49,325:INFO:              sktime: 0.17.0
2023-05-23 21:21:49,325:INFO:               tbats: 1.1.3
2023-05-23 21:21:49,325:INFO:            pmdarima: 2.0.3
2023-05-23 21:21:49,325:INFO:              psutil: 5.9.0
2023-05-23 21:21:49,325:INFO:PyCaret optional dependencies:
2023-05-23 21:21:49,338:INFO:                shap: Not installed
2023-05-23 21:21:49,338:INFO:           interpret: Not installed
2023-05-23 21:21:49,338:INFO:                umap: Not installed
2023-05-23 21:21:49,338:INFO:    pandas_profiling: Not installed
2023-05-23 21:21:49,338:INFO:  explainerdashboard: Not installed
2023-05-23 21:21:49,338:INFO:             autoviz: Not installed
2023-05-23 21:21:49,338:INFO:           fairlearn: Not installed
2023-05-23 21:21:49,338:INFO:             xgboost: Not installed
2023-05-23 21:21:49,338:INFO:            catboost: Not installed
2023-05-23 21:21:49,338:INFO:              kmodes: Not installed
2023-05-23 21:21:49,338:INFO:             mlxtend: Not installed
2023-05-23 21:21:49,338:INFO:       statsforecast: Not installed
2023-05-23 21:21:49,338:INFO:        tune_sklearn: Not installed
2023-05-23 21:21:49,338:INFO:                 ray: Not installed
2023-05-23 21:21:49,338:INFO:            hyperopt: Not installed
2023-05-23 21:21:49,338:INFO:              optuna: Not installed
2023-05-23 21:21:49,338:INFO:               skopt: Not installed
2023-05-23 21:21:49,338:INFO:              mlflow: Not installed
2023-05-23 21:21:49,338:INFO:              gradio: Not installed
2023-05-23 21:21:49,338:INFO:             fastapi: Not installed
2023-05-23 21:21:49,338:INFO:             uvicorn: Not installed
2023-05-23 21:21:49,338:INFO:              m2cgen: Not installed
2023-05-23 21:21:49,338:INFO:           evidently: Not installed
2023-05-23 21:21:49,338:INFO:               fugue: Not installed
2023-05-23 21:21:49,338:INFO:           streamlit: Not installed
2023-05-23 21:21:49,338:INFO:             prophet: Not installed
2023-05-23 21:21:49,338:INFO:None
2023-05-23 21:21:49,338:INFO:Set up data.
2023-05-23 21:23:00,575:INFO:PyCaret RegressionExperiment
2023-05-23 21:23:00,575:INFO:Logging name: reg-default-name
2023-05-23 21:23:00,575:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-23 21:23:00,575:INFO:version 3.0.2
2023-05-23 21:23:00,575:INFO:Initializing setup()
2023-05-23 21:23:00,575:INFO:self.USI: ac5d
2023-05-23 21:23:00,575:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-23 21:23:00,575:INFO:Checking environment
2023-05-23 21:23:00,575:INFO:python_version: 3.8.16
2023-05-23 21:23:00,575:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-23 21:23:00,575:INFO:machine: x86_64
2023-05-23 21:23:00,575:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:23:00,575:INFO:Memory: svmem(total=16378347520, available=11331330048, percent=30.8, used=4005875712, free=1876074496, active=1373323264, inactive=11811647488, buffers=188899328, cached=10307497984, shared=688148480, slab=651341824)
2023-05-23 21:23:00,576:INFO:Physical Core: 10
2023-05-23 21:23:00,576:INFO:Logical Core: 16
2023-05-23 21:23:00,576:INFO:Checking libraries
2023-05-23 21:23:00,576:INFO:System:
2023-05-23 21:23:00,576:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-23 21:23:00,576:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-23 21:23:00,576:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-23 21:23:00,576:INFO:PyCaret required dependencies:
2023-05-23 21:23:00,576:INFO:                 pip: 23.0.1
2023-05-23 21:23:00,576:INFO:          setuptools: 66.0.0
2023-05-23 21:23:00,576:INFO:             pycaret: 3.0.2
2023-05-23 21:23:00,576:INFO:             IPython: 8.12.2
2023-05-23 21:23:00,576:INFO:          ipywidgets: 8.0.6
2023-05-23 21:23:00,576:INFO:                tqdm: 4.65.0
2023-05-23 21:23:00,576:INFO:               numpy: 1.23.5
2023-05-23 21:23:00,576:INFO:              pandas: 1.5.3
2023-05-23 21:23:00,576:INFO:              jinja2: 3.1.2
2023-05-23 21:23:00,576:INFO:               scipy: 1.10.1
2023-05-23 21:23:00,576:INFO:              joblib: 1.2.0
2023-05-23 21:23:00,576:INFO:             sklearn: 1.2.2
2023-05-23 21:23:00,576:INFO:                pyod: 1.0.9
2023-05-23 21:23:00,576:INFO:            imblearn: 0.10.1
2023-05-23 21:23:00,576:INFO:   category_encoders: 2.6.1
2023-05-23 21:23:00,576:INFO:            lightgbm: 3.3.5
2023-05-23 21:23:00,576:INFO:               numba: 0.57.0
2023-05-23 21:23:00,576:INFO:            requests: 2.29.0
2023-05-23 21:23:00,576:INFO:          matplotlib: 3.7.1
2023-05-23 21:23:00,576:INFO:          scikitplot: 0.3.7
2023-05-23 21:23:00,576:INFO:         yellowbrick: 1.5
2023-05-23 21:23:00,576:INFO:              plotly: 5.14.1
2023-05-23 21:23:00,576:INFO:             kaleido: 0.2.1
2023-05-23 21:23:00,576:INFO:         statsmodels: 0.14.0
2023-05-23 21:23:00,576:INFO:              sktime: 0.17.0
2023-05-23 21:23:00,576:INFO:               tbats: 1.1.3
2023-05-23 21:23:00,576:INFO:            pmdarima: 2.0.3
2023-05-23 21:23:00,576:INFO:              psutil: 5.9.0
2023-05-23 21:23:00,576:INFO:PyCaret optional dependencies:
2023-05-23 21:23:00,576:INFO:                shap: Not installed
2023-05-23 21:23:00,576:INFO:           interpret: Not installed
2023-05-23 21:23:00,576:INFO:                umap: Not installed
2023-05-23 21:23:00,576:INFO:    pandas_profiling: Not installed
2023-05-23 21:23:00,576:INFO:  explainerdashboard: Not installed
2023-05-23 21:23:00,576:INFO:             autoviz: Not installed
2023-05-23 21:23:00,576:INFO:           fairlearn: Not installed
2023-05-23 21:23:00,576:INFO:             xgboost: Not installed
2023-05-23 21:23:00,576:INFO:            catboost: Not installed
2023-05-23 21:23:00,576:INFO:              kmodes: Not installed
2023-05-23 21:23:00,576:INFO:             mlxtend: Not installed
2023-05-23 21:23:00,576:INFO:       statsforecast: Not installed
2023-05-23 21:23:00,576:INFO:        tune_sklearn: Not installed
2023-05-23 21:23:00,576:INFO:                 ray: Not installed
2023-05-23 21:23:00,576:INFO:            hyperopt: Not installed
2023-05-23 21:23:00,576:INFO:              optuna: Not installed
2023-05-23 21:23:00,576:INFO:               skopt: Not installed
2023-05-23 21:23:00,576:INFO:              mlflow: Not installed
2023-05-23 21:23:00,576:INFO:              gradio: Not installed
2023-05-23 21:23:00,576:INFO:             fastapi: Not installed
2023-05-23 21:23:00,576:INFO:             uvicorn: Not installed
2023-05-23 21:23:00,576:INFO:              m2cgen: Not installed
2023-05-23 21:23:00,576:INFO:           evidently: Not installed
2023-05-23 21:23:00,576:INFO:               fugue: Not installed
2023-05-23 21:23:00,577:INFO:           streamlit: Not installed
2023-05-23 21:23:00,577:INFO:             prophet: Not installed
2023-05-23 21:23:00,577:INFO:None
2023-05-23 21:23:00,577:INFO:Set up data.
2023-05-23 21:23:01,695:INFO:Set up train/test split.
2023-05-23 21:23:02,034:INFO:Set up index.
2023-05-23 21:23:02,038:INFO:Set up folding strategy.
2023-05-23 21:23:02,038:INFO:Assigning column types.
2023-05-23 21:23:02,290:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-23 21:23:02,290:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,293:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,295:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,508:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,529:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:02,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:02,545:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,547:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,551:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:02,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:02,776:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-23 21:23:02,777:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,779:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:02,985:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,006:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,009:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,011:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,218:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,240:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-23 21:23:03,244:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,454:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,482:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,722:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,723:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,724:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-23 21:23:03,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:03,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:03,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,176:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:04,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-23 21:23:04,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,201:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-23 21:23:04,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:04,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-23 21:23:04,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,687:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-23 21:23:04,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:04,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:05,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:05,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-23 21:23:05,182:INFO:Preparing preprocessing pipeline...
2023-05-23 21:23:05,182:INFO:Set up simple imputation.
2023-05-23 21:23:05,297:INFO:Set up encoding of ordinal features.
2023-05-23 21:23:05,361:INFO:Set up encoding of categorical features.
2023-05-23 21:23:05,362:INFO:Set up feature normalization.
2023-05-23 21:23:05,391:INFO:Set up column name cleaning.
2023-05-23 21:35:08,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-23 21:35:08,104:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-23 21:35:09,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-23 21:35:09,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,659:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,750:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:09,991:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:10,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:10,286:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:10,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:10,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:11,159:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:11,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:11,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:11,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:11,796:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:11,916:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,118:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,357:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,612:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:12,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:13,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:13,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:13,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:13,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:14,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:35:14,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:14,793:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:14,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,791:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:15,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,470:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,585:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:16,966:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,184:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,620:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,844:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:17,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,065:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,177:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,829:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:18,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,035:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,215:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,329:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,665:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,779:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:19,890:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,341:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:20,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,010:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:21,976:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,297:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,397:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,626:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,737:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,848:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:22,963:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,078:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,189:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,302:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,537:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:23,998:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,580:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,693:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,807:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:24,923:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,038:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,266:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,380:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,495:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,847:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:25,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:26,070:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:26,185:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:35:26,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:30,849:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-23 21:37:30,851:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-23 21:37:31,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:31,896:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-23 21:37:31,937:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,128:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:32,956:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:33,293:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:33,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:33,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:34,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:34,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:34,377:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:34,732:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:34,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:34,986:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,242:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,642:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:35,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:36,141:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:36,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:36,860:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:37,220:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:37,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:37,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:38,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-23 21:37:38,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:38,844:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:38,972:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,240:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,370:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,492:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,618:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:39,997:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,602:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,721:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:40,958:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,084:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,324:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,567:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,688:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:41,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,051:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,184:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,307:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,432:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:42,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,005:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,830:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:43,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,067:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,534:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,652:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:44,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,395:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:45,895:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,023:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,276:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,401:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,527:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,651:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,778:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:46,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,044:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,172:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:47,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,039:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,285:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,769:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:48,894:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,020:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,271:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,651:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:49,902:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,669:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:50,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,053:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,180:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,566:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,824:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:51,949:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 21:37:52,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-23 22:09:38,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,864:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,867:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,868:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-23 22:09:38,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-24 23:58:54,023:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-24 23:58:54,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-24 23:58:54,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,150:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-24 23:58:55,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,632:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:55,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:56,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:56,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:58:56,893:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:57,031:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:58:57,389:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:58:57,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:57,825:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:57,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,319:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,439:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,818:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:58,955:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:58:59,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:58:59,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:58:59,985:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:59:00,366:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:59:01,041:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:01,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:59:01,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:59:01,906:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-24 23:59:02,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:02,418:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:02,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:02,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:02,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:02,916:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,274:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:03,895:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:04,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:05,014:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:05,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:05,340:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:05,468:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:05,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,031:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,203:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,499:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:06,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,174:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,293:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,784:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:07,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,308:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,550:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:08,945:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,562:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,806:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:09,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,060:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,305:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:10,922:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,075:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,347:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:11,987:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,105:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,587:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:12,728:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,415:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,545:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,662:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:13,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,555:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,811:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:14,960:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,077:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,561:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,799:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:15,913:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:16,031:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-24 23:59:16,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 00:30:41,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,120:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,121:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,123:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,126:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,127:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:41,128:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 00:30:51,411:INFO:PyCaret ClassificationExperiment
2023-05-25 00:30:51,411:INFO:Logging name: clf-default-name
2023-05-25 00:30:51,411:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 00:30:51,411:INFO:version 3.0.2
2023-05-25 00:30:51,411:INFO:Initializing setup()
2023-05-25 00:30:51,411:INFO:self.USI: 09d8
2023-05-25 00:30:51,411:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'is_multiclass', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'fix_imbalance', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param'}
2023-05-25 00:30:51,411:INFO:Checking environment
2023-05-25 00:30:51,411:INFO:python_version: 3.8.16
2023-05-25 00:30:51,411:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 00:30:51,411:INFO:machine: x86_64
2023-05-25 00:30:51,411:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 00:30:51,411:INFO:Memory: svmem(total=16378347520, available=3349086208, percent=79.6, used=11901980672, free=936034304, active=1662799872, inactive=12410441728, buffers=129695744, cached=3410636800, shared=774959104, slab=594407424)
2023-05-25 00:30:51,412:INFO:Physical Core: 10
2023-05-25 00:30:51,412:INFO:Logical Core: 16
2023-05-25 00:30:51,412:INFO:Checking libraries
2023-05-25 00:30:51,412:INFO:System:
2023-05-25 00:30:51,412:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 00:30:51,412:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 00:30:51,412:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 00:30:51,412:INFO:PyCaret required dependencies:
2023-05-25 00:30:51,412:INFO:                 pip: 23.0.1
2023-05-25 00:30:51,412:INFO:          setuptools: 66.0.0
2023-05-25 00:30:51,412:INFO:             pycaret: 3.0.2
2023-05-25 00:30:51,412:INFO:             IPython: 8.12.2
2023-05-25 00:30:51,412:INFO:          ipywidgets: 8.0.6
2023-05-25 00:30:51,412:INFO:                tqdm: 4.65.0
2023-05-25 00:30:51,412:INFO:               numpy: 1.23.5
2023-05-25 00:30:51,412:INFO:              pandas: 1.5.3
2023-05-25 00:30:51,412:INFO:              jinja2: 3.1.2
2023-05-25 00:30:51,412:INFO:               scipy: 1.10.1
2023-05-25 00:30:51,412:INFO:              joblib: 1.2.0
2023-05-25 00:30:51,412:INFO:             sklearn: 1.2.2
2023-05-25 00:30:51,412:INFO:                pyod: 1.0.9
2023-05-25 00:30:51,412:INFO:            imblearn: 0.10.1
2023-05-25 00:30:51,412:INFO:   category_encoders: 2.6.1
2023-05-25 00:30:51,412:INFO:            lightgbm: 3.3.5
2023-05-25 00:30:51,412:INFO:               numba: 0.57.0
2023-05-25 00:30:51,413:INFO:            requests: 2.29.0
2023-05-25 00:30:51,413:INFO:          matplotlib: 3.7.1
2023-05-25 00:30:51,413:INFO:          scikitplot: 0.3.7
2023-05-25 00:30:51,413:INFO:         yellowbrick: 1.5
2023-05-25 00:30:51,413:INFO:              plotly: 5.14.1
2023-05-25 00:30:51,413:INFO:             kaleido: 0.2.1
2023-05-25 00:30:51,413:INFO:         statsmodels: 0.14.0
2023-05-25 00:30:51,413:INFO:              sktime: 0.17.0
2023-05-25 00:30:51,413:INFO:               tbats: 1.1.3
2023-05-25 00:30:51,413:INFO:            pmdarima: 2.0.3
2023-05-25 00:30:51,413:INFO:              psutil: 5.9.0
2023-05-25 00:30:51,413:INFO:PyCaret optional dependencies:
2023-05-25 00:30:51,413:INFO:                shap: Not installed
2023-05-25 00:30:51,413:INFO:           interpret: Not installed
2023-05-25 00:30:51,413:INFO:                umap: Not installed
2023-05-25 00:30:51,413:INFO:    pandas_profiling: Not installed
2023-05-25 00:30:51,413:INFO:  explainerdashboard: Not installed
2023-05-25 00:30:51,413:INFO:             autoviz: Not installed
2023-05-25 00:30:51,413:INFO:           fairlearn: Not installed
2023-05-25 00:30:51,413:INFO:             xgboost: Not installed
2023-05-25 00:30:51,413:INFO:            catboost: Not installed
2023-05-25 00:30:51,413:INFO:              kmodes: Not installed
2023-05-25 00:30:51,413:INFO:             mlxtend: Not installed
2023-05-25 00:30:51,413:INFO:       statsforecast: Not installed
2023-05-25 00:30:51,413:INFO:        tune_sklearn: Not installed
2023-05-25 00:30:51,413:INFO:                 ray: Not installed
2023-05-25 00:30:51,413:INFO:            hyperopt: Not installed
2023-05-25 00:30:51,413:INFO:              optuna: Not installed
2023-05-25 00:30:51,413:INFO:               skopt: Not installed
2023-05-25 00:30:51,413:INFO:              mlflow: Not installed
2023-05-25 00:30:51,413:INFO:              gradio: Not installed
2023-05-25 00:30:51,413:INFO:             fastapi: Not installed
2023-05-25 00:30:51,413:INFO:             uvicorn: Not installed
2023-05-25 00:30:51,413:INFO:              m2cgen: Not installed
2023-05-25 00:30:51,413:INFO:           evidently: Not installed
2023-05-25 00:30:51,413:INFO:               fugue: Not installed
2023-05-25 00:30:51,413:INFO:           streamlit: Not installed
2023-05-25 00:30:51,413:INFO:             prophet: Not installed
2023-05-25 00:30:51,413:INFO:None
2023-05-25 00:30:51,413:INFO:Set up data.
2023-05-25 00:30:52,335:INFO:Set up train/test split.
2023-05-25 00:30:53,035:INFO:Set up index.
2023-05-25 00:30:53,046:INFO:Set up folding strategy.
2023-05-25 00:30:53,046:INFO:Assigning column types.
2023-05-25 00:30:53,605:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 00:30:53,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,679:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,693:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 00:30:53,714:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 00:30:53,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,760:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 00:30:53,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:30:53,827:INFO:Preparing preprocessing pipeline...
2023-05-25 00:30:53,870:INFO:Set up label encoding.
2023-05-25 00:30:53,870:INFO:Set up simple imputation.
2023-05-25 00:30:54,044:INFO:Set up encoding of ordinal features.
2023-05-25 00:30:54,259:INFO:Set up encoding of categorical features.
2023-05-25 00:30:54,259:INFO:Set up feature normalization.
2023-05-25 00:30:54,332:INFO:Set up column name cleaning.
2023-05-25 00:31:07,822:INFO:Finished creating preprocessing pipeline.
2023-05-25 00:31:07,833:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-25 00:31:07,833:INFO:Creating final display dataframe.
2023-05-25 00:31:21,284:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                       (322424, 129)  
5                                       (322424, 156)  
6                                       (257939, 156)  
7                                        (64485, 156)  
8                                                   1  
9                                                 122  
10                                                  6  
11                                               7.9%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               09d8  
2023-05-25 00:31:21,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:21,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:21,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:21,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:21,382:INFO:setup() successfully completed in 30.06s...............
2023-05-25 00:31:21,838:INFO:PyCaret RegressionExperiment
2023-05-25 00:31:21,838:INFO:Logging name: reg-default-name
2023-05-25 00:31:21,838:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 00:31:21,838:INFO:version 3.0.2
2023-05-25 00:31:21,838:INFO:Initializing setup()
2023-05-25 00:31:21,838:INFO:self.USI: fc3c
2023-05-25 00:31:21,838:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 00:31:21,838:INFO:Checking environment
2023-05-25 00:31:21,838:INFO:python_version: 3.8.16
2023-05-25 00:31:21,838:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 00:31:21,838:INFO:machine: x86_64
2023-05-25 00:31:21,838:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 00:31:21,839:INFO:Memory: svmem(total=16378347520, available=4115591168, percent=74.9, used=11133865984, free=1269575680, active=3878494208, inactive=10133843968, buffers=79650816, cached=3895255040, shared=775032832, slab=612270080)
2023-05-25 00:31:21,839:INFO:Physical Core: 10
2023-05-25 00:31:21,839:INFO:Logical Core: 16
2023-05-25 00:31:21,839:INFO:Checking libraries
2023-05-25 00:31:21,839:INFO:System:
2023-05-25 00:31:21,839:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 00:31:21,839:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 00:31:21,839:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 00:31:21,839:INFO:PyCaret required dependencies:
2023-05-25 00:31:21,839:INFO:                 pip: 23.0.1
2023-05-25 00:31:21,840:INFO:          setuptools: 66.0.0
2023-05-25 00:31:21,840:INFO:             pycaret: 3.0.2
2023-05-25 00:31:21,840:INFO:             IPython: 8.12.2
2023-05-25 00:31:21,840:INFO:          ipywidgets: 8.0.6
2023-05-25 00:31:21,840:INFO:                tqdm: 4.65.0
2023-05-25 00:31:21,840:INFO:               numpy: 1.23.5
2023-05-25 00:31:21,840:INFO:              pandas: 1.5.3
2023-05-25 00:31:21,840:INFO:              jinja2: 3.1.2
2023-05-25 00:31:21,840:INFO:               scipy: 1.10.1
2023-05-25 00:31:21,840:INFO:              joblib: 1.2.0
2023-05-25 00:31:21,840:INFO:             sklearn: 1.2.2
2023-05-25 00:31:21,840:INFO:                pyod: 1.0.9
2023-05-25 00:31:21,840:INFO:            imblearn: 0.10.1
2023-05-25 00:31:21,840:INFO:   category_encoders: 2.6.1
2023-05-25 00:31:21,840:INFO:            lightgbm: 3.3.5
2023-05-25 00:31:21,840:INFO:               numba: 0.57.0
2023-05-25 00:31:21,840:INFO:            requests: 2.29.0
2023-05-25 00:31:21,840:INFO:          matplotlib: 3.7.1
2023-05-25 00:31:21,840:INFO:          scikitplot: 0.3.7
2023-05-25 00:31:21,840:INFO:         yellowbrick: 1.5
2023-05-25 00:31:21,840:INFO:              plotly: 5.14.1
2023-05-25 00:31:21,840:INFO:             kaleido: 0.2.1
2023-05-25 00:31:21,840:INFO:         statsmodels: 0.14.0
2023-05-25 00:31:21,840:INFO:              sktime: 0.17.0
2023-05-25 00:31:21,840:INFO:               tbats: 1.1.3
2023-05-25 00:31:21,840:INFO:            pmdarima: 2.0.3
2023-05-25 00:31:21,840:INFO:              psutil: 5.9.0
2023-05-25 00:31:21,840:INFO:PyCaret optional dependencies:
2023-05-25 00:31:21,840:INFO:                shap: Not installed
2023-05-25 00:31:21,840:INFO:           interpret: Not installed
2023-05-25 00:31:21,840:INFO:                umap: Not installed
2023-05-25 00:31:21,840:INFO:    pandas_profiling: Not installed
2023-05-25 00:31:21,840:INFO:  explainerdashboard: Not installed
2023-05-25 00:31:21,840:INFO:             autoviz: Not installed
2023-05-25 00:31:21,840:INFO:           fairlearn: Not installed
2023-05-25 00:31:21,840:INFO:             xgboost: Not installed
2023-05-25 00:31:21,840:INFO:            catboost: Not installed
2023-05-25 00:31:21,840:INFO:              kmodes: Not installed
2023-05-25 00:31:21,840:INFO:             mlxtend: Not installed
2023-05-25 00:31:21,840:INFO:       statsforecast: Not installed
2023-05-25 00:31:21,840:INFO:        tune_sklearn: Not installed
2023-05-25 00:31:21,840:INFO:                 ray: Not installed
2023-05-25 00:31:21,840:INFO:            hyperopt: Not installed
2023-05-25 00:31:21,840:INFO:              optuna: Not installed
2023-05-25 00:31:21,840:INFO:               skopt: Not installed
2023-05-25 00:31:21,840:INFO:              mlflow: Not installed
2023-05-25 00:31:21,840:INFO:              gradio: Not installed
2023-05-25 00:31:21,840:INFO:             fastapi: Not installed
2023-05-25 00:31:21,840:INFO:             uvicorn: Not installed
2023-05-25 00:31:21,840:INFO:              m2cgen: Not installed
2023-05-25 00:31:21,840:INFO:           evidently: Not installed
2023-05-25 00:31:21,840:INFO:               fugue: Not installed
2023-05-25 00:31:21,840:INFO:           streamlit: Not installed
2023-05-25 00:31:21,840:INFO:             prophet: Not installed
2023-05-25 00:31:21,840:INFO:None
2023-05-25 00:31:21,840:INFO:Set up data.
2023-05-25 00:31:22,649:INFO:Set up train/test split.
2023-05-25 00:31:22,981:INFO:Set up index.
2023-05-25 00:31:22,992:INFO:Set up folding strategy.
2023-05-25 00:31:22,992:INFO:Assigning column types.
2023-05-25 00:31:23,241:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 00:31:23,241:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,243:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,245:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,468:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,470:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,471:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,692:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 00:31:23,695:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,697:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,893:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:23,914:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 00:31:23,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,132:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,134:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 00:31:24,138:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,350:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,554:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 00:31:24,740:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 00:31:24,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:24,967:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 00:31:25,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:25,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 00:31:25,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,378:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 00:31:25,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 00:31:25,791:INFO:Preparing preprocessing pipeline...
2023-05-25 00:31:25,791:INFO:Set up simple imputation.
2023-05-25 00:31:25,875:INFO:Set up encoding of ordinal features.
2023-05-25 00:31:25,930:INFO:Set up encoding of categorical features.
2023-05-25 00:31:25,930:INFO:Set up feature normalization.
2023-05-25 00:31:25,957:INFO:Set up column name cleaning.
2023-05-25 02:03:09,962:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-25 02:03:09,964:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-25 02:03:10,670:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:10,839:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-25 02:03:10,866:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,014:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,219:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:11,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:12,705:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:12,982:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:13,091:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:13,391:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:13,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:13,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:13,921:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,352:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,579:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,826:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:14,959:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:15,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:15,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:15,942:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:16,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:16,619:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:16,982:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:17,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 02:03:17,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:17,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:17,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:17,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,145:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,264:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,475:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,579:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:18,991:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,235:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,444:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,758:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:19,990:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,095:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,296:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,490:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:20,697:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,274:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,491:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,694:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,807:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:21,940:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,658:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:22,982:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,083:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,210:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,300:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,516:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,617:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,733:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,838:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:23,942:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,057:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,266:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,371:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,474:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,680:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:24,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,002:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,104:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,204:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,314:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,525:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,639:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,747:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,851:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:25,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,076:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,286:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,506:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:26,621:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,056:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,162:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,280:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,492:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,702:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:27,911:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,028:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,243:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,467:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:28,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:29,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:29,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:29,253:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:03:29,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 02:37:36,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,874:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,874:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,874:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,875:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,878:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,878:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,878:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,878:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,880:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,881:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:36,882:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-25 02:37:47,812:INFO:PyCaret ClassificationExperiment
2023-05-25 02:37:47,812:INFO:Logging name: clf-default-name
2023-05-25 02:37:47,812:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 02:37:47,812:INFO:version 3.0.2
2023-05-25 02:37:47,812:INFO:Initializing setup()
2023-05-25 02:37:47,812:INFO:self.USI: 0014
2023-05-25 02:37:47,812:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'is_multiclass', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'fix_imbalance', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param'}
2023-05-25 02:37:47,812:INFO:Checking environment
2023-05-25 02:37:47,812:INFO:python_version: 3.8.16
2023-05-25 02:37:47,812:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 02:37:47,812:INFO:machine: x86_64
2023-05-25 02:37:47,812:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 02:37:47,812:INFO:Memory: svmem(total=16378347520, available=1955065856, percent=88.1, used=13188468736, free=707751936, active=3756896256, inactive=10799734784, buffers=96002048, cached=2386124800, shared=873590784, slab=567205888)
2023-05-25 02:37:47,813:INFO:Physical Core: 10
2023-05-25 02:37:47,813:INFO:Logical Core: 16
2023-05-25 02:37:47,813:INFO:Checking libraries
2023-05-25 02:37:47,813:INFO:System:
2023-05-25 02:37:47,813:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 02:37:47,813:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 02:37:47,813:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 02:37:47,813:INFO:PyCaret required dependencies:
2023-05-25 02:37:47,813:INFO:                 pip: 23.0.1
2023-05-25 02:37:47,813:INFO:          setuptools: 66.0.0
2023-05-25 02:37:47,813:INFO:             pycaret: 3.0.2
2023-05-25 02:37:47,813:INFO:             IPython: 8.12.2
2023-05-25 02:37:47,813:INFO:          ipywidgets: 8.0.6
2023-05-25 02:37:47,813:INFO:                tqdm: 4.65.0
2023-05-25 02:37:47,813:INFO:               numpy: 1.23.5
2023-05-25 02:37:47,813:INFO:              pandas: 1.5.3
2023-05-25 02:37:47,813:INFO:              jinja2: 3.1.2
2023-05-25 02:37:47,813:INFO:               scipy: 1.10.1
2023-05-25 02:37:47,813:INFO:              joblib: 1.2.0
2023-05-25 02:37:47,813:INFO:             sklearn: 1.2.2
2023-05-25 02:37:47,813:INFO:                pyod: 1.0.9
2023-05-25 02:37:47,813:INFO:            imblearn: 0.10.1
2023-05-25 02:37:47,813:INFO:   category_encoders: 2.6.1
2023-05-25 02:37:47,813:INFO:            lightgbm: 3.3.5
2023-05-25 02:37:47,813:INFO:               numba: 0.57.0
2023-05-25 02:37:47,813:INFO:            requests: 2.29.0
2023-05-25 02:37:47,813:INFO:          matplotlib: 3.7.1
2023-05-25 02:37:47,813:INFO:          scikitplot: 0.3.7
2023-05-25 02:37:47,813:INFO:         yellowbrick: 1.5
2023-05-25 02:37:47,813:INFO:              plotly: 5.14.1
2023-05-25 02:37:47,813:INFO:             kaleido: 0.2.1
2023-05-25 02:37:47,813:INFO:         statsmodels: 0.14.0
2023-05-25 02:37:47,813:INFO:              sktime: 0.17.0
2023-05-25 02:37:47,813:INFO:               tbats: 1.1.3
2023-05-25 02:37:47,813:INFO:            pmdarima: 2.0.3
2023-05-25 02:37:47,813:INFO:              psutil: 5.9.0
2023-05-25 02:37:47,813:INFO:PyCaret optional dependencies:
2023-05-25 02:37:47,813:INFO:                shap: Not installed
2023-05-25 02:37:47,813:INFO:           interpret: Not installed
2023-05-25 02:37:47,813:INFO:                umap: Not installed
2023-05-25 02:37:47,813:INFO:    pandas_profiling: Not installed
2023-05-25 02:37:47,813:INFO:  explainerdashboard: Not installed
2023-05-25 02:37:47,813:INFO:             autoviz: Not installed
2023-05-25 02:37:47,813:INFO:           fairlearn: Not installed
2023-05-25 02:37:47,813:INFO:             xgboost: Not installed
2023-05-25 02:37:47,813:INFO:            catboost: Not installed
2023-05-25 02:37:47,813:INFO:              kmodes: Not installed
2023-05-25 02:37:47,813:INFO:             mlxtend: Not installed
2023-05-25 02:37:47,813:INFO:       statsforecast: Not installed
2023-05-25 02:37:47,813:INFO:        tune_sklearn: Not installed
2023-05-25 02:37:47,813:INFO:                 ray: Not installed
2023-05-25 02:37:47,813:INFO:            hyperopt: Not installed
2023-05-25 02:37:47,813:INFO:              optuna: Not installed
2023-05-25 02:37:47,813:INFO:               skopt: Not installed
2023-05-25 02:37:47,813:INFO:              mlflow: Not installed
2023-05-25 02:37:47,813:INFO:              gradio: Not installed
2023-05-25 02:37:47,813:INFO:             fastapi: Not installed
2023-05-25 02:37:47,813:INFO:             uvicorn: Not installed
2023-05-25 02:37:47,813:INFO:              m2cgen: Not installed
2023-05-25 02:37:47,813:INFO:           evidently: Not installed
2023-05-25 02:37:47,813:INFO:               fugue: Not installed
2023-05-25 02:37:47,813:INFO:           streamlit: Not installed
2023-05-25 02:37:47,813:INFO:             prophet: Not installed
2023-05-25 02:37:47,813:INFO:None
2023-05-25 02:37:47,813:INFO:Set up data.
2023-05-25 02:37:48,728:INFO:Set up train/test split.
2023-05-25 02:37:49,376:INFO:Set up index.
2023-05-25 02:37:49,381:INFO:Set up folding strategy.
2023-05-25 02:37:49,381:INFO:Assigning column types.
2023-05-25 02:37:49,809:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 02:37:49,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,864:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 02:37:49,899:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,932:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 02:37:49,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,946:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,946:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 02:37:49,978:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:49,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:50,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:50,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:37:50,024:INFO:Preparing preprocessing pipeline...
2023-05-25 02:37:50,053:INFO:Set up label encoding.
2023-05-25 02:37:50,053:INFO:Set up simple imputation.
2023-05-25 02:37:50,184:INFO:Set up encoding of ordinal features.
2023-05-25 02:37:50,346:INFO:Set up encoding of categorical features.
2023-05-25 02:37:50,347:INFO:Set up feature normalization.
2023-05-25 02:37:50,376:INFO:Set up column name cleaning.
2023-05-25 02:37:55,600:INFO:Finished creating preprocessing pipeline.
2023-05-25 02:37:55,611:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-05-25 02:37:55,611:INFO:Creating final display dataframe.
2023-05-25 02:38:01,935:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                       (322424, 129)  
5                                       (322424, 156)  
6                                       (257939, 156)  
7                                        (64485, 156)  
8                                                   1  
9                                                 122  
10                                                  6  
11                                               7.9%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               0014  
2023-05-25 02:38:01,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:01,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:02,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:02,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:02,010:INFO:setup() successfully completed in 14.22s...............
2023-05-25 02:38:02,056:INFO:PyCaret RegressionExperiment
2023-05-25 02:38:02,057:INFO:Logging name: reg-default-name
2023-05-25 02:38:02,057:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 02:38:02,057:INFO:version 3.0.2
2023-05-25 02:38:02,057:INFO:Initializing setup()
2023-05-25 02:38:02,057:INFO:self.USI: 5c7f
2023-05-25 02:38:02,057:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 02:38:02,057:INFO:Checking environment
2023-05-25 02:38:02,057:INFO:python_version: 3.8.16
2023-05-25 02:38:02,057:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 02:38:02,057:INFO:machine: x86_64
2023-05-25 02:38:02,057:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 02:38:02,057:INFO:Memory: svmem(total=16378347520, available=1849839616, percent=88.7, used=13303681024, free=775626752, active=3118923776, inactive=11374997504, buffers=6799360, cached=2292240384, shared=871829504, slab=566099968)
2023-05-25 02:38:02,057:INFO:Physical Core: 10
2023-05-25 02:38:02,057:INFO:Logical Core: 16
2023-05-25 02:38:02,057:INFO:Checking libraries
2023-05-25 02:38:02,057:INFO:System:
2023-05-25 02:38:02,057:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 02:38:02,057:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 02:38:02,057:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 02:38:02,057:INFO:PyCaret required dependencies:
2023-05-25 02:38:02,057:INFO:                 pip: 23.0.1
2023-05-25 02:38:02,057:INFO:          setuptools: 66.0.0
2023-05-25 02:38:02,057:INFO:             pycaret: 3.0.2
2023-05-25 02:38:02,057:INFO:             IPython: 8.12.2
2023-05-25 02:38:02,057:INFO:          ipywidgets: 8.0.6
2023-05-25 02:38:02,057:INFO:                tqdm: 4.65.0
2023-05-25 02:38:02,057:INFO:               numpy: 1.23.5
2023-05-25 02:38:02,057:INFO:              pandas: 1.5.3
2023-05-25 02:38:02,057:INFO:              jinja2: 3.1.2
2023-05-25 02:38:02,057:INFO:               scipy: 1.10.1
2023-05-25 02:38:02,057:INFO:              joblib: 1.2.0
2023-05-25 02:38:02,057:INFO:             sklearn: 1.2.2
2023-05-25 02:38:02,057:INFO:                pyod: 1.0.9
2023-05-25 02:38:02,057:INFO:            imblearn: 0.10.1
2023-05-25 02:38:02,057:INFO:   category_encoders: 2.6.1
2023-05-25 02:38:02,057:INFO:            lightgbm: 3.3.5
2023-05-25 02:38:02,057:INFO:               numba: 0.57.0
2023-05-25 02:38:02,057:INFO:            requests: 2.29.0
2023-05-25 02:38:02,057:INFO:          matplotlib: 3.7.1
2023-05-25 02:38:02,057:INFO:          scikitplot: 0.3.7
2023-05-25 02:38:02,057:INFO:         yellowbrick: 1.5
2023-05-25 02:38:02,057:INFO:              plotly: 5.14.1
2023-05-25 02:38:02,057:INFO:             kaleido: 0.2.1
2023-05-25 02:38:02,057:INFO:         statsmodels: 0.14.0
2023-05-25 02:38:02,057:INFO:              sktime: 0.17.0
2023-05-25 02:38:02,057:INFO:               tbats: 1.1.3
2023-05-25 02:38:02,057:INFO:            pmdarima: 2.0.3
2023-05-25 02:38:02,057:INFO:              psutil: 5.9.0
2023-05-25 02:38:02,057:INFO:PyCaret optional dependencies:
2023-05-25 02:38:02,057:INFO:                shap: Not installed
2023-05-25 02:38:02,057:INFO:           interpret: Not installed
2023-05-25 02:38:02,057:INFO:                umap: Not installed
2023-05-25 02:38:02,057:INFO:    pandas_profiling: Not installed
2023-05-25 02:38:02,057:INFO:  explainerdashboard: Not installed
2023-05-25 02:38:02,057:INFO:             autoviz: Not installed
2023-05-25 02:38:02,057:INFO:           fairlearn: Not installed
2023-05-25 02:38:02,057:INFO:             xgboost: Not installed
2023-05-25 02:38:02,058:INFO:            catboost: Not installed
2023-05-25 02:38:02,058:INFO:              kmodes: Not installed
2023-05-25 02:38:02,058:INFO:             mlxtend: Not installed
2023-05-25 02:38:02,058:INFO:       statsforecast: Not installed
2023-05-25 02:38:02,058:INFO:        tune_sklearn: Not installed
2023-05-25 02:38:02,058:INFO:                 ray: Not installed
2023-05-25 02:38:02,058:INFO:            hyperopt: Not installed
2023-05-25 02:38:02,058:INFO:              optuna: Not installed
2023-05-25 02:38:02,058:INFO:               skopt: Not installed
2023-05-25 02:38:02,058:INFO:              mlflow: Not installed
2023-05-25 02:38:02,058:INFO:              gradio: Not installed
2023-05-25 02:38:02,058:INFO:             fastapi: Not installed
2023-05-25 02:38:02,058:INFO:             uvicorn: Not installed
2023-05-25 02:38:02,058:INFO:              m2cgen: Not installed
2023-05-25 02:38:02,058:INFO:           evidently: Not installed
2023-05-25 02:38:02,058:INFO:               fugue: Not installed
2023-05-25 02:38:02,058:INFO:           streamlit: Not installed
2023-05-25 02:38:02,058:INFO:             prophet: Not installed
2023-05-25 02:38:02,058:INFO:None
2023-05-25 02:38:02,058:INFO:Set up data.
2023-05-25 02:38:02,540:INFO:Set up train/test split.
2023-05-25 02:38:02,815:INFO:Set up index.
2023-05-25 02:38:02,819:INFO:Set up folding strategy.
2023-05-25 02:38:02,819:INFO:Assigning column types.
2023-05-25 02:38:03,042:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 02:38:03,042:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,045:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,246:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,247:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,249:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,251:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,459:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,460:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 02:38:03,462:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,464:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,664:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,666:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,841:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:03,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:03,861:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 02:38:03,864:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,041:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,060:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,064:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,245:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,265:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 02:38:04,445:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,668:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 02:38:04,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:04,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:04,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,049:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 02:38:05,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,069:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 02:38:05,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 02:38:05,472:INFO:Preparing preprocessing pipeline...
2023-05-25 02:38:05,472:INFO:Set up simple imputation.
2023-05-25 02:38:05,559:INFO:Set up encoding of ordinal features.
2023-05-25 02:38:05,634:INFO:Set up encoding of categorical features.
2023-05-25 02:38:05,634:INFO:Set up feature normalization.
2023-05-25 02:38:05,661:INFO:Set up column name cleaning.
2023-05-25 03:07:19,604:INFO:PyCaret RegressionExperiment
2023-05-25 03:07:19,605:INFO:Logging name: reg-default-name
2023-05-25 03:07:19,605:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 03:07:19,605:INFO:version 3.0.2
2023-05-25 03:07:19,605:INFO:Initializing setup()
2023-05-25 03:07:19,605:INFO:self.USI: 3051
2023-05-25 03:07:19,605:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 03:07:19,605:INFO:Checking environment
2023-05-25 03:07:19,605:INFO:python_version: 3.8.16
2023-05-25 03:07:19,605:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:07:19,605:INFO:machine: x86_64
2023-05-25 03:07:19,605:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:07:19,605:INFO:Memory: svmem(total=16378347520, available=2114965504, percent=87.1, used=12909862912, free=1146257408, active=3065782272, inactive=10940735488, buffers=15360000, cached=2306867200, shared=899506176, slab=565477376)
2023-05-25 03:07:19,605:INFO:Physical Core: 10
2023-05-25 03:07:19,605:INFO:Logical Core: 16
2023-05-25 03:07:19,605:INFO:Checking libraries
2023-05-25 03:07:19,605:INFO:System:
2023-05-25 03:07:19,605:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:07:19,605:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:07:19,605:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:07:19,605:INFO:PyCaret required dependencies:
2023-05-25 03:07:19,605:INFO:                 pip: 23.0.1
2023-05-25 03:07:19,605:INFO:          setuptools: 66.0.0
2023-05-25 03:07:19,605:INFO:             pycaret: 3.0.2
2023-05-25 03:07:19,605:INFO:             IPython: 8.12.2
2023-05-25 03:07:19,605:INFO:          ipywidgets: 8.0.6
2023-05-25 03:07:19,605:INFO:                tqdm: 4.65.0
2023-05-25 03:07:19,605:INFO:               numpy: 1.23.5
2023-05-25 03:07:19,606:INFO:              pandas: 1.5.3
2023-05-25 03:07:19,606:INFO:              jinja2: 3.1.2
2023-05-25 03:07:19,606:INFO:               scipy: 1.10.1
2023-05-25 03:07:19,606:INFO:              joblib: 1.2.0
2023-05-25 03:07:19,606:INFO:             sklearn: 1.2.2
2023-05-25 03:07:19,606:INFO:                pyod: 1.0.9
2023-05-25 03:07:19,606:INFO:            imblearn: 0.10.1
2023-05-25 03:07:19,606:INFO:   category_encoders: 2.6.1
2023-05-25 03:07:19,606:INFO:            lightgbm: 3.3.5
2023-05-25 03:07:19,606:INFO:               numba: 0.57.0
2023-05-25 03:07:19,606:INFO:            requests: 2.29.0
2023-05-25 03:07:19,606:INFO:          matplotlib: 3.7.1
2023-05-25 03:07:19,606:INFO:          scikitplot: 0.3.7
2023-05-25 03:07:19,606:INFO:         yellowbrick: 1.5
2023-05-25 03:07:19,606:INFO:              plotly: 5.14.1
2023-05-25 03:07:19,606:INFO:             kaleido: 0.2.1
2023-05-25 03:07:19,606:INFO:         statsmodels: 0.14.0
2023-05-25 03:07:19,606:INFO:              sktime: 0.17.0
2023-05-25 03:07:19,606:INFO:               tbats: 1.1.3
2023-05-25 03:07:19,606:INFO:            pmdarima: 2.0.3
2023-05-25 03:07:19,606:INFO:              psutil: 5.9.0
2023-05-25 03:07:19,606:INFO:PyCaret optional dependencies:
2023-05-25 03:07:19,606:INFO:                shap: Not installed
2023-05-25 03:07:19,606:INFO:           interpret: Not installed
2023-05-25 03:07:19,606:INFO:                umap: Not installed
2023-05-25 03:07:19,606:INFO:    pandas_profiling: Not installed
2023-05-25 03:07:19,606:INFO:  explainerdashboard: Not installed
2023-05-25 03:07:19,606:INFO:             autoviz: Not installed
2023-05-25 03:07:19,606:INFO:           fairlearn: Not installed
2023-05-25 03:07:19,606:INFO:             xgboost: Not installed
2023-05-25 03:07:19,606:INFO:            catboost: Not installed
2023-05-25 03:07:19,606:INFO:              kmodes: Not installed
2023-05-25 03:07:19,606:INFO:             mlxtend: Not installed
2023-05-25 03:07:19,606:INFO:       statsforecast: Not installed
2023-05-25 03:07:19,606:INFO:        tune_sklearn: Not installed
2023-05-25 03:07:19,606:INFO:                 ray: Not installed
2023-05-25 03:07:19,606:INFO:            hyperopt: Not installed
2023-05-25 03:07:19,606:INFO:              optuna: Not installed
2023-05-25 03:07:19,606:INFO:               skopt: Not installed
2023-05-25 03:07:19,606:INFO:              mlflow: Not installed
2023-05-25 03:07:19,606:INFO:              gradio: Not installed
2023-05-25 03:07:19,606:INFO:             fastapi: Not installed
2023-05-25 03:07:19,606:INFO:             uvicorn: Not installed
2023-05-25 03:07:19,606:INFO:              m2cgen: Not installed
2023-05-25 03:07:19,606:INFO:           evidently: Not installed
2023-05-25 03:07:19,606:INFO:               fugue: Not installed
2023-05-25 03:07:19,606:INFO:           streamlit: Not installed
2023-05-25 03:07:19,606:INFO:             prophet: Not installed
2023-05-25 03:07:19,606:INFO:None
2023-05-25 03:07:19,606:INFO:Set up data.
2023-05-25 03:07:20,079:INFO:Set up train/test split.
2023-05-25 03:07:20,380:INFO:Set up index.
2023-05-25 03:07:20,389:INFO:Set up folding strategy.
2023-05-25 03:07:20,389:INFO:Assigning column types.
2023-05-25 03:07:20,649:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:07:20,649:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,652:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,836:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:20,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:20,855:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,857:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:07:20,859:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,054:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,074:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 03:07:21,076:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,261:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,282:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,283:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,467:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,485:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,486:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 03:07:21,490:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,673:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,696:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,880:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,899:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:21,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:21,899:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 03:07:22,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,295:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,314:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:07:22,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:07:22,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,728:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 03:07:22,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:22,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:23,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:23,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:07:23,142:INFO:Preparing preprocessing pipeline...
2023-05-25 03:07:23,142:INFO:Set up simple imputation.
2023-05-25 03:07:23,238:INFO:Set up encoding of ordinal features.
2023-05-25 03:07:23,295:INFO:Set up encoding of categorical features.
2023-05-25 03:07:23,295:INFO:Set up feature normalization.
2023-05-25 03:07:23,324:INFO:Set up column name cleaning.
2023-05-25 03:18:41,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-25 03:18:41,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-25 03:18:42,082:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,257:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-25 03:18:42,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,437:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,563:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,791:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:42,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:43,025:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:43,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:43,482:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:43,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:43,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:44,251:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:44,893:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:45,019:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:45,158:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:45,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:45,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:45,549:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:45,861:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:46,190:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:46,503:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:46,818:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:46,969:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:47,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:47,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-25 03:18:47,959:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,090:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,208:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,816:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:48,934:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,046:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,158:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:49,941:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,052:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,288:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,400:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,528:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,638:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,748:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:50,982:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,093:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,548:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,662:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,885:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:51,995:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,221:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,330:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,553:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,654:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,755:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,858:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:52,986:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,087:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,201:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,314:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,539:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,769:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:53,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,454:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,690:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:54,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,237:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,351:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,683:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:55,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,026:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,363:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,591:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,703:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,814:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:56,926:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,375:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,599:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:57,947:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,183:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,298:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,410:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,635:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,745:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:58,984:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,099:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,215:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,331:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:18:59,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:19:00,031:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:19:00,140:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:19:00,265:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:19:00,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-25 03:19:52,829:INFO:PyCaret ClassificationExperiment
2023-05-25 03:19:52,829:INFO:Logging name: clf-default-name
2023-05-25 03:19:52,829:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 03:19:52,829:INFO:version 3.0.2
2023-05-25 03:19:52,829:INFO:Initializing setup()
2023-05-25 03:19:52,829:INFO:self.USI: 8cda
2023-05-25 03:19:52,829:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'is_multiclass', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'fix_imbalance', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param'}
2023-05-25 03:19:52,829:INFO:Checking environment
2023-05-25 03:19:52,829:INFO:python_version: 3.8.16
2023-05-25 03:19:52,829:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:19:52,829:INFO:machine: x86_64
2023-05-25 03:19:52,829:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:19:52,829:INFO:Memory: svmem(total=16378347520, available=2337087488, percent=85.7, used=12832710656, free=854315008, active=3635228672, inactive=10694094848, buffers=19353600, cached=2671968256, shared=855879680, slab=563896320)
2023-05-25 03:19:52,829:INFO:Physical Core: 10
2023-05-25 03:19:52,829:INFO:Logical Core: 16
2023-05-25 03:19:52,829:INFO:Checking libraries
2023-05-25 03:19:52,829:INFO:System:
2023-05-25 03:19:52,829:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:19:52,830:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:19:52,830:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:19:52,830:INFO:PyCaret required dependencies:
2023-05-25 03:19:52,830:INFO:                 pip: 23.0.1
2023-05-25 03:19:52,830:INFO:          setuptools: 66.0.0
2023-05-25 03:19:52,830:INFO:             pycaret: 3.0.2
2023-05-25 03:19:52,830:INFO:             IPython: 8.12.2
2023-05-25 03:19:52,830:INFO:          ipywidgets: 8.0.6
2023-05-25 03:19:52,830:INFO:                tqdm: 4.65.0
2023-05-25 03:19:52,830:INFO:               numpy: 1.23.5
2023-05-25 03:19:52,830:INFO:              pandas: 1.5.3
2023-05-25 03:19:52,830:INFO:              jinja2: 3.1.2
2023-05-25 03:19:52,830:INFO:               scipy: 1.10.1
2023-05-25 03:19:52,830:INFO:              joblib: 1.2.0
2023-05-25 03:19:52,830:INFO:             sklearn: 1.2.2
2023-05-25 03:19:52,830:INFO:                pyod: 1.0.9
2023-05-25 03:19:52,830:INFO:            imblearn: 0.10.1
2023-05-25 03:19:52,830:INFO:   category_encoders: 2.6.1
2023-05-25 03:19:52,830:INFO:            lightgbm: 3.3.5
2023-05-25 03:19:52,830:INFO:               numba: 0.57.0
2023-05-25 03:19:52,830:INFO:            requests: 2.29.0
2023-05-25 03:19:52,830:INFO:          matplotlib: 3.7.1
2023-05-25 03:19:52,830:INFO:          scikitplot: 0.3.7
2023-05-25 03:19:52,830:INFO:         yellowbrick: 1.5
2023-05-25 03:19:52,830:INFO:              plotly: 5.14.1
2023-05-25 03:19:52,830:INFO:             kaleido: 0.2.1
2023-05-25 03:19:52,830:INFO:         statsmodels: 0.14.0
2023-05-25 03:19:52,830:INFO:              sktime: 0.17.0
2023-05-25 03:19:52,830:INFO:               tbats: 1.1.3
2023-05-25 03:19:52,830:INFO:            pmdarima: 2.0.3
2023-05-25 03:19:52,830:INFO:              psutil: 5.9.0
2023-05-25 03:19:52,830:INFO:PyCaret optional dependencies:
2023-05-25 03:19:52,830:INFO:                shap: Not installed
2023-05-25 03:19:52,830:INFO:           interpret: Not installed
2023-05-25 03:19:52,830:INFO:                umap: Not installed
2023-05-25 03:19:52,830:INFO:    pandas_profiling: Not installed
2023-05-25 03:19:52,830:INFO:  explainerdashboard: Not installed
2023-05-25 03:19:52,830:INFO:             autoviz: Not installed
2023-05-25 03:19:52,830:INFO:           fairlearn: Not installed
2023-05-25 03:19:52,830:INFO:             xgboost: Not installed
2023-05-25 03:19:52,830:INFO:            catboost: Not installed
2023-05-25 03:19:52,830:INFO:              kmodes: Not installed
2023-05-25 03:19:52,830:INFO:             mlxtend: Not installed
2023-05-25 03:19:52,830:INFO:       statsforecast: Not installed
2023-05-25 03:19:52,830:INFO:        tune_sklearn: Not installed
2023-05-25 03:19:52,830:INFO:                 ray: Not installed
2023-05-25 03:19:52,830:INFO:            hyperopt: Not installed
2023-05-25 03:19:52,830:INFO:              optuna: Not installed
2023-05-25 03:19:52,830:INFO:               skopt: Not installed
2023-05-25 03:19:52,830:INFO:              mlflow: Not installed
2023-05-25 03:19:52,830:INFO:              gradio: Not installed
2023-05-25 03:19:52,830:INFO:             fastapi: Not installed
2023-05-25 03:19:52,830:INFO:             uvicorn: Not installed
2023-05-25 03:19:52,830:INFO:              m2cgen: Not installed
2023-05-25 03:19:52,830:INFO:           evidently: Not installed
2023-05-25 03:19:52,830:INFO:               fugue: Not installed
2023-05-25 03:19:52,830:INFO:           streamlit: Not installed
2023-05-25 03:19:52,830:INFO:             prophet: Not installed
2023-05-25 03:19:52,830:INFO:None
2023-05-25 03:19:52,830:INFO:Set up data.
2023-05-25 03:19:53,281:INFO:Set up train/test split.
2023-05-25 03:19:53,675:INFO:Set up index.
2023-05-25 03:19:53,678:INFO:Set up folding strategy.
2023-05-25 03:19:53,678:INFO:Assigning column types.
2023-05-25 03:19:53,903:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:19:53,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:19:53,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 03:19:53,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:53,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:53,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:19:53,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 03:19:53,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:53,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:53,965:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:19:53,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 03:19:53,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:53,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 03:19:54,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,027:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 03:19:54,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:19:54,089:INFO:Preparing preprocessing pipeline...
2023-05-25 03:19:54,116:INFO:Set up label encoding.
2023-05-25 03:19:54,116:INFO:Set up simple imputation.
2023-05-25 03:19:54,200:INFO:Set up encoding of ordinal features.
2023-05-25 03:19:54,254:INFO:Set up encoding of categorical features.
2023-05-25 03:19:54,254:INFO:Set up feature normalization.
2023-05-25 03:20:04,628:INFO:Finished creating preprocessing pipeline.
2023-05-25 03:20:04,638:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                 TransformerWrapper(exclude=None, include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-25 03:20:04,638:INFO:Creating final display dataframe.
2023-05-25 03:20:12,468:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Ordinal features   
9              Numeric features   
10         Categorical features   
11     Rows with missing values   
12                   Preprocess   
13              Imputation type   
14           Numeric imputation   
15       Categorical imputation   
16     Maximum one-hot encoding   
17              Encoding method   
18                    Normalize   
19             Normalize method   
20               Fold Generator   
21                  Fold Number   
22                     CPU Jobs   
23                      Use GPU   
24               Log Experiment   
25              Experiment Name   
26                          USI   

                                                Value  
0                                                  42  
1                                          damage_gra  
2                                          Multiclass  
3   Damaged: 0, Destroyed: 1, No visible damage: 2...  
4                                       (322424, 128)  
5                                       (322424, 155)  
6                                       (257939, 155)  
7                                        (64485, 155)  
8                                                   1  
9                                                 121  
10                                                  6  
11                                               7.9%  
12                                               True  
13                                             simple  
14                                               mean  
15                                               mode  
16                                                 25  
17                                               None  
18                                               True  
19                                             zscore  
20                                    StratifiedKFold  
21                                                 10  
22                                                 -1  
23                                              False  
24                                              False  
25                                   clf-default-name  
26                                               8cda  
2023-05-25 03:20:12,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:12,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:12,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:12,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:12,552:INFO:setup() successfully completed in 19.73s...............
2023-05-25 03:20:12,677:INFO:PyCaret RegressionExperiment
2023-05-25 03:20:12,677:INFO:Logging name: reg-default-name
2023-05-25 03:20:12,677:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 03:20:12,677:INFO:version 3.0.2
2023-05-25 03:20:12,677:INFO:Initializing setup()
2023-05-25 03:20:12,677:INFO:self.USI: 67b7
2023-05-25 03:20:12,677:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 03:20:12,677:INFO:Checking environment
2023-05-25 03:20:12,677:INFO:python_version: 3.8.16
2023-05-25 03:20:12,677:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:20:12,677:INFO:machine: x86_64
2023-05-25 03:20:12,677:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:20:12,677:INFO:Memory: svmem(total=16378347520, available=2425712640, percent=85.2, used=12756213760, free=1034428416, active=2969620480, inactive=11165749248, buffers=5582848, cached=2582122496, shared=841523200, slab=583426048)
2023-05-25 03:20:12,678:INFO:Physical Core: 10
2023-05-25 03:20:12,678:INFO:Logical Core: 16
2023-05-25 03:20:12,678:INFO:Checking libraries
2023-05-25 03:20:12,678:INFO:System:
2023-05-25 03:20:12,678:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:20:12,678:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:20:12,678:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:20:12,678:INFO:PyCaret required dependencies:
2023-05-25 03:20:12,678:INFO:                 pip: 23.0.1
2023-05-25 03:20:12,678:INFO:          setuptools: 66.0.0
2023-05-25 03:20:12,678:INFO:             pycaret: 3.0.2
2023-05-25 03:20:12,678:INFO:             IPython: 8.12.2
2023-05-25 03:20:12,678:INFO:          ipywidgets: 8.0.6
2023-05-25 03:20:12,678:INFO:                tqdm: 4.65.0
2023-05-25 03:20:12,678:INFO:               numpy: 1.23.5
2023-05-25 03:20:12,678:INFO:              pandas: 1.5.3
2023-05-25 03:20:12,678:INFO:              jinja2: 3.1.2
2023-05-25 03:20:12,678:INFO:               scipy: 1.10.1
2023-05-25 03:20:12,678:INFO:              joblib: 1.2.0
2023-05-25 03:20:12,678:INFO:             sklearn: 1.2.2
2023-05-25 03:20:12,678:INFO:                pyod: 1.0.9
2023-05-25 03:20:12,678:INFO:            imblearn: 0.10.1
2023-05-25 03:20:12,678:INFO:   category_encoders: 2.6.1
2023-05-25 03:20:12,678:INFO:            lightgbm: 3.3.5
2023-05-25 03:20:12,678:INFO:               numba: 0.57.0
2023-05-25 03:20:12,678:INFO:            requests: 2.29.0
2023-05-25 03:20:12,678:INFO:          matplotlib: 3.7.1
2023-05-25 03:20:12,678:INFO:          scikitplot: 0.3.7
2023-05-25 03:20:12,678:INFO:         yellowbrick: 1.5
2023-05-25 03:20:12,678:INFO:              plotly: 5.14.1
2023-05-25 03:20:12,678:INFO:             kaleido: 0.2.1
2023-05-25 03:20:12,678:INFO:         statsmodels: 0.14.0
2023-05-25 03:20:12,678:INFO:              sktime: 0.17.0
2023-05-25 03:20:12,678:INFO:               tbats: 1.1.3
2023-05-25 03:20:12,678:INFO:            pmdarima: 2.0.3
2023-05-25 03:20:12,678:INFO:              psutil: 5.9.0
2023-05-25 03:20:12,678:INFO:PyCaret optional dependencies:
2023-05-25 03:20:12,679:INFO:                shap: Not installed
2023-05-25 03:20:12,679:INFO:           interpret: Not installed
2023-05-25 03:20:12,679:INFO:                umap: Not installed
2023-05-25 03:20:12,679:INFO:    pandas_profiling: Not installed
2023-05-25 03:20:12,679:INFO:  explainerdashboard: Not installed
2023-05-25 03:20:12,679:INFO:             autoviz: Not installed
2023-05-25 03:20:12,679:INFO:           fairlearn: Not installed
2023-05-25 03:20:12,679:INFO:             xgboost: Not installed
2023-05-25 03:20:12,679:INFO:            catboost: Not installed
2023-05-25 03:20:12,679:INFO:              kmodes: Not installed
2023-05-25 03:20:12,679:INFO:             mlxtend: Not installed
2023-05-25 03:20:12,679:INFO:       statsforecast: Not installed
2023-05-25 03:20:12,679:INFO:        tune_sklearn: Not installed
2023-05-25 03:20:12,679:INFO:                 ray: Not installed
2023-05-25 03:20:12,679:INFO:            hyperopt: Not installed
2023-05-25 03:20:12,679:INFO:              optuna: Not installed
2023-05-25 03:20:12,679:INFO:               skopt: Not installed
2023-05-25 03:20:12,679:INFO:              mlflow: Not installed
2023-05-25 03:20:12,679:INFO:              gradio: Not installed
2023-05-25 03:20:12,679:INFO:             fastapi: Not installed
2023-05-25 03:20:12,679:INFO:             uvicorn: Not installed
2023-05-25 03:20:12,679:INFO:              m2cgen: Not installed
2023-05-25 03:20:12,679:INFO:           evidently: Not installed
2023-05-25 03:20:12,679:INFO:               fugue: Not installed
2023-05-25 03:20:12,679:INFO:           streamlit: Not installed
2023-05-25 03:20:12,679:INFO:             prophet: Not installed
2023-05-25 03:20:12,679:INFO:None
2023-05-25 03:20:12,679:INFO:Set up data.
2023-05-25 03:20:13,120:INFO:Set up train/test split.
2023-05-25 03:20:13,415:INFO:Set up index.
2023-05-25 03:20:13,419:INFO:Set up folding strategy.
2023-05-25 03:20:13,419:INFO:Assigning column types.
2023-05-25 03:20:13,646:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:20:13,646:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,648:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,650:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,856:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:13,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:13,856:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,858:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:20:13,860:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,086:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 03:20:14,088:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,090:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,271:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,289:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,291:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,494:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 03:20:14,497:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,679:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,701:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:14,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:14,901:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 03:20:15,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,102:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,287:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,306:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:20:15,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,695:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:20:15,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,714:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 03:20:15,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:15,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:16,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:16,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:20:16,125:INFO:Preparing preprocessing pipeline...
2023-05-25 03:20:16,125:INFO:Set up simple imputation.
2023-05-25 03:20:16,221:INFO:Set up encoding of ordinal features.
2023-05-25 03:20:16,277:INFO:Set up encoding of categorical features.
2023-05-25 03:20:16,278:INFO:Set up feature normalization.
2023-05-25 03:22:01,377:INFO:PyCaret RegressionExperiment
2023-05-25 03:22:01,377:INFO:Logging name: reg-default-name
2023-05-25 03:22:01,377:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 03:22:01,377:INFO:version 3.0.2
2023-05-25 03:22:01,377:INFO:Initializing setup()
2023-05-25 03:22:01,377:INFO:self.USI: c40b
2023-05-25 03:22:01,377:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 03:22:01,377:INFO:Checking environment
2023-05-25 03:22:01,377:INFO:python_version: 3.8.16
2023-05-25 03:22:01,377:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:22:01,377:INFO:machine: x86_64
2023-05-25 03:22:01,377:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:22:01,378:INFO:Memory: svmem(total=16378347520, available=1810776064, percent=88.9, used=13387862016, free=894787584, active=3080892416, inactive=11184123904, buffers=8593408, cached=2087104512, shared=826798080, slab=567402496)
2023-05-25 03:22:01,378:INFO:Physical Core: 10
2023-05-25 03:22:01,378:INFO:Logical Core: 16
2023-05-25 03:22:01,378:INFO:Checking libraries
2023-05-25 03:22:01,378:INFO:System:
2023-05-25 03:22:01,378:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:22:01,378:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:22:01,378:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:22:01,378:INFO:PyCaret required dependencies:
2023-05-25 03:22:01,378:INFO:                 pip: 23.0.1
2023-05-25 03:22:01,378:INFO:          setuptools: 66.0.0
2023-05-25 03:22:01,378:INFO:             pycaret: 3.0.2
2023-05-25 03:22:01,379:INFO:             IPython: 8.12.2
2023-05-25 03:22:01,379:INFO:          ipywidgets: 8.0.6
2023-05-25 03:22:01,379:INFO:                tqdm: 4.65.0
2023-05-25 03:22:01,379:INFO:               numpy: 1.23.5
2023-05-25 03:22:01,379:INFO:              pandas: 1.5.3
2023-05-25 03:22:01,379:INFO:              jinja2: 3.1.2
2023-05-25 03:22:01,379:INFO:               scipy: 1.10.1
2023-05-25 03:22:01,379:INFO:              joblib: 1.2.0
2023-05-25 03:22:01,379:INFO:             sklearn: 1.2.2
2023-05-25 03:22:01,379:INFO:                pyod: 1.0.9
2023-05-25 03:22:01,379:INFO:            imblearn: 0.10.1
2023-05-25 03:22:01,379:INFO:   category_encoders: 2.6.1
2023-05-25 03:22:01,379:INFO:            lightgbm: 3.3.5
2023-05-25 03:22:01,379:INFO:               numba: 0.57.0
2023-05-25 03:22:01,379:INFO:            requests: 2.29.0
2023-05-25 03:22:01,379:INFO:          matplotlib: 3.7.1
2023-05-25 03:22:01,379:INFO:          scikitplot: 0.3.7
2023-05-25 03:22:01,379:INFO:         yellowbrick: 1.5
2023-05-25 03:22:01,379:INFO:              plotly: 5.14.1
2023-05-25 03:22:01,379:INFO:             kaleido: 0.2.1
2023-05-25 03:22:01,379:INFO:         statsmodels: 0.14.0
2023-05-25 03:22:01,379:INFO:              sktime: 0.17.0
2023-05-25 03:22:01,379:INFO:               tbats: 1.1.3
2023-05-25 03:22:01,379:INFO:            pmdarima: 2.0.3
2023-05-25 03:22:01,379:INFO:              psutil: 5.9.0
2023-05-25 03:22:01,379:INFO:PyCaret optional dependencies:
2023-05-25 03:22:01,379:INFO:                shap: Not installed
2023-05-25 03:22:01,379:INFO:           interpret: Not installed
2023-05-25 03:22:01,379:INFO:                umap: Not installed
2023-05-25 03:22:01,379:INFO:    pandas_profiling: Not installed
2023-05-25 03:22:01,379:INFO:  explainerdashboard: Not installed
2023-05-25 03:22:01,379:INFO:             autoviz: Not installed
2023-05-25 03:22:01,379:INFO:           fairlearn: Not installed
2023-05-25 03:22:01,379:INFO:             xgboost: Not installed
2023-05-25 03:22:01,379:INFO:            catboost: Not installed
2023-05-25 03:22:01,379:INFO:              kmodes: Not installed
2023-05-25 03:22:01,379:INFO:             mlxtend: Not installed
2023-05-25 03:22:01,379:INFO:       statsforecast: Not installed
2023-05-25 03:22:01,379:INFO:        tune_sklearn: Not installed
2023-05-25 03:22:01,379:INFO:                 ray: Not installed
2023-05-25 03:22:01,379:INFO:            hyperopt: Not installed
2023-05-25 03:22:01,380:INFO:              optuna: Not installed
2023-05-25 03:22:01,380:INFO:               skopt: Not installed
2023-05-25 03:22:01,380:INFO:              mlflow: Not installed
2023-05-25 03:22:01,380:INFO:              gradio: Not installed
2023-05-25 03:22:01,380:INFO:             fastapi: Not installed
2023-05-25 03:22:01,380:INFO:             uvicorn: Not installed
2023-05-25 03:22:01,380:INFO:              m2cgen: Not installed
2023-05-25 03:22:01,380:INFO:           evidently: Not installed
2023-05-25 03:22:01,380:INFO:               fugue: Not installed
2023-05-25 03:22:01,380:INFO:           streamlit: Not installed
2023-05-25 03:22:01,380:INFO:             prophet: Not installed
2023-05-25 03:22:01,380:INFO:None
2023-05-25 03:22:01,380:INFO:Set up data.
2023-05-25 03:22:01,828:INFO:Set up train/test split.
2023-05-25 03:22:02,160:INFO:Set up index.
2023-05-25 03:22:02,168:INFO:Set up folding strategy.
2023-05-25 03:22:02,169:INFO:Assigning column types.
2023-05-25 03:22:02,401:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:22:02,402:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,404:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,406:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,587:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:02,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:02,606:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,608:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,610:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:02,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:02,810:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 03:22:02,812:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,814:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:02,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,017:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,019:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,220:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 03:22:03,224:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,406:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,629:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,629:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 03:22:03,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:03,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:03,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:04,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:22:04,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,043:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:22:04,229:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:04,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,434:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:22:04,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,453:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 03:22:04,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:22:04,865:INFO:Preparing preprocessing pipeline...
2023-05-25 03:22:04,865:INFO:Set up simple imputation.
2023-05-25 03:22:04,952:INFO:Set up encoding of ordinal features.
2023-05-25 03:22:05,007:INFO:Set up encoding of categorical features.
2023-05-25 03:22:05,007:INFO:Set up feature normalization.
2023-05-25 03:24:19,516:INFO:PyCaret RegressionExperiment
2023-05-25 03:24:19,516:INFO:Logging name: reg-default-name
2023-05-25 03:24:19,516:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 03:24:19,516:INFO:version 3.0.2
2023-05-25 03:24:19,516:INFO:Initializing setup()
2023-05-25 03:24:19,516:INFO:self.USI: deb0
2023-05-25 03:24:19,517:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 03:24:19,517:INFO:Checking environment
2023-05-25 03:24:19,517:INFO:python_version: 3.8.16
2023-05-25 03:24:19,517:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:24:19,517:INFO:machine: x86_64
2023-05-25 03:24:19,517:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:24:19,517:INFO:Memory: svmem(total=16378347520, available=1370542080, percent=91.6, used=13813796864, free=636383232, active=2944700416, inactive=11605274624, buffers=6606848, cached=1921560576, shared=840773632, slab=564994048)
2023-05-25 03:24:19,517:INFO:Physical Core: 10
2023-05-25 03:24:19,517:INFO:Logical Core: 16
2023-05-25 03:24:19,517:INFO:Checking libraries
2023-05-25 03:24:19,517:INFO:System:
2023-05-25 03:24:19,517:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:24:19,517:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:24:19,517:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:24:19,517:INFO:PyCaret required dependencies:
2023-05-25 03:24:19,517:INFO:                 pip: 23.0.1
2023-05-25 03:24:19,517:INFO:          setuptools: 66.0.0
2023-05-25 03:24:19,517:INFO:             pycaret: 3.0.2
2023-05-25 03:24:19,517:INFO:             IPython: 8.12.2
2023-05-25 03:24:19,517:INFO:          ipywidgets: 8.0.6
2023-05-25 03:24:19,517:INFO:                tqdm: 4.65.0
2023-05-25 03:24:19,517:INFO:               numpy: 1.23.5
2023-05-25 03:24:19,517:INFO:              pandas: 1.5.3
2023-05-25 03:24:19,517:INFO:              jinja2: 3.1.2
2023-05-25 03:24:19,517:INFO:               scipy: 1.10.1
2023-05-25 03:24:19,517:INFO:              joblib: 1.2.0
2023-05-25 03:24:19,517:INFO:             sklearn: 1.2.2
2023-05-25 03:24:19,517:INFO:                pyod: 1.0.9
2023-05-25 03:24:19,517:INFO:            imblearn: 0.10.1
2023-05-25 03:24:19,517:INFO:   category_encoders: 2.6.1
2023-05-25 03:24:19,517:INFO:            lightgbm: 3.3.5
2023-05-25 03:24:19,517:INFO:               numba: 0.57.0
2023-05-25 03:24:19,517:INFO:            requests: 2.29.0
2023-05-25 03:24:19,517:INFO:          matplotlib: 3.7.1
2023-05-25 03:24:19,517:INFO:          scikitplot: 0.3.7
2023-05-25 03:24:19,517:INFO:         yellowbrick: 1.5
2023-05-25 03:24:19,517:INFO:              plotly: 5.14.1
2023-05-25 03:24:19,517:INFO:             kaleido: 0.2.1
2023-05-25 03:24:19,517:INFO:         statsmodels: 0.14.0
2023-05-25 03:24:19,517:INFO:              sktime: 0.17.0
2023-05-25 03:24:19,517:INFO:               tbats: 1.1.3
2023-05-25 03:24:19,517:INFO:            pmdarima: 2.0.3
2023-05-25 03:24:19,517:INFO:              psutil: 5.9.0
2023-05-25 03:24:19,517:INFO:PyCaret optional dependencies:
2023-05-25 03:24:19,517:INFO:                shap: Not installed
2023-05-25 03:24:19,517:INFO:           interpret: Not installed
2023-05-25 03:24:19,517:INFO:                umap: Not installed
2023-05-25 03:24:19,517:INFO:    pandas_profiling: Not installed
2023-05-25 03:24:19,517:INFO:  explainerdashboard: Not installed
2023-05-25 03:24:19,517:INFO:             autoviz: Not installed
2023-05-25 03:24:19,517:INFO:           fairlearn: Not installed
2023-05-25 03:24:19,517:INFO:             xgboost: Not installed
2023-05-25 03:24:19,517:INFO:            catboost: Not installed
2023-05-25 03:24:19,518:INFO:              kmodes: Not installed
2023-05-25 03:24:19,518:INFO:             mlxtend: Not installed
2023-05-25 03:24:19,518:INFO:       statsforecast: Not installed
2023-05-25 03:24:19,518:INFO:        tune_sklearn: Not installed
2023-05-25 03:24:19,518:INFO:                 ray: Not installed
2023-05-25 03:24:19,518:INFO:            hyperopt: Not installed
2023-05-25 03:24:19,518:INFO:              optuna: Not installed
2023-05-25 03:24:19,518:INFO:               skopt: Not installed
2023-05-25 03:24:19,518:INFO:              mlflow: Not installed
2023-05-25 03:24:19,518:INFO:              gradio: Not installed
2023-05-25 03:24:19,518:INFO:             fastapi: Not installed
2023-05-25 03:24:19,518:INFO:             uvicorn: Not installed
2023-05-25 03:24:19,518:INFO:              m2cgen: Not installed
2023-05-25 03:24:19,518:INFO:           evidently: Not installed
2023-05-25 03:24:19,518:INFO:               fugue: Not installed
2023-05-25 03:24:19,518:INFO:           streamlit: Not installed
2023-05-25 03:24:19,518:INFO:             prophet: Not installed
2023-05-25 03:24:19,518:INFO:None
2023-05-25 03:24:19,518:INFO:Set up data.
2023-05-25 03:24:20,279:INFO:Set up train/test split.
2023-05-25 03:24:20,691:INFO:Set up index.
2023-05-25 03:24:20,700:INFO:Set up folding strategy.
2023-05-25 03:24:20,700:INFO:Assigning column types.
2023-05-25 03:24:20,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:24:20,973:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:24:20,987:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:20,989:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,224:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,226:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,444:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 03:24:21,446:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,448:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,668:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,861:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:21,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:21,880:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 03:24:21,884:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,087:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,287:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 03:24:22,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,724:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,724:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:24:22,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:22,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:22,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:23,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,148:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 03:24:23,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:23,548:INFO:Preparing preprocessing pipeline...
2023-05-25 03:24:23,548:INFO:Set up simple imputation.
2023-05-25 03:24:23,643:INFO:Set up encoding of ordinal features.
2023-05-25 03:24:23,736:INFO:Set up encoding of categorical features.
2023-05-25 03:24:23,736:INFO:Set up feature normalization.
2023-05-25 03:24:35,394:INFO:Finished creating preprocessing pipeline.
2023-05-25 03:24:35,404:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour_fource',
                                             'unemployment', 'agricultural',
                                             'life_time', 'hb_per100000',
                                             'fertility', 'hh_size',
                                             'nearest_fault_...
                 TransformerWrapper(exclude=None, include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-25 03:24:35,404:INFO:Creating final display dataframe.
2023-05-25 03:24:43,480:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (322424, 128)
4        Transformed data shape     (322424, 155)
5   Transformed train set shape     (257939, 155)
6    Transformed test set shape      (64485, 155)
7              Ordinal features                 1
8              Numeric features               121
9          Categorical features                 6
10     Rows with missing values              7.9%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              deb0
2023-05-25 03:24:43,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:43,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:43,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:43,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:43,911:INFO:setup() successfully completed in 24.43s...............
2023-05-25 03:24:48,740:INFO:PyCaret RegressionExperiment
2023-05-25 03:24:48,740:INFO:Logging name: reg-default-name
2023-05-25 03:24:48,740:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 03:24:48,740:INFO:version 3.0.2
2023-05-25 03:24:48,741:INFO:Initializing setup()
2023-05-25 03:24:48,741:INFO:self.USI: 88a0
2023-05-25 03:24:48,741:INFO:self._variable_keys: {'_ml_usecase', 'idx', 'X', '_available_plots', 'memory', 'target_param', 'gpu_param', 'y_test', 'X_test', 'fold_shuffle_param', 'data', 'html_param', 'y_train', 'y', 'fold_groups_param', 'USI', 'exp_id', 'fold_generator', 'logging_param', 'exp_name_log', 'seed', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'n_jobs_param', 'transform_target_param'}
2023-05-25 03:24:48,741:INFO:Checking environment
2023-05-25 03:24:48,741:INFO:python_version: 3.8.16
2023-05-25 03:24:48,741:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 03:24:48,741:INFO:machine: x86_64
2023-05-25 03:24:48,741:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:24:48,741:INFO:Memory: svmem(total=16378347520, available=1969160192, percent=88.0, used=13381660672, free=797474816, active=2584395776, inactive=11753603072, buffers=12304384, cached=2186907648, shared=674770944, slab=569737216)
2023-05-25 03:24:48,744:INFO:Physical Core: 10
2023-05-25 03:24:48,744:INFO:Logical Core: 16
2023-05-25 03:24:48,744:INFO:Checking libraries
2023-05-25 03:24:48,744:INFO:System:
2023-05-25 03:24:48,744:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 03:24:48,744:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 03:24:48,744:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 03:24:48,744:INFO:PyCaret required dependencies:
2023-05-25 03:24:48,744:INFO:                 pip: 23.0.1
2023-05-25 03:24:48,744:INFO:          setuptools: 66.0.0
2023-05-25 03:24:48,744:INFO:             pycaret: 3.0.2
2023-05-25 03:24:48,744:INFO:             IPython: 8.12.2
2023-05-25 03:24:48,744:INFO:          ipywidgets: 8.0.6
2023-05-25 03:24:48,744:INFO:                tqdm: 4.65.0
2023-05-25 03:24:48,744:INFO:               numpy: 1.23.5
2023-05-25 03:24:48,744:INFO:              pandas: 1.5.3
2023-05-25 03:24:48,744:INFO:              jinja2: 3.1.2
2023-05-25 03:24:48,744:INFO:               scipy: 1.10.1
2023-05-25 03:24:48,744:INFO:              joblib: 1.2.0
2023-05-25 03:24:48,744:INFO:             sklearn: 1.2.2
2023-05-25 03:24:48,744:INFO:                pyod: 1.0.9
2023-05-25 03:24:48,744:INFO:            imblearn: 0.10.1
2023-05-25 03:24:48,744:INFO:   category_encoders: 2.6.1
2023-05-25 03:24:48,744:INFO:            lightgbm: 3.3.5
2023-05-25 03:24:48,744:INFO:               numba: 0.57.0
2023-05-25 03:24:48,745:INFO:            requests: 2.29.0
2023-05-25 03:24:48,745:INFO:          matplotlib: 3.7.1
2023-05-25 03:24:48,745:INFO:          scikitplot: 0.3.7
2023-05-25 03:24:48,745:INFO:         yellowbrick: 1.5
2023-05-25 03:24:48,745:INFO:              plotly: 5.14.1
2023-05-25 03:24:48,745:INFO:             kaleido: 0.2.1
2023-05-25 03:24:48,745:INFO:         statsmodels: 0.14.0
2023-05-25 03:24:48,745:INFO:              sktime: 0.17.0
2023-05-25 03:24:48,745:INFO:               tbats: 1.1.3
2023-05-25 03:24:48,745:INFO:            pmdarima: 2.0.3
2023-05-25 03:24:48,745:INFO:              psutil: 5.9.0
2023-05-25 03:24:48,745:INFO:PyCaret optional dependencies:
2023-05-25 03:24:48,745:INFO:                shap: Not installed
2023-05-25 03:24:48,745:INFO:           interpret: Not installed
2023-05-25 03:24:48,745:INFO:                umap: Not installed
2023-05-25 03:24:48,745:INFO:    pandas_profiling: Not installed
2023-05-25 03:24:48,745:INFO:  explainerdashboard: Not installed
2023-05-25 03:24:48,745:INFO:             autoviz: Not installed
2023-05-25 03:24:48,745:INFO:           fairlearn: Not installed
2023-05-25 03:24:48,745:INFO:             xgboost: Not installed
2023-05-25 03:24:48,745:INFO:            catboost: Not installed
2023-05-25 03:24:48,745:INFO:              kmodes: Not installed
2023-05-25 03:24:48,745:INFO:             mlxtend: Not installed
2023-05-25 03:24:48,745:INFO:       statsforecast: Not installed
2023-05-25 03:24:48,745:INFO:        tune_sklearn: Not installed
2023-05-25 03:24:48,745:INFO:                 ray: Not installed
2023-05-25 03:24:48,745:INFO:            hyperopt: Not installed
2023-05-25 03:24:48,745:INFO:              optuna: Not installed
2023-05-25 03:24:48,745:INFO:               skopt: Not installed
2023-05-25 03:24:48,745:INFO:              mlflow: Not installed
2023-05-25 03:24:48,745:INFO:              gradio: Not installed
2023-05-25 03:24:48,745:INFO:             fastapi: Not installed
2023-05-25 03:24:48,745:INFO:             uvicorn: Not installed
2023-05-25 03:24:48,745:INFO:              m2cgen: Not installed
2023-05-25 03:24:48,745:INFO:           evidently: Not installed
2023-05-25 03:24:48,745:INFO:               fugue: Not installed
2023-05-25 03:24:48,745:INFO:           streamlit: Not installed
2023-05-25 03:24:48,746:INFO:             prophet: Not installed
2023-05-25 03:24:48,746:INFO:None
2023-05-25 03:24:48,746:INFO:Set up data.
2023-05-25 03:24:49,228:INFO:Set up train/test split.
2023-05-25 03:24:49,544:INFO:Set up index.
2023-05-25 03:24:49,551:INFO:Set up folding strategy.
2023-05-25 03:24:49,551:INFO:Assigning column types.
2023-05-25 03:24:49,837:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 03:24:49,837:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:24:49,839:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:49,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,039:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,060:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,062:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,064:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,291:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 03:24:50,293:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,295:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,519:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,521:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,523:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,744:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,745:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 03:24:50,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:50,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:50,953:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,133:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,153:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 03:24:51,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,545:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,564:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 03:24:51,748:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,766:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,965:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 03:24:51,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:51,984:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 03:24:52,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:52,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:52,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:52,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:24:52,395:INFO:Preparing preprocessing pipeline...
2023-05-25 03:24:52,395:INFO:Set up simple imputation.
2023-05-25 03:24:52,479:INFO:Set up encoding of ordinal features.
2023-05-25 03:24:52,535:INFO:Set up encoding of categorical features.
2023-05-25 03:24:52,535:INFO:Set up feature normalization.
2023-05-25 03:25:05,654:INFO:Finished creating preprocessing pipeline.
2023-05-25 03:25:05,677:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour_fource',
                                             'unemployment', 'agricultural',
                                             'life_time', 'hb_per100000',
                                             'fertility', 'hh_size',
                                             'nearest_fault_...
                 TransformerWrapper(exclude=None, include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-25 03:25:05,677:INFO:Creating final display dataframe.
2023-05-25 03:25:20,857:INFO:Setup _display_container:                     Description             Value
0                    Session id               235
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (322424, 128)
4        Transformed data shape     (322424, 155)
5   Transformed train set shape     (257939, 155)
6    Transformed test set shape      (64485, 155)
7              Ordinal features                 1
8              Numeric features               121
9          Categorical features                 6
10     Rows with missing values              7.9%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              88a0
2023-05-25 03:25:21,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:25:21,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:25:21,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:25:21,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 03:25:21,290:INFO:setup() successfully completed in 33.1s...............
2023-05-25 03:25:21,291:INFO:Initializing create_model()
2023-05-25 03:25:21,291:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f3739669100>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 03:25:21,291:INFO:Checking exceptions
2023-05-25 03:25:21,302:INFO:Importing libraries
2023-05-25 03:25:21,302:INFO:Copying training dataset
2023-05-25 03:25:21,549:INFO:Defining folds
2023-05-25 03:25:21,549:INFO:Declaring metric variables
2023-05-25 03:25:21,552:INFO:Importing untrained model
2023-05-25 03:25:21,554:INFO:Ridge Regression Imported successfully
2023-05-25 03:25:21,557:INFO:Starting cross validation
2023-05-25 03:25:21,559:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 03:25:35,106:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,157:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,165:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,171:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,187:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:35,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:38,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-25 03:25:39,078:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:42,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 03:25:45,358:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-25 03:25:46,933:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 16:03:23,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:03:23,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:03:23,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:03:23,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:03:23,560:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-25 16:03:49,400:INFO:PyCaret ClassificationExperiment
2023-05-25 16:03:49,400:INFO:Logging name: clf-default-name
2023-05-25 16:03:49,400:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 16:03:49,400:INFO:version 3.0.2
2023-05-25 16:03:49,400:INFO:Initializing setup()
2023-05-25 16:03:49,400:INFO:self.USI: 0999
2023-05-25 16:03:49,400:INFO:self._variable_keys: {'gpu_n_jobs_param', 'X_test', 'X_train', 'fix_imbalance', 'n_jobs_param', 'data', 'y', '_available_plots', 'is_multiclass', '_ml_usecase', 'USI', 'fold_generator', 'log_plots_param', 'html_param', 'idx', 'y_test', 'y_train', 'exp_id', 'fold_groups_param', 'exp_name_log', 'memory', 'gpu_param', 'X', 'seed', 'target_param', 'fold_shuffle_param', 'logging_param', 'pipeline'}
2023-05-25 16:03:49,400:INFO:Checking environment
2023-05-25 16:03:49,400:INFO:python_version: 3.8.16
2023-05-25 16:03:49,400:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:03:49,400:INFO:machine: x86_64
2023-05-25 16:03:49,400:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:03:49,400:INFO:Memory: svmem(total=16378347520, available=9859256320, percent=39.8, used=5358657536, free=1927393280, active=2254778368, inactive=10791878656, buffers=217128960, cached=8875167744, shared=772894720, slab=715005952)
2023-05-25 16:03:49,401:INFO:Physical Core: 10
2023-05-25 16:03:49,401:INFO:Logical Core: 16
2023-05-25 16:03:49,401:INFO:Checking libraries
2023-05-25 16:03:49,401:INFO:System:
2023-05-25 16:03:49,401:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:03:49,401:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:03:49,401:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:03:49,401:INFO:PyCaret required dependencies:
2023-05-25 16:03:49,401:INFO:                 pip: 23.0.1
2023-05-25 16:03:49,401:INFO:          setuptools: 66.0.0
2023-05-25 16:03:49,401:INFO:             pycaret: 3.0.2
2023-05-25 16:03:49,401:INFO:             IPython: 8.12.2
2023-05-25 16:03:49,401:INFO:          ipywidgets: 8.0.6
2023-05-25 16:03:49,401:INFO:                tqdm: 4.65.0
2023-05-25 16:03:49,401:INFO:               numpy: 1.23.5
2023-05-25 16:03:49,401:INFO:              pandas: 1.5.3
2023-05-25 16:03:49,401:INFO:              jinja2: 3.1.2
2023-05-25 16:03:49,401:INFO:               scipy: 1.10.1
2023-05-25 16:03:49,401:INFO:              joblib: 1.2.0
2023-05-25 16:03:49,401:INFO:             sklearn: 1.2.2
2023-05-25 16:03:49,401:INFO:                pyod: 1.0.9
2023-05-25 16:03:49,401:INFO:            imblearn: 0.10.1
2023-05-25 16:03:49,401:INFO:   category_encoders: 2.6.1
2023-05-25 16:03:49,401:INFO:            lightgbm: 3.3.5
2023-05-25 16:03:49,401:INFO:               numba: 0.57.0
2023-05-25 16:03:49,401:INFO:            requests: 2.29.0
2023-05-25 16:03:49,401:INFO:          matplotlib: 3.7.1
2023-05-25 16:03:49,401:INFO:          scikitplot: 0.3.7
2023-05-25 16:03:49,401:INFO:         yellowbrick: 1.5
2023-05-25 16:03:49,401:INFO:              plotly: 5.14.1
2023-05-25 16:03:49,401:INFO:             kaleido: 0.2.1
2023-05-25 16:03:49,401:INFO:         statsmodels: 0.14.0
2023-05-25 16:03:49,401:INFO:              sktime: 0.17.0
2023-05-25 16:03:49,401:INFO:               tbats: 1.1.3
2023-05-25 16:03:49,401:INFO:            pmdarima: 2.0.3
2023-05-25 16:03:49,401:INFO:              psutil: 5.9.0
2023-05-25 16:03:49,401:INFO:PyCaret optional dependencies:
2023-05-25 16:03:49,409:INFO:                shap: Not installed
2023-05-25 16:03:49,409:INFO:           interpret: Not installed
2023-05-25 16:03:49,409:INFO:                umap: Not installed
2023-05-25 16:03:49,409:INFO:    pandas_profiling: Not installed
2023-05-25 16:03:49,409:INFO:  explainerdashboard: Not installed
2023-05-25 16:03:49,409:INFO:             autoviz: Not installed
2023-05-25 16:03:49,409:INFO:           fairlearn: Not installed
2023-05-25 16:03:49,409:INFO:             xgboost: Not installed
2023-05-25 16:03:49,409:INFO:            catboost: Not installed
2023-05-25 16:03:49,409:INFO:              kmodes: Not installed
2023-05-25 16:03:49,409:INFO:             mlxtend: Not installed
2023-05-25 16:03:49,409:INFO:       statsforecast: Not installed
2023-05-25 16:03:49,409:INFO:        tune_sklearn: Not installed
2023-05-25 16:03:49,409:INFO:                 ray: Not installed
2023-05-25 16:03:49,409:INFO:            hyperopt: Not installed
2023-05-25 16:03:49,409:INFO:              optuna: Not installed
2023-05-25 16:03:49,409:INFO:               skopt: Not installed
2023-05-25 16:03:49,409:INFO:              mlflow: Not installed
2023-05-25 16:03:49,409:INFO:              gradio: Not installed
2023-05-25 16:03:49,409:INFO:             fastapi: Not installed
2023-05-25 16:03:49,409:INFO:             uvicorn: Not installed
2023-05-25 16:03:49,409:INFO:              m2cgen: Not installed
2023-05-25 16:03:49,409:INFO:           evidently: Not installed
2023-05-25 16:03:49,409:INFO:               fugue: Not installed
2023-05-25 16:03:49,409:INFO:           streamlit: Not installed
2023-05-25 16:03:49,409:INFO:             prophet: Not installed
2023-05-25 16:03:49,409:INFO:None
2023-05-25 16:03:49,409:INFO:Set up data.
2023-05-25 16:03:49,809:INFO:Set up train/test split.
2023-05-25 16:03:50,066:INFO:Set up index.
2023-05-25 16:03:50,070:INFO:Set up folding strategy.
2023-05-25 16:03:50,070:INFO:Assigning column types.
2023-05-25 16:03:50,236:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:03:50,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,320:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:03:50,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:03:50,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,384:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 16:03:50,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:03:50,447:INFO:Preparing preprocessing pipeline...
2023-05-25 16:03:50,475:INFO:Set up label encoding.
2023-05-25 16:03:50,475:INFO:Set up simple imputation.
2023-05-25 16:03:50,528:INFO:Set up encoding of ordinal features.
2023-05-25 16:03:50,581:INFO:Set up encoding of categorical features.
2023-05-25 16:03:50,581:INFO:Set up feature normalization.
2023-05-25 16:03:56,369:INFO:Finished creating preprocessing pipeline.
2023-05-25 16:03:56,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour...
                 TransformerWrapper(exclude=None, include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-25 16:03:56,379:INFO:Creating final display dataframe.
2023-05-25 16:04:00,812:INFO:Setup _display_container:                     Description                   Value
0                    Session id                      42
1                        Target              damage_gra
2                   Target type              Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3
4           Original data shape           (322424, 128)
5        Transformed data shape           (322424, 155)
6   Transformed train set shape           (257939, 155)
7    Transformed test set shape            (64485, 155)
8              Ordinal features                       1
9              Numeric features                     121
10         Categorical features                       6
11     Rows with missing values                    7.9%
12                   Preprocess                    True
13              Imputation type                  simple
14           Numeric imputation                    mean
15       Categorical imputation                    mode
16     Maximum one-hot encoding                      25
17              Encoding method                    None
18                    Normalize                    True
19             Normalize method                  zscore
20               Fold Generator         StratifiedKFold
21                  Fold Number                      10
22                     CPU Jobs                      -1
23                      Use GPU                   False
24               Log Experiment                   False
25              Experiment Name        clf-default-name
26                          USI                    0999
2023-05-25 16:04:00,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:00,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:00,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:00,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:00,887:INFO:setup() successfully completed in 11.49s...............
2023-05-25 16:04:00,936:INFO:PyCaret RegressionExperiment
2023-05-25 16:04:00,937:INFO:Logging name: reg-default-name
2023-05-25 16:04:00,937:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 16:04:00,937:INFO:version 3.0.2
2023-05-25 16:04:00,937:INFO:Initializing setup()
2023-05-25 16:04:00,937:INFO:self.USI: ceff
2023-05-25 16:04:00,937:INFO:self._variable_keys: {'gpu_n_jobs_param', 'X_test', 'X_train', 'n_jobs_param', 'data', 'y', '_available_plots', '_ml_usecase', 'USI', 'fold_generator', 'transform_target_param', 'log_plots_param', 'html_param', 'idx', 'y_test', 'y_train', 'exp_id', 'fold_groups_param', 'exp_name_log', 'memory', 'gpu_param', 'X', 'seed', 'target_param', 'fold_shuffle_param', 'logging_param', 'pipeline'}
2023-05-25 16:04:00,937:INFO:Checking environment
2023-05-25 16:04:00,937:INFO:python_version: 3.8.16
2023-05-25 16:04:00,937:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:04:00,937:INFO:machine: x86_64
2023-05-25 16:04:00,937:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:04:00,937:INFO:Memory: svmem(total=16378347520, available=9774215168, percent=40.3, used=5440348160, free=837062656, active=2386243584, inactive=11726938112, buffers=216821760, cached=9884114944, shared=813989888, slab=747835392)
2023-05-25 16:04:00,937:INFO:Physical Core: 10
2023-05-25 16:04:00,937:INFO:Logical Core: 16
2023-05-25 16:04:00,937:INFO:Checking libraries
2023-05-25 16:04:00,937:INFO:System:
2023-05-25 16:04:00,937:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:04:00,937:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:04:00,937:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:04:00,937:INFO:PyCaret required dependencies:
2023-05-25 16:04:00,937:INFO:                 pip: 23.0.1
2023-05-25 16:04:00,937:INFO:          setuptools: 66.0.0
2023-05-25 16:04:00,937:INFO:             pycaret: 3.0.2
2023-05-25 16:04:00,937:INFO:             IPython: 8.12.2
2023-05-25 16:04:00,937:INFO:          ipywidgets: 8.0.6
2023-05-25 16:04:00,937:INFO:                tqdm: 4.65.0
2023-05-25 16:04:00,937:INFO:               numpy: 1.23.5
2023-05-25 16:04:00,937:INFO:              pandas: 1.5.3
2023-05-25 16:04:00,937:INFO:              jinja2: 3.1.2
2023-05-25 16:04:00,937:INFO:               scipy: 1.10.1
2023-05-25 16:04:00,937:INFO:              joblib: 1.2.0
2023-05-25 16:04:00,937:INFO:             sklearn: 1.2.2
2023-05-25 16:04:00,937:INFO:                pyod: 1.0.9
2023-05-25 16:04:00,937:INFO:            imblearn: 0.10.1
2023-05-25 16:04:00,937:INFO:   category_encoders: 2.6.1
2023-05-25 16:04:00,937:INFO:            lightgbm: 3.3.5
2023-05-25 16:04:00,937:INFO:               numba: 0.57.0
2023-05-25 16:04:00,937:INFO:            requests: 2.29.0
2023-05-25 16:04:00,937:INFO:          matplotlib: 3.7.1
2023-05-25 16:04:00,937:INFO:          scikitplot: 0.3.7
2023-05-25 16:04:00,937:INFO:         yellowbrick: 1.5
2023-05-25 16:04:00,937:INFO:              plotly: 5.14.1
2023-05-25 16:04:00,937:INFO:             kaleido: 0.2.1
2023-05-25 16:04:00,937:INFO:         statsmodels: 0.14.0
2023-05-25 16:04:00,937:INFO:              sktime: 0.17.0
2023-05-25 16:04:00,937:INFO:               tbats: 1.1.3
2023-05-25 16:04:00,937:INFO:            pmdarima: 2.0.3
2023-05-25 16:04:00,937:INFO:              psutil: 5.9.0
2023-05-25 16:04:00,937:INFO:PyCaret optional dependencies:
2023-05-25 16:04:00,937:INFO:                shap: Not installed
2023-05-25 16:04:00,937:INFO:           interpret: Not installed
2023-05-25 16:04:00,937:INFO:                umap: Not installed
2023-05-25 16:04:00,937:INFO:    pandas_profiling: Not installed
2023-05-25 16:04:00,938:INFO:  explainerdashboard: Not installed
2023-05-25 16:04:00,938:INFO:             autoviz: Not installed
2023-05-25 16:04:00,938:INFO:           fairlearn: Not installed
2023-05-25 16:04:00,938:INFO:             xgboost: Not installed
2023-05-25 16:04:00,938:INFO:            catboost: Not installed
2023-05-25 16:04:00,938:INFO:              kmodes: Not installed
2023-05-25 16:04:00,938:INFO:             mlxtend: Not installed
2023-05-25 16:04:00,938:INFO:       statsforecast: Not installed
2023-05-25 16:04:00,938:INFO:        tune_sklearn: Not installed
2023-05-25 16:04:00,938:INFO:                 ray: Not installed
2023-05-25 16:04:00,938:INFO:            hyperopt: Not installed
2023-05-25 16:04:00,938:INFO:              optuna: Not installed
2023-05-25 16:04:00,938:INFO:               skopt: Not installed
2023-05-25 16:04:00,938:INFO:              mlflow: Not installed
2023-05-25 16:04:00,938:INFO:              gradio: Not installed
2023-05-25 16:04:00,938:INFO:             fastapi: Not installed
2023-05-25 16:04:00,938:INFO:             uvicorn: Not installed
2023-05-25 16:04:00,938:INFO:              m2cgen: Not installed
2023-05-25 16:04:00,938:INFO:           evidently: Not installed
2023-05-25 16:04:00,938:INFO:               fugue: Not installed
2023-05-25 16:04:00,938:INFO:           streamlit: Not installed
2023-05-25 16:04:00,938:INFO:             prophet: Not installed
2023-05-25 16:04:00,938:INFO:None
2023-05-25 16:04:00,938:INFO:Set up data.
2023-05-25 16:04:01,350:INFO:Set up train/test split.
2023-05-25 16:04:01,579:INFO:Set up index.
2023-05-25 16:04:01,583:INFO:Set up folding strategy.
2023-05-25 16:04:01,583:INFO:Assigning column types.
2023-05-25 16:04:01,748:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:04:01,748:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,750:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,752:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:01,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:01,899:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,901:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:04:01,903:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,043:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 16:04:02,045:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,168:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,188:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,191:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,328:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 16:04:02,332:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,469:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,474:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,592:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,611:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,612:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 16:04:02,736:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:04:02,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:02,900:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:04:03,026:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:03,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,170:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:04:03,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,190:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 16:04:03,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:03,477:INFO:Preparing preprocessing pipeline...
2023-05-25 16:04:03,477:INFO:Set up simple imputation.
2023-05-25 16:04:03,530:INFO:Set up encoding of ordinal features.
2023-05-25 16:04:03,583:INFO:Set up encoding of categorical features.
2023-05-25 16:04:03,584:INFO:Set up feature normalization.
2023-05-25 16:04:09,876:INFO:Finished creating preprocessing pipeline.
2023-05-25 16:04:09,884:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['or_src_id', 'population',
                                             'income', 'total_sales',
                                             'second_sales', 'water_access',
                                             'elec_cons', 'building_perm',
                                             'land_permited', 'labour_fource',
                                             'unemployment', 'agricultural',
                                             'life_time', 'hb_per100000',
                                             'fertility', 'hh_size',
                                             'nearest_fault_...
                 TransformerWrapper(exclude=None, include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-05-25 16:04:09,884:INFO:Creating final display dataframe.
2023-05-25 16:04:13,952:INFO:Setup _display_container:                     Description             Value
0                    Session id              3730
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (322424, 128)
4        Transformed data shape     (322424, 155)
5   Transformed train set shape     (257939, 155)
6    Transformed test set shape      (64485, 155)
7              Ordinal features                 1
8              Numeric features               121
9          Categorical features                 6
10     Rows with missing values              7.9%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                    Normalize              True
18             Normalize method            zscore
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              ceff
2023-05-25 16:04:14,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:14,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:14,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:14,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:04:14,258:INFO:setup() successfully completed in 13.33s...............
2023-05-25 16:04:14,258:INFO:Initializing create_model()
2023-05-25 16:04:14,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fae0e88c460>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:04:14,258:INFO:Checking exceptions
2023-05-25 16:04:14,270:INFO:Importing libraries
2023-05-25 16:04:14,270:INFO:Copying training dataset
2023-05-25 16:04:14,429:INFO:Defining folds
2023-05-25 16:04:14,429:INFO:Declaring metric variables
2023-05-25 16:04:14,431:INFO:Importing untrained model
2023-05-25 16:04:14,433:INFO:Ridge Regression Imported successfully
2023-05-25 16:04:14,437:INFO:Starting cross validation
2023-05-25 16:04:14,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:27:51,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:27:51,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:27:51,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:27:51,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 16:27:51,804:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-25 16:29:36,628:INFO:PyCaret RegressionExperiment
2023-05-25 16:29:36,628:INFO:Logging name: reg-default-name
2023-05-25 16:29:36,628:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 16:29:36,628:INFO:version 3.0.2
2023-05-25 16:29:36,628:INFO:Initializing setup()
2023-05-25 16:29:36,628:INFO:self.USI: 1a99
2023-05-25 16:29:36,628:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'y_train', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'seed', 'idx', 'X_test', 'fold_groups_param', '_available_plots', 'y_test', 'USI', 'transform_target_param', '_ml_usecase', 'X', 'html_param', 'target_param', 'y'}
2023-05-25 16:29:36,628:INFO:Checking environment
2023-05-25 16:29:36,628:INFO:python_version: 3.8.16
2023-05-25 16:29:36,628:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:29:36,628:INFO:machine: x86_64
2023-05-25 16:29:36,628:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:29:36,628:INFO:Memory: svmem(total=16378347520, available=7969824768, percent=51.3, used=7331123200, free=5699190784, active=2227499008, inactive=7336251392, buffers=215007232, cached=3133026304, shared=724553728, slab=532148224)
2023-05-25 16:29:36,628:INFO:Physical Core: 10
2023-05-25 16:29:36,629:INFO:Logical Core: 16
2023-05-25 16:29:36,629:INFO:Checking libraries
2023-05-25 16:29:36,629:INFO:System:
2023-05-25 16:29:36,629:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:29:36,629:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:29:36,629:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:29:36,629:INFO:PyCaret required dependencies:
2023-05-25 16:29:36,629:INFO:                 pip: 23.0.1
2023-05-25 16:29:36,629:INFO:          setuptools: 66.0.0
2023-05-25 16:29:36,629:INFO:             pycaret: 3.0.2
2023-05-25 16:29:36,629:INFO:             IPython: 8.12.2
2023-05-25 16:29:36,629:INFO:          ipywidgets: 8.0.6
2023-05-25 16:29:36,629:INFO:                tqdm: 4.65.0
2023-05-25 16:29:36,629:INFO:               numpy: 1.23.5
2023-05-25 16:29:36,629:INFO:              pandas: 1.5.3
2023-05-25 16:29:36,629:INFO:              jinja2: 3.1.2
2023-05-25 16:29:36,629:INFO:               scipy: 1.10.1
2023-05-25 16:29:36,629:INFO:              joblib: 1.2.0
2023-05-25 16:29:36,629:INFO:             sklearn: 1.2.2
2023-05-25 16:29:36,629:INFO:                pyod: 1.0.9
2023-05-25 16:29:36,629:INFO:            imblearn: 0.10.1
2023-05-25 16:29:36,629:INFO:   category_encoders: 2.6.1
2023-05-25 16:29:36,629:INFO:            lightgbm: 3.3.5
2023-05-25 16:29:36,629:INFO:               numba: 0.57.0
2023-05-25 16:29:36,629:INFO:            requests: 2.29.0
2023-05-25 16:29:36,629:INFO:          matplotlib: 3.7.1
2023-05-25 16:29:36,629:INFO:          scikitplot: 0.3.7
2023-05-25 16:29:36,629:INFO:         yellowbrick: 1.5
2023-05-25 16:29:36,629:INFO:              plotly: 5.14.1
2023-05-25 16:29:36,629:INFO:             kaleido: 0.2.1
2023-05-25 16:29:36,629:INFO:         statsmodels: 0.14.0
2023-05-25 16:29:36,629:INFO:              sktime: 0.17.0
2023-05-25 16:29:36,629:INFO:               tbats: 1.1.3
2023-05-25 16:29:36,629:INFO:            pmdarima: 2.0.3
2023-05-25 16:29:36,629:INFO:              psutil: 5.9.0
2023-05-25 16:29:36,629:INFO:PyCaret optional dependencies:
2023-05-25 16:29:36,636:INFO:                shap: Not installed
2023-05-25 16:29:36,636:INFO:           interpret: Not installed
2023-05-25 16:29:36,636:INFO:                umap: Not installed
2023-05-25 16:29:36,636:INFO:    pandas_profiling: Not installed
2023-05-25 16:29:36,636:INFO:  explainerdashboard: Not installed
2023-05-25 16:29:36,636:INFO:             autoviz: Not installed
2023-05-25 16:29:36,636:INFO:           fairlearn: Not installed
2023-05-25 16:29:36,636:INFO:             xgboost: Not installed
2023-05-25 16:29:36,636:INFO:            catboost: Not installed
2023-05-25 16:29:36,636:INFO:              kmodes: Not installed
2023-05-25 16:29:36,636:INFO:             mlxtend: Not installed
2023-05-25 16:29:36,636:INFO:       statsforecast: Not installed
2023-05-25 16:29:36,636:INFO:        tune_sklearn: Not installed
2023-05-25 16:29:36,637:INFO:                 ray: Not installed
2023-05-25 16:29:36,637:INFO:            hyperopt: Not installed
2023-05-25 16:29:36,637:INFO:              optuna: Not installed
2023-05-25 16:29:36,637:INFO:               skopt: Not installed
2023-05-25 16:29:36,637:INFO:              mlflow: Not installed
2023-05-25 16:29:36,637:INFO:              gradio: Not installed
2023-05-25 16:29:36,637:INFO:             fastapi: Not installed
2023-05-25 16:29:36,637:INFO:             uvicorn: Not installed
2023-05-25 16:29:36,637:INFO:              m2cgen: Not installed
2023-05-25 16:29:36,637:INFO:           evidently: Not installed
2023-05-25 16:29:36,637:INFO:               fugue: Not installed
2023-05-25 16:29:36,637:INFO:           streamlit: Not installed
2023-05-25 16:29:36,637:INFO:             prophet: Not installed
2023-05-25 16:29:36,637:INFO:None
2023-05-25 16:29:36,637:INFO:Set up data.
2023-05-25 16:29:36,870:INFO:Set up train/test split.
2023-05-25 16:29:36,965:INFO:Set up index.
2023-05-25 16:30:08,972:INFO:PyCaret RegressionExperiment
2023-05-25 16:30:08,972:INFO:Logging name: reg-default-name
2023-05-25 16:30:08,972:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 16:30:08,972:INFO:version 3.0.2
2023-05-25 16:30:08,972:INFO:Initializing setup()
2023-05-25 16:30:08,972:INFO:self.USI: a655
2023-05-25 16:30:08,972:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'y_train', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'seed', 'idx', 'X_test', 'fold_groups_param', '_available_plots', 'y_test', 'USI', 'transform_target_param', '_ml_usecase', 'X', 'html_param', 'target_param', 'y'}
2023-05-25 16:30:08,972:INFO:Checking environment
2023-05-25 16:30:08,972:INFO:python_version: 3.8.16
2023-05-25 16:30:08,972:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:30:08,972:INFO:machine: x86_64
2023-05-25 16:30:08,972:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:30:08,972:INFO:Memory: svmem(total=16378347520, available=7755706368, percent=52.6, used=7551172608, free=5483126784, active=2229014528, inactive=7547768832, buffers=215212032, cached=3128836096, shared=718622720, slab=532316160)
2023-05-25 16:30:08,972:INFO:Physical Core: 10
2023-05-25 16:30:08,972:INFO:Logical Core: 16
2023-05-25 16:30:08,972:INFO:Checking libraries
2023-05-25 16:30:08,972:INFO:System:
2023-05-25 16:30:08,972:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:30:08,972:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:30:08,972:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:30:08,972:INFO:PyCaret required dependencies:
2023-05-25 16:30:08,972:INFO:                 pip: 23.0.1
2023-05-25 16:30:08,972:INFO:          setuptools: 66.0.0
2023-05-25 16:30:08,972:INFO:             pycaret: 3.0.2
2023-05-25 16:30:08,972:INFO:             IPython: 8.12.2
2023-05-25 16:30:08,972:INFO:          ipywidgets: 8.0.6
2023-05-25 16:30:08,972:INFO:                tqdm: 4.65.0
2023-05-25 16:30:08,972:INFO:               numpy: 1.23.5
2023-05-25 16:30:08,972:INFO:              pandas: 1.5.3
2023-05-25 16:30:08,972:INFO:              jinja2: 3.1.2
2023-05-25 16:30:08,972:INFO:               scipy: 1.10.1
2023-05-25 16:30:08,972:INFO:              joblib: 1.2.0
2023-05-25 16:30:08,972:INFO:             sklearn: 1.2.2
2023-05-25 16:30:08,972:INFO:                pyod: 1.0.9
2023-05-25 16:30:08,972:INFO:            imblearn: 0.10.1
2023-05-25 16:30:08,972:INFO:   category_encoders: 2.6.1
2023-05-25 16:30:08,972:INFO:            lightgbm: 3.3.5
2023-05-25 16:30:08,972:INFO:               numba: 0.57.0
2023-05-25 16:30:08,972:INFO:            requests: 2.29.0
2023-05-25 16:30:08,972:INFO:          matplotlib: 3.7.1
2023-05-25 16:30:08,972:INFO:          scikitplot: 0.3.7
2023-05-25 16:30:08,972:INFO:         yellowbrick: 1.5
2023-05-25 16:30:08,972:INFO:              plotly: 5.14.1
2023-05-25 16:30:08,972:INFO:             kaleido: 0.2.1
2023-05-25 16:30:08,972:INFO:         statsmodels: 0.14.0
2023-05-25 16:30:08,972:INFO:              sktime: 0.17.0
2023-05-25 16:30:08,972:INFO:               tbats: 1.1.3
2023-05-25 16:30:08,973:INFO:            pmdarima: 2.0.3
2023-05-25 16:30:08,973:INFO:              psutil: 5.9.0
2023-05-25 16:30:08,973:INFO:PyCaret optional dependencies:
2023-05-25 16:30:08,973:INFO:                shap: Not installed
2023-05-25 16:30:08,973:INFO:           interpret: Not installed
2023-05-25 16:30:08,973:INFO:                umap: Not installed
2023-05-25 16:30:08,973:INFO:    pandas_profiling: Not installed
2023-05-25 16:30:08,973:INFO:  explainerdashboard: Not installed
2023-05-25 16:30:08,973:INFO:             autoviz: Not installed
2023-05-25 16:30:08,973:INFO:           fairlearn: Not installed
2023-05-25 16:30:08,973:INFO:             xgboost: Not installed
2023-05-25 16:30:08,973:INFO:            catboost: Not installed
2023-05-25 16:30:08,973:INFO:              kmodes: Not installed
2023-05-25 16:30:08,973:INFO:             mlxtend: Not installed
2023-05-25 16:30:08,973:INFO:       statsforecast: Not installed
2023-05-25 16:30:08,973:INFO:        tune_sklearn: Not installed
2023-05-25 16:30:08,973:INFO:                 ray: Not installed
2023-05-25 16:30:08,973:INFO:            hyperopt: Not installed
2023-05-25 16:30:08,973:INFO:              optuna: Not installed
2023-05-25 16:30:08,973:INFO:               skopt: Not installed
2023-05-25 16:30:08,973:INFO:              mlflow: Not installed
2023-05-25 16:30:08,973:INFO:              gradio: Not installed
2023-05-25 16:30:08,973:INFO:             fastapi: Not installed
2023-05-25 16:30:08,973:INFO:             uvicorn: Not installed
2023-05-25 16:30:08,973:INFO:              m2cgen: Not installed
2023-05-25 16:30:08,973:INFO:           evidently: Not installed
2023-05-25 16:30:08,973:INFO:               fugue: Not installed
2023-05-25 16:30:08,973:INFO:           streamlit: Not installed
2023-05-25 16:30:08,973:INFO:             prophet: Not installed
2023-05-25 16:30:08,973:INFO:None
2023-05-25 16:30:08,973:INFO:Set up data.
2023-05-25 16:30:09,207:INFO:Set up train/test split.
2023-05-25 16:30:09,301:INFO:Set up index.
2023-05-25 16:30:09,327:INFO:Set up folding strategy.
2023-05-25 16:30:09,328:INFO:Assigning column types.
2023-05-25 16:30:09,351:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:30:09,352:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,353:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,355:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,465:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,499:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,501:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,503:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,603:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,623:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 16:30:09,625:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,753:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,755:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:09,874:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 16:30:09,878:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,979:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:09,999:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,004:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,122:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,122:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 16:30:10,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,248:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,385:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:30:10,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:30:10,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,664:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 16:30:10,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:30:10,923:INFO:Preparing preprocessing pipeline...
2023-05-25 16:30:10,923:INFO:Set up simple imputation.
2023-05-25 16:30:10,975:INFO:Set up encoding of ordinal features.
2023-05-25 16:30:11,002:INFO:Set up encoding of categorical features.
2023-05-25 16:30:11,004:INFO:Set up feature normalization.
2023-05-25 16:30:16,478:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-25 16:30:18,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-25 16:44:03,406:INFO:PyCaret RegressionExperiment
2023-05-25 16:44:03,406:INFO:Logging name: reg-default-name
2023-05-25 16:44:03,406:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 16:44:03,406:INFO:version 3.0.2
2023-05-25 16:44:03,406:INFO:Initializing setup()
2023-05-25 16:44:03,406:INFO:self.USI: bae1
2023-05-25 16:44:03,406:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'y_train', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'seed', 'idx', 'X_test', 'fold_groups_param', '_available_plots', 'y_test', 'USI', 'transform_target_param', '_ml_usecase', 'X', 'html_param', 'target_param', 'y'}
2023-05-25 16:44:03,406:INFO:Checking environment
2023-05-25 16:44:03,406:INFO:python_version: 3.8.16
2023-05-25 16:44:03,406:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:44:03,406:INFO:machine: x86_64
2023-05-25 16:44:03,406:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:44:03,406:INFO:Memory: svmem(total=16378347520, available=7041564672, percent=57.0, used=8209018880, free=3825197056, active=2201104384, inactive=9148432384, buffers=223252480, cached=4120879104, shared=774991872, slab=554954752)
2023-05-25 16:44:03,407:INFO:Physical Core: 10
2023-05-25 16:44:03,407:INFO:Logical Core: 16
2023-05-25 16:44:03,407:INFO:Checking libraries
2023-05-25 16:44:03,407:INFO:System:
2023-05-25 16:44:03,407:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:44:03,407:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:44:03,407:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:44:03,407:INFO:PyCaret required dependencies:
2023-05-25 16:44:03,407:INFO:                 pip: 23.0.1
2023-05-25 16:44:03,407:INFO:          setuptools: 66.0.0
2023-05-25 16:44:03,407:INFO:             pycaret: 3.0.2
2023-05-25 16:44:03,407:INFO:             IPython: 8.12.2
2023-05-25 16:44:03,407:INFO:          ipywidgets: 8.0.6
2023-05-25 16:44:03,407:INFO:                tqdm: 4.65.0
2023-05-25 16:44:03,407:INFO:               numpy: 1.23.5
2023-05-25 16:44:03,407:INFO:              pandas: 1.5.3
2023-05-25 16:44:03,407:INFO:              jinja2: 3.1.2
2023-05-25 16:44:03,407:INFO:               scipy: 1.10.1
2023-05-25 16:44:03,407:INFO:              joblib: 1.2.0
2023-05-25 16:44:03,407:INFO:             sklearn: 1.2.2
2023-05-25 16:44:03,407:INFO:                pyod: 1.0.9
2023-05-25 16:44:03,407:INFO:            imblearn: 0.10.1
2023-05-25 16:44:03,407:INFO:   category_encoders: 2.6.1
2023-05-25 16:44:03,407:INFO:            lightgbm: 3.3.5
2023-05-25 16:44:03,407:INFO:               numba: 0.57.0
2023-05-25 16:44:03,407:INFO:            requests: 2.29.0
2023-05-25 16:44:03,407:INFO:          matplotlib: 3.7.1
2023-05-25 16:44:03,407:INFO:          scikitplot: 0.3.7
2023-05-25 16:44:03,407:INFO:         yellowbrick: 1.5
2023-05-25 16:44:03,407:INFO:              plotly: 5.14.1
2023-05-25 16:44:03,407:INFO:             kaleido: 0.2.1
2023-05-25 16:44:03,407:INFO:         statsmodels: 0.14.0
2023-05-25 16:44:03,407:INFO:              sktime: 0.17.0
2023-05-25 16:44:03,407:INFO:               tbats: 1.1.3
2023-05-25 16:44:03,407:INFO:            pmdarima: 2.0.3
2023-05-25 16:44:03,407:INFO:              psutil: 5.9.0
2023-05-25 16:44:03,407:INFO:PyCaret optional dependencies:
2023-05-25 16:44:03,407:INFO:                shap: Not installed
2023-05-25 16:44:03,407:INFO:           interpret: Not installed
2023-05-25 16:44:03,407:INFO:                umap: Not installed
2023-05-25 16:44:03,407:INFO:    pandas_profiling: Not installed
2023-05-25 16:44:03,407:INFO:  explainerdashboard: Not installed
2023-05-25 16:44:03,407:INFO:             autoviz: Not installed
2023-05-25 16:44:03,407:INFO:           fairlearn: Not installed
2023-05-25 16:44:03,407:INFO:             xgboost: Not installed
2023-05-25 16:44:03,407:INFO:            catboost: Not installed
2023-05-25 16:44:03,407:INFO:              kmodes: Not installed
2023-05-25 16:44:03,407:INFO:             mlxtend: Not installed
2023-05-25 16:44:03,407:INFO:       statsforecast: Not installed
2023-05-25 16:44:03,407:INFO:        tune_sklearn: Not installed
2023-05-25 16:44:03,407:INFO:                 ray: Not installed
2023-05-25 16:44:03,407:INFO:            hyperopt: Not installed
2023-05-25 16:44:03,407:INFO:              optuna: Not installed
2023-05-25 16:44:03,407:INFO:               skopt: Not installed
2023-05-25 16:44:03,407:INFO:              mlflow: Not installed
2023-05-25 16:44:03,407:INFO:              gradio: Not installed
2023-05-25 16:44:03,407:INFO:             fastapi: Not installed
2023-05-25 16:44:03,407:INFO:             uvicorn: Not installed
2023-05-25 16:44:03,407:INFO:              m2cgen: Not installed
2023-05-25 16:44:03,407:INFO:           evidently: Not installed
2023-05-25 16:44:03,407:INFO:               fugue: Not installed
2023-05-25 16:44:03,407:INFO:           streamlit: Not installed
2023-05-25 16:44:03,407:INFO:             prophet: Not installed
2023-05-25 16:44:03,407:INFO:None
2023-05-25 16:44:03,407:INFO:Set up data.
2023-05-25 16:44:03,613:INFO:Set up train/test split.
2023-05-25 16:44:03,693:INFO:Set up index.
2023-05-25 16:46:00,140:INFO:PyCaret RegressionExperiment
2023-05-25 16:46:00,140:INFO:Logging name: reg-default-name
2023-05-25 16:46:00,140:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-25 16:46:00,140:INFO:version 3.0.2
2023-05-25 16:46:00,140:INFO:Initializing setup()
2023-05-25 16:46:00,140:INFO:self.USI: a74d
2023-05-25 16:46:00,140:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'y_train', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'seed', 'idx', 'X_test', 'fold_groups_param', '_available_plots', 'y_test', 'USI', 'transform_target_param', '_ml_usecase', 'X', 'html_param', 'target_param', 'y'}
2023-05-25 16:46:00,140:INFO:Checking environment
2023-05-25 16:46:00,140:INFO:python_version: 3.8.16
2023-05-25 16:46:00,140:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-25 16:46:00,140:INFO:machine: x86_64
2023-05-25 16:46:00,140:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:46:00,140:INFO:Memory: svmem(total=16378347520, available=7284101120, percent=55.5, used=7972007936, free=4066877440, active=2201706496, inactive=8898584576, buffers=223801344, cached=4115660800, shared=769515520, slab=555212800)
2023-05-25 16:46:00,140:INFO:Physical Core: 10
2023-05-25 16:46:00,140:INFO:Logical Core: 16
2023-05-25 16:46:00,140:INFO:Checking libraries
2023-05-25 16:46:00,140:INFO:System:
2023-05-25 16:46:00,140:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-25 16:46:00,141:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-25 16:46:00,141:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-25 16:46:00,141:INFO:PyCaret required dependencies:
2023-05-25 16:46:00,141:INFO:                 pip: 23.0.1
2023-05-25 16:46:00,141:INFO:          setuptools: 66.0.0
2023-05-25 16:46:00,141:INFO:             pycaret: 3.0.2
2023-05-25 16:46:00,141:INFO:             IPython: 8.12.2
2023-05-25 16:46:00,141:INFO:          ipywidgets: 8.0.6
2023-05-25 16:46:00,141:INFO:                tqdm: 4.65.0
2023-05-25 16:46:00,141:INFO:               numpy: 1.23.5
2023-05-25 16:46:00,141:INFO:              pandas: 1.5.3
2023-05-25 16:46:00,141:INFO:              jinja2: 3.1.2
2023-05-25 16:46:00,141:INFO:               scipy: 1.10.1
2023-05-25 16:46:00,141:INFO:              joblib: 1.2.0
2023-05-25 16:46:00,141:INFO:             sklearn: 1.2.2
2023-05-25 16:46:00,141:INFO:                pyod: 1.0.9
2023-05-25 16:46:00,141:INFO:            imblearn: 0.10.1
2023-05-25 16:46:00,141:INFO:   category_encoders: 2.6.1
2023-05-25 16:46:00,141:INFO:            lightgbm: 3.3.5
2023-05-25 16:46:00,141:INFO:               numba: 0.57.0
2023-05-25 16:46:00,141:INFO:            requests: 2.29.0
2023-05-25 16:46:00,141:INFO:          matplotlib: 3.7.1
2023-05-25 16:46:00,141:INFO:          scikitplot: 0.3.7
2023-05-25 16:46:00,141:INFO:         yellowbrick: 1.5
2023-05-25 16:46:00,141:INFO:              plotly: 5.14.1
2023-05-25 16:46:00,141:INFO:             kaleido: 0.2.1
2023-05-25 16:46:00,141:INFO:         statsmodels: 0.14.0
2023-05-25 16:46:00,141:INFO:              sktime: 0.17.0
2023-05-25 16:46:00,141:INFO:               tbats: 1.1.3
2023-05-25 16:46:00,141:INFO:            pmdarima: 2.0.3
2023-05-25 16:46:00,141:INFO:              psutil: 5.9.0
2023-05-25 16:46:00,141:INFO:PyCaret optional dependencies:
2023-05-25 16:46:00,141:INFO:                shap: Not installed
2023-05-25 16:46:00,141:INFO:           interpret: Not installed
2023-05-25 16:46:00,141:INFO:                umap: Not installed
2023-05-25 16:46:00,141:INFO:    pandas_profiling: Not installed
2023-05-25 16:46:00,141:INFO:  explainerdashboard: Not installed
2023-05-25 16:46:00,141:INFO:             autoviz: Not installed
2023-05-25 16:46:00,141:INFO:           fairlearn: Not installed
2023-05-25 16:46:00,141:INFO:             xgboost: Not installed
2023-05-25 16:46:00,141:INFO:            catboost: Not installed
2023-05-25 16:46:00,141:INFO:              kmodes: Not installed
2023-05-25 16:46:00,141:INFO:             mlxtend: Not installed
2023-05-25 16:46:00,141:INFO:       statsforecast: Not installed
2023-05-25 16:46:00,141:INFO:        tune_sklearn: Not installed
2023-05-25 16:46:00,141:INFO:                 ray: Not installed
2023-05-25 16:46:00,141:INFO:            hyperopt: Not installed
2023-05-25 16:46:00,141:INFO:              optuna: Not installed
2023-05-25 16:46:00,141:INFO:               skopt: Not installed
2023-05-25 16:46:00,141:INFO:              mlflow: Not installed
2023-05-25 16:46:00,141:INFO:              gradio: Not installed
2023-05-25 16:46:00,141:INFO:             fastapi: Not installed
2023-05-25 16:46:00,141:INFO:             uvicorn: Not installed
2023-05-25 16:46:00,141:INFO:              m2cgen: Not installed
2023-05-25 16:46:00,141:INFO:           evidently: Not installed
2023-05-25 16:46:00,141:INFO:               fugue: Not installed
2023-05-25 16:46:00,141:INFO:           streamlit: Not installed
2023-05-25 16:46:00,141:INFO:             prophet: Not installed
2023-05-25 16:46:00,141:INFO:None
2023-05-25 16:46:00,141:INFO:Set up data.
2023-05-25 16:46:00,366:INFO:Set up train/test split.
2023-05-25 16:46:00,454:INFO:Set up index.
2023-05-25 16:46:00,468:INFO:Set up folding strategy.
2023-05-25 16:46:00,468:INFO:Assigning column types.
2023-05-25 16:46:00,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:46:00,492:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,493:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,495:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,590:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,609:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,611:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,613:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,728:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-25 16:46:00,730:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,968:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:00,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:00,990:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-25 16:46:00,994:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,144:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,268:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-25 16:46:01,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,390:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,516:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,516:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:46:01,623:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-25 16:46:01,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,770:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-25 16:46:01,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:01,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:02,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:02,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:46:02,027:INFO:Preparing preprocessing pipeline...
2023-05-25 16:46:02,027:INFO:Set up simple imputation.
2023-05-25 16:46:02,078:INFO:Set up encoding of ordinal features.
2023-05-25 16:46:02,104:INFO:Set up encoding of categorical features.
2023-05-25 16:46:02,107:INFO:Set up feature normalization.
2023-05-25 16:46:07,579:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-25 16:46:09,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-26 00:59:58,597:INFO:PyCaret RegressionExperiment
2023-05-26 00:59:58,598:INFO:Logging name: reg-default-name
2023-05-26 00:59:58,598:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-26 00:59:58,598:INFO:version 3.0.2
2023-05-26 00:59:58,598:INFO:Initializing setup()
2023-05-26 00:59:58,598:INFO:self.USI: 0dd0
2023-05-26 00:59:58,598:INFO:self._variable_keys: {'gpu_param', 'fold_shuffle_param', 'data', 'memory', 'X_train', 'y_train', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'exp_name_log', 'log_plots_param', 'fold_generator', 'pipeline', 'n_jobs_param', 'seed', 'idx', 'X_test', 'fold_groups_param', '_available_plots', 'y_test', 'USI', 'transform_target_param', '_ml_usecase', 'X', 'html_param', 'target_param', 'y'}
2023-05-26 00:59:58,598:INFO:Checking environment
2023-05-26 00:59:58,598:INFO:python_version: 3.8.16
2023-05-26 00:59:58,598:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-26 00:59:58,598:INFO:machine: x86_64
2023-05-26 00:59:58,598:INFO:platform: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-26 00:59:58,598:INFO:Memory: svmem(total=16378347520, available=1426165760, percent=91.3, used=13555245056, free=332750848, active=5461848064, inactive=9349009408, buffers=38457344, cached=2451894272, shared=1048113152, slab=632037376)
2023-05-26 00:59:58,599:INFO:Physical Core: 10
2023-05-26 00:59:58,599:INFO:Logical Core: 16
2023-05-26 00:59:58,599:INFO:Checking libraries
2023-05-26 00:59:58,599:INFO:System:
2023-05-26 00:59:58,599:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-26 00:59:58,599:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-26 00:59:58,599:INFO:   machine: Linux-5.19.0-41-generic-x86_64-with-glibc2.17
2023-05-26 00:59:58,599:INFO:PyCaret required dependencies:
2023-05-26 00:59:58,600:INFO:                 pip: 23.0.1
2023-05-26 00:59:58,600:INFO:          setuptools: 66.0.0
2023-05-26 00:59:58,600:INFO:             pycaret: 3.0.2
2023-05-26 00:59:58,600:INFO:             IPython: 8.12.2
2023-05-26 00:59:58,600:INFO:          ipywidgets: 8.0.6
2023-05-26 00:59:58,600:INFO:                tqdm: 4.65.0
2023-05-26 00:59:58,600:INFO:               numpy: 1.23.5
2023-05-26 00:59:58,600:INFO:              pandas: 1.5.3
2023-05-26 00:59:58,600:INFO:              jinja2: 3.1.2
2023-05-26 00:59:58,600:INFO:               scipy: 1.10.1
2023-05-26 00:59:58,600:INFO:              joblib: 1.2.0
2023-05-26 00:59:58,600:INFO:             sklearn: 1.2.2
2023-05-26 00:59:58,600:INFO:                pyod: 1.0.9
2023-05-26 00:59:58,600:INFO:            imblearn: 0.10.1
2023-05-26 00:59:58,600:INFO:   category_encoders: 2.6.1
2023-05-26 00:59:58,600:INFO:            lightgbm: 3.3.5
2023-05-26 00:59:58,600:INFO:               numba: 0.57.0
2023-05-26 00:59:58,600:INFO:            requests: 2.29.0
2023-05-26 00:59:58,600:INFO:          matplotlib: 3.7.1
2023-05-26 00:59:58,600:INFO:          scikitplot: 0.3.7
2023-05-26 00:59:58,600:INFO:         yellowbrick: 1.5
2023-05-26 00:59:58,600:INFO:              plotly: 5.14.1
2023-05-26 00:59:58,600:INFO:             kaleido: 0.2.1
2023-05-26 00:59:58,600:INFO:         statsmodels: 0.14.0
2023-05-26 00:59:58,600:INFO:              sktime: 0.17.0
2023-05-26 00:59:58,600:INFO:               tbats: 1.1.3
2023-05-26 00:59:58,600:INFO:            pmdarima: 2.0.3
2023-05-26 00:59:58,600:INFO:              psutil: 5.9.0
2023-05-26 00:59:58,600:INFO:PyCaret optional dependencies:
2023-05-26 00:59:58,600:INFO:                shap: Not installed
2023-05-26 00:59:58,600:INFO:           interpret: Not installed
2023-05-26 00:59:58,600:INFO:                umap: Not installed
2023-05-26 00:59:58,600:INFO:    pandas_profiling: Not installed
2023-05-26 00:59:58,600:INFO:  explainerdashboard: Not installed
2023-05-26 00:59:58,600:INFO:             autoviz: Not installed
2023-05-26 00:59:58,600:INFO:           fairlearn: Not installed
2023-05-26 00:59:58,600:INFO:             xgboost: Not installed
2023-05-26 00:59:58,600:INFO:            catboost: Not installed
2023-05-26 00:59:58,600:INFO:              kmodes: Not installed
2023-05-26 00:59:58,600:INFO:             mlxtend: Not installed
2023-05-26 00:59:58,600:INFO:       statsforecast: Not installed
2023-05-26 00:59:58,600:INFO:        tune_sklearn: Not installed
2023-05-26 00:59:58,600:INFO:                 ray: Not installed
2023-05-26 00:59:58,600:INFO:            hyperopt: Not installed
2023-05-26 00:59:58,600:INFO:              optuna: Not installed
2023-05-26 00:59:58,600:INFO:               skopt: Not installed
2023-05-26 00:59:58,600:INFO:              mlflow: Not installed
2023-05-26 00:59:58,600:INFO:              gradio: Not installed
2023-05-26 00:59:58,600:INFO:             fastapi: Not installed
2023-05-26 00:59:58,600:INFO:             uvicorn: Not installed
2023-05-26 00:59:58,600:INFO:              m2cgen: Not installed
2023-05-26 00:59:58,600:INFO:           evidently: Not installed
2023-05-26 00:59:58,600:INFO:               fugue: Not installed
2023-05-26 00:59:58,600:INFO:           streamlit: Not installed
2023-05-26 00:59:58,600:INFO:             prophet: Not installed
2023-05-26 00:59:58,600:INFO:None
2023-05-26 00:59:58,601:INFO:Set up data.
2023-05-26 00:59:58,995:INFO:Set up train/test split.
2023-05-26 00:59:59,137:INFO:Set up index.
2023-05-26 00:59:59,155:INFO:Set up folding strategy.
2023-05-26 00:59:59,155:INFO:Assigning column types.
2023-05-27 02:15:20,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 02:15:20,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 02:15:20,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 02:15:20,184:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 02:15:20,558:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 02:15:21,054:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 02:15:21,054:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 02:15:21,194:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,287:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:15:21,301:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,404:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,472:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,536:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,606:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,802:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:21,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:22,048:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:15:22,318:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:22,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:15:22,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:15:22,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:22,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:22,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:22,993:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,070:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,205:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,349:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,425:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,501:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,578:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:15:23,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:15:33,091:INFO:PyCaret RegressionExperiment
2023-05-27 02:15:33,091:INFO:Logging name: reg-default-name
2023-05-27 02:15:33,091:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 02:15:33,091:INFO:version 3.0.2
2023-05-27 02:15:33,091:INFO:Initializing setup()
2023-05-27 02:15:33,091:INFO:self.USI: 0d90
2023-05-27 02:15:33,091:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 02:15:33,091:INFO:Checking environment
2023-05-27 02:15:33,091:INFO:python_version: 3.8.16
2023-05-27 02:15:33,091:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 02:15:33,091:INFO:machine: x86_64
2023-05-27 02:15:33,091:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 02:15:33,091:INFO:Memory: svmem(total=16378343424, available=10823122944, percent=33.9, used=4568895488, free=4253868032, active=1665622016, inactive=8665509888, buffers=259465216, cached=7296114688, shared=656801792, slab=795336704)
2023-05-27 02:15:33,091:INFO:Physical Core: 10
2023-05-27 02:15:33,091:INFO:Logical Core: 16
2023-05-27 02:15:33,092:INFO:Checking libraries
2023-05-27 02:15:33,092:INFO:System:
2023-05-27 02:15:33,092:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 02:15:33,092:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 02:15:33,092:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 02:15:33,092:INFO:PyCaret required dependencies:
2023-05-27 02:15:33,092:INFO:                 pip: 23.0.1
2023-05-27 02:15:33,092:INFO:          setuptools: 66.0.0
2023-05-27 02:15:33,092:INFO:             pycaret: 3.0.2
2023-05-27 02:15:33,092:INFO:             IPython: 8.12.2
2023-05-27 02:15:33,092:INFO:          ipywidgets: 8.0.6
2023-05-27 02:15:33,092:INFO:                tqdm: 4.65.0
2023-05-27 02:15:33,092:INFO:               numpy: 1.23.5
2023-05-27 02:15:33,092:INFO:              pandas: 1.5.3
2023-05-27 02:15:33,092:INFO:              jinja2: 3.1.2
2023-05-27 02:15:33,092:INFO:               scipy: 1.10.1
2023-05-27 02:15:33,092:INFO:              joblib: 1.2.0
2023-05-27 02:15:33,092:INFO:             sklearn: 1.2.2
2023-05-27 02:15:33,092:INFO:                pyod: 1.0.9
2023-05-27 02:15:33,092:INFO:            imblearn: 0.10.1
2023-05-27 02:15:33,092:INFO:   category_encoders: 2.6.1
2023-05-27 02:15:33,092:INFO:            lightgbm: 3.3.5
2023-05-27 02:15:33,092:INFO:               numba: 0.57.0
2023-05-27 02:15:33,092:INFO:            requests: 2.29.0
2023-05-27 02:15:33,092:INFO:          matplotlib: 3.7.1
2023-05-27 02:15:33,092:INFO:          scikitplot: 0.3.7
2023-05-27 02:15:33,092:INFO:         yellowbrick: 1.5
2023-05-27 02:15:33,092:INFO:              plotly: 5.14.1
2023-05-27 02:15:33,092:INFO:             kaleido: 0.2.1
2023-05-27 02:15:33,092:INFO:         statsmodels: 0.14.0
2023-05-27 02:15:33,092:INFO:              sktime: 0.17.0
2023-05-27 02:15:33,092:INFO:               tbats: 1.1.3
2023-05-27 02:15:33,092:INFO:            pmdarima: 2.0.3
2023-05-27 02:15:33,092:INFO:              psutil: 5.9.0
2023-05-27 02:15:33,092:INFO:PyCaret optional dependencies:
2023-05-27 02:15:33,099:INFO:                shap: Not installed
2023-05-27 02:15:33,099:INFO:           interpret: Not installed
2023-05-27 02:15:33,099:INFO:                umap: Not installed
2023-05-27 02:15:33,099:INFO:    pandas_profiling: Not installed
2023-05-27 02:15:33,099:INFO:  explainerdashboard: Not installed
2023-05-27 02:15:33,099:INFO:             autoviz: Not installed
2023-05-27 02:15:33,099:INFO:           fairlearn: Not installed
2023-05-27 02:15:33,099:INFO:             xgboost: Not installed
2023-05-27 02:15:33,099:INFO:            catboost: Not installed
2023-05-27 02:15:33,099:INFO:              kmodes: Not installed
2023-05-27 02:15:33,099:INFO:             mlxtend: Not installed
2023-05-27 02:15:33,099:INFO:       statsforecast: Not installed
2023-05-27 02:15:33,099:INFO:        tune_sklearn: Not installed
2023-05-27 02:15:33,099:INFO:                 ray: Not installed
2023-05-27 02:15:33,099:INFO:            hyperopt: Not installed
2023-05-27 02:15:33,099:INFO:              optuna: Not installed
2023-05-27 02:15:33,099:INFO:               skopt: Not installed
2023-05-27 02:15:33,099:INFO:              mlflow: Not installed
2023-05-27 02:15:33,099:INFO:              gradio: Not installed
2023-05-27 02:15:33,099:INFO:             fastapi: Not installed
2023-05-27 02:15:33,100:INFO:             uvicorn: Not installed
2023-05-27 02:15:33,100:INFO:              m2cgen: Not installed
2023-05-27 02:15:33,100:INFO:           evidently: Not installed
2023-05-27 02:15:33,100:INFO:               fugue: Not installed
2023-05-27 02:15:33,100:INFO:           streamlit: Not installed
2023-05-27 02:15:33,100:INFO:             prophet: Not installed
2023-05-27 02:15:33,100:INFO:None
2023-05-27 02:15:33,100:INFO:Set up data.
2023-05-27 02:15:33,307:INFO:Set up train/test split.
2023-05-27 02:15:33,377:INFO:Set up index.
2023-05-27 02:15:33,395:INFO:Set up folding strategy.
2023-05-27 02:15:33,395:INFO:Assigning column types.
2023-05-27 02:23:39,647:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 02:23:39,649:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 02:23:40,642:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:40,762:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:23:40,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:40,914:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,073:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,168:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,341:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:41,644:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:41,724:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:41,959:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:42,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,240:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,477:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,551:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,627:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,706:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,785:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,863:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:42,942:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:43,459:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:23:43,775:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:43,996:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:44,244:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:44,497:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:44,731:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:44,854:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:45,087:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:45,322:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:23:45,552:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:45,794:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:45,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:45,943:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,018:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,092:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,163:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,386:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,535:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,759:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,833:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,907:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:46,982:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,053:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,130:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,206:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,357:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,433:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,511:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,588:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,819:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,901:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:47,981:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,061:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,138:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,311:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,377:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,455:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,531:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,673:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,741:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,805:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,899:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:48,966:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,042:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,117:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,342:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,507:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,570:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,645:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,720:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,795:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:49,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,136:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,218:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,295:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,372:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,760:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,836:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:50,988:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,069:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,142:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,290:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,368:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,445:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,674:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,828:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,909:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:51,992:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,073:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,387:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,623:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,701:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,853:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:52,933:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,097:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,182:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,354:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,440:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,520:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,859:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:23:53,939:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:46,376:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 02:27:46,377:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 02:27:47,426:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:47,522:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:27:47,548:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:47,684:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:47,787:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:47,859:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:47,958:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:48,043:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:48,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:48,256:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:48,484:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:48,573:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:48,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:49,052:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,128:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,302:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,394:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,471:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,547:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,638:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,814:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:49,902:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:50,507:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:27:50,804:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:51,044:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:51,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:51,540:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:51,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:51,915:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:52,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:52,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:27:52,675:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:52,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:52,865:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:52,948:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,196:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,541:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,625:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:53,961:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,297:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,383:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,554:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,641:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:54,812:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,174:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,261:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,346:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,432:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,519:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,879:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:55,953:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,212:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,285:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,360:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,435:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,610:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,695:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,780:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,869:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:56,954:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,125:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,226:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,472:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,558:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,729:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,900:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:57,987:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,074:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,161:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,247:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,333:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,419:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,592:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,765:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,849:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:58,928:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,016:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,102:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,275:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,448:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,533:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,619:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,704:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,790:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,876:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:27:59,969:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,057:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,233:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,321:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,407:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,494:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,581:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,664:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,751:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,837:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:00,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,014:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,101:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,189:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,277:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,453:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,540:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,628:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:01,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:15,509:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 02:28:15,510:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 02:28:16,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:16,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:28:17,278:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,529:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,608:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,718:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,813:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:17,929:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:18,052:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:18,310:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:18,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:18,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:18,945:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,032:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,131:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,330:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,417:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,505:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,605:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,827:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:19,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:20,317:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:28:20,609:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:20,871:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:21,145:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:21,412:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:21,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:22,069:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:22,336:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:22,607:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:28:22,886:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:22,999:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,090:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,273:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,636:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,730:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,824:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:23,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,008:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,101:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,192:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,284:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,374:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,649:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,743:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,839:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:24,930:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,022:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,116:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,209:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,299:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,582:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,676:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,768:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,861:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:25,953:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,144:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,239:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,335:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,430:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,513:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,596:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,787:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,870:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:26,965:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,060:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,155:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,343:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,625:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:27,910:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,464:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,678:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,781:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,884:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:28,986:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,088:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,188:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,289:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,392:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,597:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:29,975:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,072:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,170:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,267:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,365:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,463:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,564:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,660:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,757:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,856:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:30,954:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,052:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,151:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,248:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,443:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,542:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,640:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,736:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,833:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:31,931:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,029:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,227:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,325:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,423:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,625:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,826:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:32,925:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:33,017:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:33,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:28:33,214:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:00,268:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 02:30:00,269:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 02:30:01,100:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,216:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:30:01,242:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,399:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,525:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,618:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,844:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:01,967:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:02,093:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:02,370:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:02,476:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:02,758:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:03,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:03,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:03,236:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:03,341:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:03,449:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:03,543:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:04,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:04,381:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:04,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:04,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:04,702:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:05,096:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 02:30:05,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:05,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:05,980:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:06,270:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:06,566:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:06,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:07,000:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:07,293:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 02:30:07,595:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:07,717:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:07,821:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:07,924:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,027:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,129:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,521:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,624:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,727:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,829:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:08,930:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,031:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,132:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,232:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,334:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,436:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,538:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,643:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,740:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:09,944:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,047:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,252:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,359:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,462:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,560:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,662:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,764:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,872:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:10,976:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,080:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,181:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,282:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,398:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,487:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,589:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,798:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:11,979:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,068:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,186:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,276:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,379:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,481:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,584:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,686:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:12,892:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,011:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,101:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,205:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,413:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,517:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,622:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,726:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:13,936:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,143:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,246:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,348:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,451:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,559:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,767:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,873:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:14,973:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,174:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,390:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,496:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,602:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:15,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,281:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,385:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,489:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,593:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,698:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:16,905:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,009:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,114:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,219:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,323:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,637:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,744:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,849:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:17,954:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,061:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,167:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,272:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,377:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,482:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,586:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,690:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,797:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:18,901:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 02:30:19,006:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 03:01:32,707:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,708:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,709:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,711:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,712:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,713:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,714:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,715:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:01:32,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/graph_associations.py:219: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  new_dataframe[feature] = pd.Series(dtype=float)

2023-05-27 03:02:27,088:INFO:PyCaret RegressionExperiment
2023-05-27 03:02:27,088:INFO:Logging name: reg-default-name
2023-05-27 03:02:27,088:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:02:27,088:INFO:version 3.0.2
2023-05-27 03:02:27,088:INFO:Initializing setup()
2023-05-27 03:02:27,088:INFO:self.USI: 6ace
2023-05-27 03:02:27,088:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:02:27,088:INFO:Checking environment
2023-05-27 03:02:27,088:INFO:python_version: 3.8.16
2023-05-27 03:02:27,088:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:02:27,088:INFO:machine: x86_64
2023-05-27 03:02:27,088:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:02:27,088:INFO:Memory: svmem(total=16378343424, available=8198844416, percent=49.9, used=6940917760, free=727797760, active=2547769344, inactive=11141967872, buffers=297496576, cached=8412131328, shared=909668352, slab=812830720)
2023-05-27 03:02:27,089:INFO:Physical Core: 10
2023-05-27 03:02:27,089:INFO:Logical Core: 16
2023-05-27 03:02:27,089:INFO:Checking libraries
2023-05-27 03:02:27,089:INFO:System:
2023-05-27 03:02:27,089:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:02:27,089:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:02:27,089:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:02:27,089:INFO:PyCaret required dependencies:
2023-05-27 03:02:27,089:INFO:                 pip: 23.0.1
2023-05-27 03:02:27,089:INFO:          setuptools: 66.0.0
2023-05-27 03:02:27,089:INFO:             pycaret: 3.0.2
2023-05-27 03:02:27,089:INFO:             IPython: 8.12.2
2023-05-27 03:02:27,089:INFO:          ipywidgets: 8.0.6
2023-05-27 03:02:27,089:INFO:                tqdm: 4.65.0
2023-05-27 03:02:27,089:INFO:               numpy: 1.23.5
2023-05-27 03:02:27,089:INFO:              pandas: 1.5.3
2023-05-27 03:02:27,089:INFO:              jinja2: 3.1.2
2023-05-27 03:02:27,089:INFO:               scipy: 1.10.1
2023-05-27 03:02:27,089:INFO:              joblib: 1.2.0
2023-05-27 03:02:27,089:INFO:             sklearn: 1.2.2
2023-05-27 03:02:27,089:INFO:                pyod: 1.0.9
2023-05-27 03:02:27,089:INFO:            imblearn: 0.10.1
2023-05-27 03:02:27,089:INFO:   category_encoders: 2.6.1
2023-05-27 03:02:27,089:INFO:            lightgbm: 3.3.5
2023-05-27 03:02:27,089:INFO:               numba: 0.57.0
2023-05-27 03:02:27,089:INFO:            requests: 2.29.0
2023-05-27 03:02:27,089:INFO:          matplotlib: 3.7.1
2023-05-27 03:02:27,089:INFO:          scikitplot: 0.3.7
2023-05-27 03:02:27,089:INFO:         yellowbrick: 1.5
2023-05-27 03:02:27,089:INFO:              plotly: 5.14.1
2023-05-27 03:02:27,089:INFO:             kaleido: 0.2.1
2023-05-27 03:02:27,089:INFO:         statsmodels: 0.14.0
2023-05-27 03:02:27,089:INFO:              sktime: 0.17.0
2023-05-27 03:02:27,089:INFO:               tbats: 1.1.3
2023-05-27 03:02:27,089:INFO:            pmdarima: 2.0.3
2023-05-27 03:02:27,089:INFO:              psutil: 5.9.0
2023-05-27 03:02:27,089:INFO:PyCaret optional dependencies:
2023-05-27 03:02:27,089:INFO:                shap: Not installed
2023-05-27 03:02:27,089:INFO:           interpret: Not installed
2023-05-27 03:02:27,089:INFO:                umap: Not installed
2023-05-27 03:02:27,089:INFO:    pandas_profiling: Not installed
2023-05-27 03:02:27,089:INFO:  explainerdashboard: Not installed
2023-05-27 03:02:27,089:INFO:             autoviz: Not installed
2023-05-27 03:02:27,089:INFO:           fairlearn: Not installed
2023-05-27 03:02:27,089:INFO:             xgboost: Not installed
2023-05-27 03:02:27,089:INFO:            catboost: Not installed
2023-05-27 03:02:27,089:INFO:              kmodes: Not installed
2023-05-27 03:02:27,089:INFO:             mlxtend: Not installed
2023-05-27 03:02:27,089:INFO:       statsforecast: Not installed
2023-05-27 03:02:27,089:INFO:        tune_sklearn: Not installed
2023-05-27 03:02:27,089:INFO:                 ray: Not installed
2023-05-27 03:02:27,089:INFO:            hyperopt: Not installed
2023-05-27 03:02:27,089:INFO:              optuna: Not installed
2023-05-27 03:02:27,089:INFO:               skopt: Not installed
2023-05-27 03:02:27,089:INFO:              mlflow: Not installed
2023-05-27 03:02:27,089:INFO:              gradio: Not installed
2023-05-27 03:02:27,089:INFO:             fastapi: Not installed
2023-05-27 03:02:27,089:INFO:             uvicorn: Not installed
2023-05-27 03:02:27,089:INFO:              m2cgen: Not installed
2023-05-27 03:02:27,089:INFO:           evidently: Not installed
2023-05-27 03:02:27,089:INFO:               fugue: Not installed
2023-05-27 03:02:27,089:INFO:           streamlit: Not installed
2023-05-27 03:02:27,089:INFO:             prophet: Not installed
2023-05-27 03:02:27,089:INFO:None
2023-05-27 03:02:27,089:INFO:Set up data.
2023-05-27 03:02:27,718:INFO:Set up train/test split.
2023-05-27 03:02:28,032:INFO:Set up index.
2023-05-27 03:02:28,174:INFO:Set up folding strategy.
2023-05-27 03:02:28,174:INFO:Assigning column types.
2023-05-27 03:11:58,298:INFO:PyCaret RegressionExperiment
2023-05-27 03:11:58,298:INFO:Logging name: reg-default-name
2023-05-27 03:11:58,298:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:11:58,298:INFO:version 3.0.2
2023-05-27 03:11:58,298:INFO:Initializing setup()
2023-05-27 03:11:58,298:INFO:self.USI: ce13
2023-05-27 03:11:58,298:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:11:58,298:INFO:Checking environment
2023-05-27 03:11:58,298:INFO:python_version: 3.8.16
2023-05-27 03:11:58,298:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:11:58,298:INFO:machine: x86_64
2023-05-27 03:11:58,298:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:11:58,298:INFO:Memory: svmem(total=16378343424, available=7824613376, percent=52.2, used=7316307968, free=578637824, active=2590711808, inactive=11259908096, buffers=299053056, cached=8184344576, shared=909398016, slab=807817216)
2023-05-27 03:11:58,298:INFO:Physical Core: 10
2023-05-27 03:11:58,298:INFO:Logical Core: 16
2023-05-27 03:11:58,298:INFO:Checking libraries
2023-05-27 03:11:58,298:INFO:System:
2023-05-27 03:11:58,298:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:11:58,298:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:11:58,298:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:11:58,298:INFO:PyCaret required dependencies:
2023-05-27 03:11:58,298:INFO:                 pip: 23.0.1
2023-05-27 03:11:58,298:INFO:          setuptools: 66.0.0
2023-05-27 03:11:58,298:INFO:             pycaret: 3.0.2
2023-05-27 03:11:58,299:INFO:             IPython: 8.12.2
2023-05-27 03:11:58,299:INFO:          ipywidgets: 8.0.6
2023-05-27 03:11:58,299:INFO:                tqdm: 4.65.0
2023-05-27 03:11:58,299:INFO:               numpy: 1.23.5
2023-05-27 03:11:58,299:INFO:              pandas: 1.5.3
2023-05-27 03:11:58,299:INFO:              jinja2: 3.1.2
2023-05-27 03:11:58,299:INFO:               scipy: 1.10.1
2023-05-27 03:11:58,299:INFO:              joblib: 1.2.0
2023-05-27 03:11:58,299:INFO:             sklearn: 1.2.2
2023-05-27 03:11:58,299:INFO:                pyod: 1.0.9
2023-05-27 03:11:58,299:INFO:            imblearn: 0.10.1
2023-05-27 03:11:58,299:INFO:   category_encoders: 2.6.1
2023-05-27 03:11:58,299:INFO:            lightgbm: 3.3.5
2023-05-27 03:11:58,299:INFO:               numba: 0.57.0
2023-05-27 03:11:58,299:INFO:            requests: 2.29.0
2023-05-27 03:11:58,299:INFO:          matplotlib: 3.7.1
2023-05-27 03:11:58,299:INFO:          scikitplot: 0.3.7
2023-05-27 03:11:58,299:INFO:         yellowbrick: 1.5
2023-05-27 03:11:58,299:INFO:              plotly: 5.14.1
2023-05-27 03:11:58,299:INFO:             kaleido: 0.2.1
2023-05-27 03:11:58,299:INFO:         statsmodels: 0.14.0
2023-05-27 03:11:58,299:INFO:              sktime: 0.17.0
2023-05-27 03:11:58,299:INFO:               tbats: 1.1.3
2023-05-27 03:11:58,299:INFO:            pmdarima: 2.0.3
2023-05-27 03:11:58,299:INFO:              psutil: 5.9.0
2023-05-27 03:11:58,299:INFO:PyCaret optional dependencies:
2023-05-27 03:11:58,299:INFO:                shap: Not installed
2023-05-27 03:11:58,299:INFO:           interpret: Not installed
2023-05-27 03:11:58,299:INFO:                umap: Not installed
2023-05-27 03:11:58,299:INFO:    pandas_profiling: Not installed
2023-05-27 03:11:58,299:INFO:  explainerdashboard: Not installed
2023-05-27 03:11:58,299:INFO:             autoviz: Not installed
2023-05-27 03:11:58,299:INFO:           fairlearn: Not installed
2023-05-27 03:11:58,299:INFO:             xgboost: Not installed
2023-05-27 03:11:58,299:INFO:            catboost: Not installed
2023-05-27 03:11:58,299:INFO:              kmodes: Not installed
2023-05-27 03:11:58,299:INFO:             mlxtend: Not installed
2023-05-27 03:11:58,299:INFO:       statsforecast: Not installed
2023-05-27 03:11:58,299:INFO:        tune_sklearn: Not installed
2023-05-27 03:11:58,299:INFO:                 ray: Not installed
2023-05-27 03:11:58,299:INFO:            hyperopt: Not installed
2023-05-27 03:11:58,299:INFO:              optuna: Not installed
2023-05-27 03:11:58,299:INFO:               skopt: Not installed
2023-05-27 03:11:58,299:INFO:              mlflow: Not installed
2023-05-27 03:11:58,299:INFO:              gradio: Not installed
2023-05-27 03:11:58,299:INFO:             fastapi: Not installed
2023-05-27 03:11:58,299:INFO:             uvicorn: Not installed
2023-05-27 03:11:58,299:INFO:              m2cgen: Not installed
2023-05-27 03:11:58,299:INFO:           evidently: Not installed
2023-05-27 03:11:58,299:INFO:               fugue: Not installed
2023-05-27 03:11:58,299:INFO:           streamlit: Not installed
2023-05-27 03:11:58,299:INFO:             prophet: Not installed
2023-05-27 03:11:58,299:INFO:None
2023-05-27 03:11:58,299:INFO:Set up data.
2023-05-27 03:11:59,040:INFO:Set up train/test split.
2023-05-27 03:11:59,364:INFO:Set up index.
2023-05-27 03:11:59,555:INFO:Set up folding strategy.
2023-05-27 03:11:59,555:INFO:Assigning column types.
2023-05-27 03:11:59,723:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:11:59,723:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:11:59,726:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:11:59,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,062:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,064:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,066:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,378:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:12:00,380:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,382:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,682:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,948:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:00,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:00,950:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:12:00,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,203:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:01,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:01,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,478:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:01,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:01,497:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:12:01,750:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,769:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:01,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:01,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:02,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:12:02,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,041:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:12:02,297:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:02,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,571:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:12:02,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,590:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:12:02,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:02,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:03,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:03,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:12:03,150:INFO:Preparing preprocessing pipeline...
2023-05-27 03:12:03,150:INFO:Set up simple imputation.
2023-05-27 03:12:03,291:INFO:Set up encoding of ordinal features.
2023-05-27 03:12:03,349:INFO:Set up encoding of categorical features.
2023-05-27 03:12:03,352:INFO:Set up feature normalization.
2023-05-27 03:12:03,380:INFO:Set up column name cleaning.
2023-05-27 03:18:45,642:INFO:PyCaret RegressionExperiment
2023-05-27 03:18:45,643:INFO:Logging name: reg-default-name
2023-05-27 03:18:45,643:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:18:45,643:INFO:version 3.0.2
2023-05-27 03:18:45,643:INFO:Initializing setup()
2023-05-27 03:18:45,643:INFO:self.USI: 4ced
2023-05-27 03:18:45,643:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:18:45,643:INFO:Checking environment
2023-05-27 03:18:45,643:INFO:python_version: 3.8.16
2023-05-27 03:18:45,643:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:18:45,643:INFO:machine: x86_64
2023-05-27 03:18:45,643:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:18:45,643:INFO:Memory: svmem(total=16378343424, available=7131680768, percent=56.5, used=8015286272, free=603336704, active=2995138560, inactive=10996113408, buffers=273772544, cached=7485947904, shared=902123520, slab=810418176)
2023-05-27 03:18:45,643:INFO:Physical Core: 10
2023-05-27 03:18:45,643:INFO:Logical Core: 16
2023-05-27 03:18:45,643:INFO:Checking libraries
2023-05-27 03:18:45,643:INFO:System:
2023-05-27 03:18:45,643:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:18:45,643:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:18:45,643:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:18:45,643:INFO:PyCaret required dependencies:
2023-05-27 03:18:45,643:INFO:                 pip: 23.0.1
2023-05-27 03:18:45,643:INFO:          setuptools: 66.0.0
2023-05-27 03:18:45,643:INFO:             pycaret: 3.0.2
2023-05-27 03:18:45,643:INFO:             IPython: 8.12.2
2023-05-27 03:18:45,643:INFO:          ipywidgets: 8.0.6
2023-05-27 03:18:45,643:INFO:                tqdm: 4.65.0
2023-05-27 03:18:45,643:INFO:               numpy: 1.23.5
2023-05-27 03:18:45,643:INFO:              pandas: 1.5.3
2023-05-27 03:18:45,643:INFO:              jinja2: 3.1.2
2023-05-27 03:18:45,643:INFO:               scipy: 1.10.1
2023-05-27 03:18:45,643:INFO:              joblib: 1.2.0
2023-05-27 03:18:45,643:INFO:             sklearn: 1.2.2
2023-05-27 03:18:45,643:INFO:                pyod: 1.0.9
2023-05-27 03:18:45,643:INFO:            imblearn: 0.10.1
2023-05-27 03:18:45,643:INFO:   category_encoders: 2.6.1
2023-05-27 03:18:45,643:INFO:            lightgbm: 3.3.5
2023-05-27 03:18:45,643:INFO:               numba: 0.57.0
2023-05-27 03:18:45,643:INFO:            requests: 2.29.0
2023-05-27 03:18:45,643:INFO:          matplotlib: 3.7.1
2023-05-27 03:18:45,643:INFO:          scikitplot: 0.3.7
2023-05-27 03:18:45,643:INFO:         yellowbrick: 1.5
2023-05-27 03:18:45,643:INFO:              plotly: 5.14.1
2023-05-27 03:18:45,643:INFO:             kaleido: 0.2.1
2023-05-27 03:18:45,643:INFO:         statsmodels: 0.14.0
2023-05-27 03:18:45,643:INFO:              sktime: 0.17.0
2023-05-27 03:18:45,643:INFO:               tbats: 1.1.3
2023-05-27 03:18:45,643:INFO:            pmdarima: 2.0.3
2023-05-27 03:18:45,643:INFO:              psutil: 5.9.0
2023-05-27 03:18:45,643:INFO:PyCaret optional dependencies:
2023-05-27 03:18:45,644:INFO:                shap: Not installed
2023-05-27 03:18:45,644:INFO:           interpret: Not installed
2023-05-27 03:18:45,644:INFO:                umap: Not installed
2023-05-27 03:18:45,644:INFO:    pandas_profiling: Not installed
2023-05-27 03:18:45,644:INFO:  explainerdashboard: Not installed
2023-05-27 03:18:45,644:INFO:             autoviz: Not installed
2023-05-27 03:18:45,644:INFO:           fairlearn: Not installed
2023-05-27 03:18:45,644:INFO:             xgboost: Not installed
2023-05-27 03:18:45,644:INFO:            catboost: Not installed
2023-05-27 03:18:45,644:INFO:              kmodes: Not installed
2023-05-27 03:18:45,644:INFO:             mlxtend: Not installed
2023-05-27 03:18:45,644:INFO:       statsforecast: Not installed
2023-05-27 03:18:45,644:INFO:        tune_sklearn: Not installed
2023-05-27 03:18:45,644:INFO:                 ray: Not installed
2023-05-27 03:18:45,644:INFO:            hyperopt: Not installed
2023-05-27 03:18:45,644:INFO:              optuna: Not installed
2023-05-27 03:18:45,644:INFO:               skopt: Not installed
2023-05-27 03:18:45,644:INFO:              mlflow: Not installed
2023-05-27 03:18:45,644:INFO:              gradio: Not installed
2023-05-27 03:18:45,644:INFO:             fastapi: Not installed
2023-05-27 03:18:45,644:INFO:             uvicorn: Not installed
2023-05-27 03:18:45,644:INFO:              m2cgen: Not installed
2023-05-27 03:18:45,644:INFO:           evidently: Not installed
2023-05-27 03:18:45,644:INFO:               fugue: Not installed
2023-05-27 03:18:45,644:INFO:           streamlit: Not installed
2023-05-27 03:18:45,644:INFO:             prophet: Not installed
2023-05-27 03:18:45,644:INFO:None
2023-05-27 03:18:45,644:INFO:Set up data.
2023-05-27 03:18:46,344:INFO:Set up train/test split.
2023-05-27 03:18:46,740:INFO:Set up index.
2023-05-27 03:18:46,956:INFO:Set up folding strategy.
2023-05-27 03:18:46,956:INFO:Assigning column types.
2023-05-27 03:18:47,140:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:18:47,141:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,143:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,420:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,440:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:47,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:47,440:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,442:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,444:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:47,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:47,738:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:18:47,740:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,742:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:47,985:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,008:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,254:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,273:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:18:48,277:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,545:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:48,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:48,806:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:18:49,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,091:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,377:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:18:49,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:18:49,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:49,916:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:18:50,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:50,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:50,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:50,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:18:50,450:INFO:Preparing preprocessing pipeline...
2023-05-27 03:18:50,450:INFO:Set up simple imputation.
2023-05-27 03:18:50,566:INFO:Set up encoding of ordinal features.
2023-05-27 03:18:50,621:INFO:Set up encoding of categorical features.
2023-05-27 03:18:50,623:INFO:Set up feature normalization.
2023-05-27 03:18:50,650:INFO:Set up column name cleaning.
2023-05-27 03:20:16,895:INFO:PyCaret RegressionExperiment
2023-05-27 03:20:16,895:INFO:Logging name: reg-default-name
2023-05-27 03:20:16,895:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:20:16,895:INFO:version 3.0.2
2023-05-27 03:20:16,895:INFO:Initializing setup()
2023-05-27 03:20:16,895:INFO:self.USI: f2cf
2023-05-27 03:20:16,895:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:20:16,895:INFO:Checking environment
2023-05-27 03:20:16,895:INFO:python_version: 3.8.16
2023-05-27 03:20:16,895:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:20:16,895:INFO:machine: x86_64
2023-05-27 03:20:16,895:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:20:16,895:INFO:Memory: svmem(total=16378343424, available=6382239744, percent=61.0, used=8725131264, free=814120960, active=3208773632, inactive=10721898496, buffers=269336576, cached=6569754624, shared=940392448, slab=795308032)
2023-05-27 03:20:16,896:INFO:Physical Core: 10
2023-05-27 03:20:16,896:INFO:Logical Core: 16
2023-05-27 03:20:16,896:INFO:Checking libraries
2023-05-27 03:20:16,896:INFO:System:
2023-05-27 03:20:16,896:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:20:16,896:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:20:16,896:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:20:16,896:INFO:PyCaret required dependencies:
2023-05-27 03:20:16,896:INFO:                 pip: 23.0.1
2023-05-27 03:20:16,896:INFO:          setuptools: 66.0.0
2023-05-27 03:20:16,896:INFO:             pycaret: 3.0.2
2023-05-27 03:20:16,896:INFO:             IPython: 8.12.2
2023-05-27 03:20:16,896:INFO:          ipywidgets: 8.0.6
2023-05-27 03:20:16,896:INFO:                tqdm: 4.65.0
2023-05-27 03:20:16,896:INFO:               numpy: 1.23.5
2023-05-27 03:20:16,896:INFO:              pandas: 1.5.3
2023-05-27 03:20:16,896:INFO:              jinja2: 3.1.2
2023-05-27 03:20:16,896:INFO:               scipy: 1.10.1
2023-05-27 03:20:16,896:INFO:              joblib: 1.2.0
2023-05-27 03:20:16,896:INFO:             sklearn: 1.2.2
2023-05-27 03:20:16,896:INFO:                pyod: 1.0.9
2023-05-27 03:20:16,896:INFO:            imblearn: 0.10.1
2023-05-27 03:20:16,896:INFO:   category_encoders: 2.6.1
2023-05-27 03:20:16,896:INFO:            lightgbm: 3.3.5
2023-05-27 03:20:16,896:INFO:               numba: 0.57.0
2023-05-27 03:20:16,896:INFO:            requests: 2.29.0
2023-05-27 03:20:16,896:INFO:          matplotlib: 3.7.1
2023-05-27 03:20:16,896:INFO:          scikitplot: 0.3.7
2023-05-27 03:20:16,896:INFO:         yellowbrick: 1.5
2023-05-27 03:20:16,896:INFO:              plotly: 5.14.1
2023-05-27 03:20:16,896:INFO:             kaleido: 0.2.1
2023-05-27 03:20:16,896:INFO:         statsmodels: 0.14.0
2023-05-27 03:20:16,896:INFO:              sktime: 0.17.0
2023-05-27 03:20:16,896:INFO:               tbats: 1.1.3
2023-05-27 03:20:16,896:INFO:            pmdarima: 2.0.3
2023-05-27 03:20:16,896:INFO:              psutil: 5.9.0
2023-05-27 03:20:16,896:INFO:PyCaret optional dependencies:
2023-05-27 03:20:16,896:INFO:                shap: Not installed
2023-05-27 03:20:16,896:INFO:           interpret: Not installed
2023-05-27 03:20:16,896:INFO:                umap: Not installed
2023-05-27 03:20:16,896:INFO:    pandas_profiling: Not installed
2023-05-27 03:20:16,896:INFO:  explainerdashboard: Not installed
2023-05-27 03:20:16,896:INFO:             autoviz: Not installed
2023-05-27 03:20:16,896:INFO:           fairlearn: Not installed
2023-05-27 03:20:16,896:INFO:             xgboost: Not installed
2023-05-27 03:20:16,896:INFO:            catboost: Not installed
2023-05-27 03:20:16,896:INFO:              kmodes: Not installed
2023-05-27 03:20:16,896:INFO:             mlxtend: Not installed
2023-05-27 03:20:16,896:INFO:       statsforecast: Not installed
2023-05-27 03:20:16,896:INFO:        tune_sklearn: Not installed
2023-05-27 03:20:16,896:INFO:                 ray: Not installed
2023-05-27 03:20:16,896:INFO:            hyperopt: Not installed
2023-05-27 03:20:16,896:INFO:              optuna: Not installed
2023-05-27 03:20:16,896:INFO:               skopt: Not installed
2023-05-27 03:20:16,896:INFO:              mlflow: Not installed
2023-05-27 03:20:16,896:INFO:              gradio: Not installed
2023-05-27 03:20:16,896:INFO:             fastapi: Not installed
2023-05-27 03:20:16,896:INFO:             uvicorn: Not installed
2023-05-27 03:20:16,896:INFO:              m2cgen: Not installed
2023-05-27 03:20:16,896:INFO:           evidently: Not installed
2023-05-27 03:20:16,896:INFO:               fugue: Not installed
2023-05-27 03:20:16,896:INFO:           streamlit: Not installed
2023-05-27 03:20:16,896:INFO:             prophet: Not installed
2023-05-27 03:20:16,896:INFO:None
2023-05-27 03:20:16,896:INFO:Set up data.
2023-05-27 03:20:17,303:INFO:Set up train/test split.
2023-05-27 03:20:17,628:INFO:Set up index.
2023-05-27 03:20:17,822:INFO:Set up folding strategy.
2023-05-27 03:20:17,822:INFO:Assigning column types.
2023-05-27 03:20:18,003:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:20:18,003:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,005:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,007:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,278:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,298:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,300:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,302:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,594:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:20:18,596:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,598:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,893:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:18,896:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:20:18,898:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,161:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,181:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:20:19,185:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,454:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,720:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,721:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:20:19,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:19,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:19,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,233:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:20,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:20:20,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,252:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:20:20,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:20,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,765:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:20:20,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:20,784:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:20:21,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:21,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:21,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:21,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:20:21,325:INFO:Preparing preprocessing pipeline...
2023-05-27 03:20:21,325:INFO:Set up simple imputation.
2023-05-27 03:20:21,441:INFO:Set up encoding of ordinal features.
2023-05-27 03:20:21,496:INFO:Set up encoding of categorical features.
2023-05-27 03:20:21,498:INFO:Set up feature normalization.
2023-05-27 03:20:21,525:INFO:Set up column name cleaning.
2023-05-27 03:22:39,915:INFO:PyCaret RegressionExperiment
2023-05-27 03:22:39,926:INFO:Logging name: reg-default-name
2023-05-27 03:22:39,926:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:22:39,926:INFO:version 3.0.2
2023-05-27 03:22:39,926:INFO:Initializing setup()
2023-05-27 03:22:39,926:INFO:self.USI: 7c48
2023-05-27 03:22:39,926:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:22:39,926:INFO:Checking environment
2023-05-27 03:22:39,926:INFO:python_version: 3.8.16
2023-05-27 03:22:39,926:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:22:39,926:INFO:machine: x86_64
2023-05-27 03:22:39,926:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:22:39,926:INFO:Memory: svmem(total=16378343424, available=5794004992, percent=64.6, used=9360379904, free=855904256, active=3304157184, inactive=10675208192, buffers=269692928, cached=5892366336, shared=879697920, slab=783699968)
2023-05-27 03:22:39,927:INFO:Physical Core: 10
2023-05-27 03:22:39,927:INFO:Logical Core: 16
2023-05-27 03:22:39,927:INFO:Checking libraries
2023-05-27 03:22:39,927:INFO:System:
2023-05-27 03:22:39,927:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:22:39,927:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:22:39,927:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:22:39,927:INFO:PyCaret required dependencies:
2023-05-27 03:22:39,927:INFO:                 pip: 23.0.1
2023-05-27 03:22:39,927:INFO:          setuptools: 66.0.0
2023-05-27 03:22:39,927:INFO:             pycaret: 3.0.2
2023-05-27 03:22:39,927:INFO:             IPython: 8.12.2
2023-05-27 03:22:39,927:INFO:          ipywidgets: 8.0.6
2023-05-27 03:22:39,927:INFO:                tqdm: 4.65.0
2023-05-27 03:22:39,927:INFO:               numpy: 1.23.5
2023-05-27 03:22:39,927:INFO:              pandas: 1.5.3
2023-05-27 03:22:39,927:INFO:              jinja2: 3.1.2
2023-05-27 03:22:39,927:INFO:               scipy: 1.10.1
2023-05-27 03:22:39,927:INFO:              joblib: 1.2.0
2023-05-27 03:22:39,927:INFO:             sklearn: 1.2.2
2023-05-27 03:22:39,927:INFO:                pyod: 1.0.9
2023-05-27 03:22:39,927:INFO:            imblearn: 0.10.1
2023-05-27 03:22:39,927:INFO:   category_encoders: 2.6.1
2023-05-27 03:22:39,927:INFO:            lightgbm: 3.3.5
2023-05-27 03:22:39,927:INFO:               numba: 0.57.0
2023-05-27 03:22:39,927:INFO:            requests: 2.29.0
2023-05-27 03:22:39,927:INFO:          matplotlib: 3.7.1
2023-05-27 03:22:39,927:INFO:          scikitplot: 0.3.7
2023-05-27 03:22:39,927:INFO:         yellowbrick: 1.5
2023-05-27 03:22:39,927:INFO:              plotly: 5.14.1
2023-05-27 03:22:39,927:INFO:             kaleido: 0.2.1
2023-05-27 03:22:39,927:INFO:         statsmodels: 0.14.0
2023-05-27 03:22:39,927:INFO:              sktime: 0.17.0
2023-05-27 03:22:39,927:INFO:               tbats: 1.1.3
2023-05-27 03:22:39,927:INFO:            pmdarima: 2.0.3
2023-05-27 03:22:39,927:INFO:              psutil: 5.9.0
2023-05-27 03:22:39,927:INFO:PyCaret optional dependencies:
2023-05-27 03:22:39,927:INFO:                shap: Not installed
2023-05-27 03:22:39,927:INFO:           interpret: Not installed
2023-05-27 03:22:39,927:INFO:                umap: Not installed
2023-05-27 03:22:39,927:INFO:    pandas_profiling: Not installed
2023-05-27 03:22:39,927:INFO:  explainerdashboard: Not installed
2023-05-27 03:22:39,927:INFO:             autoviz: Not installed
2023-05-27 03:22:39,927:INFO:           fairlearn: Not installed
2023-05-27 03:22:39,927:INFO:             xgboost: Not installed
2023-05-27 03:22:39,927:INFO:            catboost: Not installed
2023-05-27 03:22:39,927:INFO:              kmodes: Not installed
2023-05-27 03:22:39,927:INFO:             mlxtend: Not installed
2023-05-27 03:22:39,927:INFO:       statsforecast: Not installed
2023-05-27 03:22:39,927:INFO:        tune_sklearn: Not installed
2023-05-27 03:22:39,927:INFO:                 ray: Not installed
2023-05-27 03:22:39,927:INFO:            hyperopt: Not installed
2023-05-27 03:22:39,927:INFO:              optuna: Not installed
2023-05-27 03:22:39,927:INFO:               skopt: Not installed
2023-05-27 03:22:39,927:INFO:              mlflow: Not installed
2023-05-27 03:22:39,927:INFO:              gradio: Not installed
2023-05-27 03:22:39,927:INFO:             fastapi: Not installed
2023-05-27 03:22:39,927:INFO:             uvicorn: Not installed
2023-05-27 03:22:39,927:INFO:              m2cgen: Not installed
2023-05-27 03:22:39,927:INFO:           evidently: Not installed
2023-05-27 03:22:39,927:INFO:               fugue: Not installed
2023-05-27 03:22:39,927:INFO:           streamlit: Not installed
2023-05-27 03:22:39,927:INFO:             prophet: Not installed
2023-05-27 03:22:39,927:INFO:None
2023-05-27 03:22:39,927:INFO:Set up data.
2023-05-27 03:23:07,096:INFO:PyCaret RegressionExperiment
2023-05-27 03:23:07,096:INFO:Logging name: reg-default-name
2023-05-27 03:23:07,096:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:23:07,096:INFO:version 3.0.2
2023-05-27 03:23:07,096:INFO:Initializing setup()
2023-05-27 03:23:07,096:INFO:self.USI: 5455
2023-05-27 03:23:07,096:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:23:07,096:INFO:Checking environment
2023-05-27 03:23:07,096:INFO:python_version: 3.8.16
2023-05-27 03:23:07,096:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:23:07,096:INFO:machine: x86_64
2023-05-27 03:23:07,096:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:23:07,097:INFO:Memory: svmem(total=16378343424, available=5284990976, percent=67.7, used=9876209664, free=358977536, active=3302936576, inactive=11194638336, buffers=269811712, cached=5873344512, shared=872755200, slab=783642624)
2023-05-27 03:23:07,097:INFO:Physical Core: 10
2023-05-27 03:23:07,097:INFO:Logical Core: 16
2023-05-27 03:23:07,097:INFO:Checking libraries
2023-05-27 03:23:07,097:INFO:System:
2023-05-27 03:23:07,097:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:23:07,097:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:23:07,097:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:23:07,097:INFO:PyCaret required dependencies:
2023-05-27 03:23:07,097:INFO:                 pip: 23.0.1
2023-05-27 03:23:07,097:INFO:          setuptools: 66.0.0
2023-05-27 03:23:07,097:INFO:             pycaret: 3.0.2
2023-05-27 03:23:07,097:INFO:             IPython: 8.12.2
2023-05-27 03:23:07,097:INFO:          ipywidgets: 8.0.6
2023-05-27 03:23:07,097:INFO:                tqdm: 4.65.0
2023-05-27 03:23:07,097:INFO:               numpy: 1.23.5
2023-05-27 03:23:07,097:INFO:              pandas: 1.5.3
2023-05-27 03:23:07,097:INFO:              jinja2: 3.1.2
2023-05-27 03:23:07,097:INFO:               scipy: 1.10.1
2023-05-27 03:23:07,097:INFO:              joblib: 1.2.0
2023-05-27 03:23:07,098:INFO:             sklearn: 1.2.2
2023-05-27 03:23:07,098:INFO:                pyod: 1.0.9
2023-05-27 03:23:07,098:INFO:            imblearn: 0.10.1
2023-05-27 03:23:07,098:INFO:   category_encoders: 2.6.1
2023-05-27 03:23:07,098:INFO:            lightgbm: 3.3.5
2023-05-27 03:23:07,098:INFO:               numba: 0.57.0
2023-05-27 03:23:07,098:INFO:            requests: 2.29.0
2023-05-27 03:23:07,098:INFO:          matplotlib: 3.7.1
2023-05-27 03:23:07,098:INFO:          scikitplot: 0.3.7
2023-05-27 03:23:07,098:INFO:         yellowbrick: 1.5
2023-05-27 03:23:07,098:INFO:              plotly: 5.14.1
2023-05-27 03:23:07,098:INFO:             kaleido: 0.2.1
2023-05-27 03:23:07,098:INFO:         statsmodels: 0.14.0
2023-05-27 03:23:07,098:INFO:              sktime: 0.17.0
2023-05-27 03:23:07,098:INFO:               tbats: 1.1.3
2023-05-27 03:23:07,098:INFO:            pmdarima: 2.0.3
2023-05-27 03:23:07,098:INFO:              psutil: 5.9.0
2023-05-27 03:23:07,098:INFO:PyCaret optional dependencies:
2023-05-27 03:23:07,098:INFO:                shap: Not installed
2023-05-27 03:23:07,098:INFO:           interpret: Not installed
2023-05-27 03:23:07,098:INFO:                umap: Not installed
2023-05-27 03:23:07,098:INFO:    pandas_profiling: Not installed
2023-05-27 03:23:07,098:INFO:  explainerdashboard: Not installed
2023-05-27 03:23:07,098:INFO:             autoviz: Not installed
2023-05-27 03:23:07,098:INFO:           fairlearn: Not installed
2023-05-27 03:23:07,098:INFO:             xgboost: Not installed
2023-05-27 03:23:07,098:INFO:            catboost: Not installed
2023-05-27 03:23:07,098:INFO:              kmodes: Not installed
2023-05-27 03:23:07,098:INFO:             mlxtend: Not installed
2023-05-27 03:23:07,098:INFO:       statsforecast: Not installed
2023-05-27 03:23:07,098:INFO:        tune_sklearn: Not installed
2023-05-27 03:23:07,098:INFO:                 ray: Not installed
2023-05-27 03:23:07,098:INFO:            hyperopt: Not installed
2023-05-27 03:23:07,098:INFO:              optuna: Not installed
2023-05-27 03:23:07,098:INFO:               skopt: Not installed
2023-05-27 03:23:07,098:INFO:              mlflow: Not installed
2023-05-27 03:23:07,098:INFO:              gradio: Not installed
2023-05-27 03:23:07,098:INFO:             fastapi: Not installed
2023-05-27 03:23:07,098:INFO:             uvicorn: Not installed
2023-05-27 03:23:07,098:INFO:              m2cgen: Not installed
2023-05-27 03:23:07,098:INFO:           evidently: Not installed
2023-05-27 03:23:07,098:INFO:               fugue: Not installed
2023-05-27 03:23:07,098:INFO:           streamlit: Not installed
2023-05-27 03:23:07,098:INFO:             prophet: Not installed
2023-05-27 03:23:07,098:INFO:None
2023-05-27 03:23:07,098:INFO:Set up data.
2023-05-27 03:23:07,991:INFO:Set up train/test split.
2023-05-27 03:23:08,367:INFO:Set up index.
2023-05-27 03:23:08,609:INFO:Set up folding strategy.
2023-05-27 03:23:08,609:INFO:Assigning column types.
2023-05-27 03:23:08,777:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:23:08,777:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:23:08,779:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:23:08,781:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,043:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,043:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,045:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,293:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,312:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,312:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:23:09,314:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,316:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,578:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,582:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,826:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:09,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:09,845:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:23:09,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,111:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,116:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,379:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:23:10,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,893:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:23:10,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:10,912:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:23:11,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:11,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:23:11,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,446:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:23:11,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:23:11,978:INFO:Preparing preprocessing pipeline...
2023-05-27 03:23:11,978:INFO:Set up simple imputation.
2023-05-27 03:23:12,094:INFO:Set up encoding of ordinal features.
2023-05-27 03:23:12,148:INFO:Set up encoding of categorical features.
2023-05-27 03:23:12,150:INFO:Set up feature normalization.
2023-05-27 03:23:12,176:INFO:Set up column name cleaning.
2023-05-27 03:24:51,594:INFO:PyCaret RegressionExperiment
2023-05-27 03:24:51,594:INFO:Logging name: reg-default-name
2023-05-27 03:24:51,594:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:24:51,594:INFO:version 3.0.2
2023-05-27 03:24:51,594:INFO:Initializing setup()
2023-05-27 03:24:51,594:INFO:self.USI: a6f5
2023-05-27 03:24:51,594:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:24:51,594:INFO:Checking environment
2023-05-27 03:24:51,594:INFO:python_version: 3.8.16
2023-05-27 03:24:51,594:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:24:51,594:INFO:machine: x86_64
2023-05-27 03:24:51,594:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:24:51,594:INFO:Memory: svmem(total=16378343424, available=4450820096, percent=72.8, used=10708619264, free=822714368, active=3403784192, inactive=11002023936, buffers=259014656, cached=4587995136, shared=864624640, slab=689348608)
2023-05-27 03:24:51,595:INFO:Physical Core: 10
2023-05-27 03:24:51,595:INFO:Logical Core: 16
2023-05-27 03:24:51,595:INFO:Checking libraries
2023-05-27 03:24:51,595:INFO:System:
2023-05-27 03:24:51,595:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:24:51,595:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:24:51,595:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:24:51,595:INFO:PyCaret required dependencies:
2023-05-27 03:24:51,595:INFO:                 pip: 23.0.1
2023-05-27 03:24:51,595:INFO:          setuptools: 66.0.0
2023-05-27 03:24:51,595:INFO:             pycaret: 3.0.2
2023-05-27 03:24:51,595:INFO:             IPython: 8.12.2
2023-05-27 03:24:51,595:INFO:          ipywidgets: 8.0.6
2023-05-27 03:24:51,595:INFO:                tqdm: 4.65.0
2023-05-27 03:24:51,595:INFO:               numpy: 1.23.5
2023-05-27 03:24:51,595:INFO:              pandas: 1.5.3
2023-05-27 03:24:51,595:INFO:              jinja2: 3.1.2
2023-05-27 03:24:51,595:INFO:               scipy: 1.10.1
2023-05-27 03:24:51,595:INFO:              joblib: 1.2.0
2023-05-27 03:24:51,595:INFO:             sklearn: 1.2.2
2023-05-27 03:24:51,595:INFO:                pyod: 1.0.9
2023-05-27 03:24:51,595:INFO:            imblearn: 0.10.1
2023-05-27 03:24:51,595:INFO:   category_encoders: 2.6.1
2023-05-27 03:24:51,595:INFO:            lightgbm: 3.3.5
2023-05-27 03:24:51,595:INFO:               numba: 0.57.0
2023-05-27 03:24:51,595:INFO:            requests: 2.29.0
2023-05-27 03:24:51,595:INFO:          matplotlib: 3.7.1
2023-05-27 03:24:51,595:INFO:          scikitplot: 0.3.7
2023-05-27 03:24:51,595:INFO:         yellowbrick: 1.5
2023-05-27 03:24:51,595:INFO:              plotly: 5.14.1
2023-05-27 03:24:51,595:INFO:             kaleido: 0.2.1
2023-05-27 03:24:51,595:INFO:         statsmodels: 0.14.0
2023-05-27 03:24:51,595:INFO:              sktime: 0.17.0
2023-05-27 03:24:51,595:INFO:               tbats: 1.1.3
2023-05-27 03:24:51,595:INFO:            pmdarima: 2.0.3
2023-05-27 03:24:51,595:INFO:              psutil: 5.9.0
2023-05-27 03:24:51,595:INFO:PyCaret optional dependencies:
2023-05-27 03:24:51,595:INFO:                shap: Not installed
2023-05-27 03:24:51,595:INFO:           interpret: Not installed
2023-05-27 03:24:51,595:INFO:                umap: Not installed
2023-05-27 03:24:51,595:INFO:    pandas_profiling: Not installed
2023-05-27 03:24:51,595:INFO:  explainerdashboard: Not installed
2023-05-27 03:24:51,595:INFO:             autoviz: Not installed
2023-05-27 03:24:51,595:INFO:           fairlearn: Not installed
2023-05-27 03:24:51,595:INFO:             xgboost: Not installed
2023-05-27 03:24:51,595:INFO:            catboost: Not installed
2023-05-27 03:24:51,595:INFO:              kmodes: Not installed
2023-05-27 03:24:51,595:INFO:             mlxtend: Not installed
2023-05-27 03:24:51,595:INFO:       statsforecast: Not installed
2023-05-27 03:24:51,595:INFO:        tune_sklearn: Not installed
2023-05-27 03:24:51,595:INFO:                 ray: Not installed
2023-05-27 03:24:51,595:INFO:            hyperopt: Not installed
2023-05-27 03:24:51,595:INFO:              optuna: Not installed
2023-05-27 03:24:51,595:INFO:               skopt: Not installed
2023-05-27 03:24:51,595:INFO:              mlflow: Not installed
2023-05-27 03:24:51,595:INFO:              gradio: Not installed
2023-05-27 03:24:51,595:INFO:             fastapi: Not installed
2023-05-27 03:24:51,595:INFO:             uvicorn: Not installed
2023-05-27 03:24:51,595:INFO:              m2cgen: Not installed
2023-05-27 03:24:51,595:INFO:           evidently: Not installed
2023-05-27 03:24:51,595:INFO:               fugue: Not installed
2023-05-27 03:24:51,595:INFO:           streamlit: Not installed
2023-05-27 03:24:51,595:INFO:             prophet: Not installed
2023-05-27 03:24:51,596:INFO:None
2023-05-27 03:24:51,596:INFO:Set up data.
2023-05-27 03:24:52,035:INFO:Set up train/test split.
2023-05-27 03:24:52,357:INFO:Set up index.
2023-05-27 03:24:52,509:INFO:Set up folding strategy.
2023-05-27 03:24:52,509:INFO:Assigning column types.
2023-05-27 03:24:52,675:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:24:52,675:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,677:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,921:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:52,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:52,940:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,942:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:24:52,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,204:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:24:53,206:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,208:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,447:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,468:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,470:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,728:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,729:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:24:53,733:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:53,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:53,998:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,242:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,260:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,261:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:24:54,507:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:24:54,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:54,793:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:24:55,041:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:55,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,060:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,307:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:24:55,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,325:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:24:55,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:24:55,861:INFO:Preparing preprocessing pipeline...
2023-05-27 03:24:55,861:INFO:Set up simple imputation.
2023-05-27 03:24:55,978:INFO:Set up encoding of ordinal features.
2023-05-27 03:24:56,034:INFO:Set up encoding of categorical features.
2023-05-27 03:24:56,037:INFO:Set up feature normalization.
2023-05-27 03:24:56,064:INFO:Set up column name cleaning.
2023-05-27 03:25:45,779:INFO:PyCaret RegressionExperiment
2023-05-27 03:25:45,780:INFO:Logging name: reg-default-name
2023-05-27 03:25:45,780:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:25:45,780:INFO:version 3.0.2
2023-05-27 03:25:45,780:INFO:Initializing setup()
2023-05-27 03:25:45,780:INFO:self.USI: 1d24
2023-05-27 03:25:45,780:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:25:45,780:INFO:Checking environment
2023-05-27 03:25:45,780:INFO:python_version: 3.8.16
2023-05-27 03:25:45,780:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:25:45,780:INFO:machine: x86_64
2023-05-27 03:25:45,780:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:25:45,780:INFO:Memory: svmem(total=16378343424, available=3796987904, percent=76.8, used=11345690624, free=830943232, active=2678075392, inactive=11777503232, buffers=202776576, cached=3998932992, shared=863711232, slab=650870784)
2023-05-27 03:25:45,781:INFO:Physical Core: 10
2023-05-27 03:25:45,781:INFO:Logical Core: 16
2023-05-27 03:25:45,781:INFO:Checking libraries
2023-05-27 03:25:45,781:INFO:System:
2023-05-27 03:25:45,781:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:25:45,781:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:25:45,781:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:25:45,781:INFO:PyCaret required dependencies:
2023-05-27 03:25:45,781:INFO:                 pip: 23.0.1
2023-05-27 03:25:45,781:INFO:          setuptools: 66.0.0
2023-05-27 03:25:45,781:INFO:             pycaret: 3.0.2
2023-05-27 03:25:45,781:INFO:             IPython: 8.12.2
2023-05-27 03:25:45,781:INFO:          ipywidgets: 8.0.6
2023-05-27 03:25:45,781:INFO:                tqdm: 4.65.0
2023-05-27 03:25:45,781:INFO:               numpy: 1.23.5
2023-05-27 03:25:45,781:INFO:              pandas: 1.5.3
2023-05-27 03:25:45,781:INFO:              jinja2: 3.1.2
2023-05-27 03:25:45,781:INFO:               scipy: 1.10.1
2023-05-27 03:25:45,781:INFO:              joblib: 1.2.0
2023-05-27 03:25:45,781:INFO:             sklearn: 1.2.2
2023-05-27 03:25:45,781:INFO:                pyod: 1.0.9
2023-05-27 03:25:45,781:INFO:            imblearn: 0.10.1
2023-05-27 03:25:45,781:INFO:   category_encoders: 2.6.1
2023-05-27 03:25:45,781:INFO:            lightgbm: 3.3.5
2023-05-27 03:25:45,781:INFO:               numba: 0.57.0
2023-05-27 03:25:45,781:INFO:            requests: 2.29.0
2023-05-27 03:25:45,781:INFO:          matplotlib: 3.7.1
2023-05-27 03:25:45,781:INFO:          scikitplot: 0.3.7
2023-05-27 03:25:45,781:INFO:         yellowbrick: 1.5
2023-05-27 03:25:45,781:INFO:              plotly: 5.14.1
2023-05-27 03:25:45,781:INFO:             kaleido: 0.2.1
2023-05-27 03:25:45,781:INFO:         statsmodels: 0.14.0
2023-05-27 03:25:45,781:INFO:              sktime: 0.17.0
2023-05-27 03:25:45,781:INFO:               tbats: 1.1.3
2023-05-27 03:25:45,781:INFO:            pmdarima: 2.0.3
2023-05-27 03:25:45,781:INFO:              psutil: 5.9.0
2023-05-27 03:25:45,781:INFO:PyCaret optional dependencies:
2023-05-27 03:25:45,781:INFO:                shap: Not installed
2023-05-27 03:25:45,781:INFO:           interpret: Not installed
2023-05-27 03:25:45,781:INFO:                umap: Not installed
2023-05-27 03:25:45,781:INFO:    pandas_profiling: Not installed
2023-05-27 03:25:45,781:INFO:  explainerdashboard: Not installed
2023-05-27 03:25:45,781:INFO:             autoviz: Not installed
2023-05-27 03:25:45,781:INFO:           fairlearn: Not installed
2023-05-27 03:25:45,781:INFO:             xgboost: Not installed
2023-05-27 03:25:45,781:INFO:            catboost: Not installed
2023-05-27 03:25:45,781:INFO:              kmodes: Not installed
2023-05-27 03:25:45,781:INFO:             mlxtend: Not installed
2023-05-27 03:25:45,781:INFO:       statsforecast: Not installed
2023-05-27 03:25:45,781:INFO:        tune_sklearn: Not installed
2023-05-27 03:25:45,781:INFO:                 ray: Not installed
2023-05-27 03:25:45,781:INFO:            hyperopt: Not installed
2023-05-27 03:25:45,781:INFO:              optuna: Not installed
2023-05-27 03:25:45,781:INFO:               skopt: Not installed
2023-05-27 03:25:45,781:INFO:              mlflow: Not installed
2023-05-27 03:25:45,781:INFO:              gradio: Not installed
2023-05-27 03:25:45,781:INFO:             fastapi: Not installed
2023-05-27 03:25:45,781:INFO:             uvicorn: Not installed
2023-05-27 03:25:45,781:INFO:              m2cgen: Not installed
2023-05-27 03:25:45,781:INFO:           evidently: Not installed
2023-05-27 03:25:45,781:INFO:               fugue: Not installed
2023-05-27 03:25:45,781:INFO:           streamlit: Not installed
2023-05-27 03:25:45,781:INFO:             prophet: Not installed
2023-05-27 03:25:45,781:INFO:None
2023-05-27 03:25:45,781:INFO:Set up data.
2023-05-27 03:25:46,140:INFO:Set up train/test split.
2023-05-27 03:25:46,424:INFO:Set up index.
2023-05-27 03:25:46,531:INFO:Set up folding strategy.
2023-05-27 03:25:46,531:INFO:Assigning column types.
2023-05-27 03:25:46,686:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:25:46,687:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,689:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,691:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,959:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:46,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:46,960:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,961:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:25:46,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,215:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,234:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:25:47,236:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,238:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,523:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,525:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,790:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:47,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:47,809:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:25:47,812:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,071:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,094:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,344:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:25:48,574:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,592:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,822:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:25:48,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:48,841:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:25:49,076:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:49,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,325:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:25:49,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,344:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:25:49,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:25:49,847:INFO:Preparing preprocessing pipeline...
2023-05-27 03:25:49,847:INFO:Set up simple imputation.
2023-05-27 03:25:49,955:INFO:Set up encoding of ordinal features.
2023-05-27 03:25:50,064:INFO:Set up encoding of categorical features.
2023-05-27 03:25:50,067:INFO:Set up feature normalization.
2023-05-27 03:25:50,093:INFO:Set up column name cleaning.
2023-05-27 03:43:40,933:INFO:PyCaret RegressionExperiment
2023-05-27 03:43:40,943:INFO:Logging name: reg-default-name
2023-05-27 03:43:40,943:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:43:40,943:INFO:version 3.0.2
2023-05-27 03:43:40,943:INFO:Initializing setup()
2023-05-27 03:43:40,943:INFO:self.USI: 6a8c
2023-05-27 03:43:40,943:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:43:40,943:INFO:Checking environment
2023-05-27 03:43:40,943:INFO:python_version: 3.8.16
2023-05-27 03:43:40,943:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:43:40,943:INFO:machine: x86_64
2023-05-27 03:43:40,943:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:43:40,943:INFO:Memory: svmem(total=16378343424, available=2846019584, percent=82.6, used=12282343424, free=162078720, active=2318790656, inactive=12678017024, buffers=201035776, cached=3732885504, shared=902017024, slab=639410176)
2023-05-27 03:43:40,944:INFO:Physical Core: 10
2023-05-27 03:43:40,944:INFO:Logical Core: 16
2023-05-27 03:43:40,944:INFO:Checking libraries
2023-05-27 03:43:40,944:INFO:System:
2023-05-27 03:43:40,944:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:43:40,944:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:43:40,944:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:43:40,944:INFO:PyCaret required dependencies:
2023-05-27 03:43:40,944:INFO:                 pip: 23.0.1
2023-05-27 03:43:40,944:INFO:          setuptools: 66.0.0
2023-05-27 03:43:40,944:INFO:             pycaret: 3.0.2
2023-05-27 03:43:40,944:INFO:             IPython: 8.12.2
2023-05-27 03:43:40,944:INFO:          ipywidgets: 8.0.6
2023-05-27 03:43:40,944:INFO:                tqdm: 4.65.0
2023-05-27 03:43:40,944:INFO:               numpy: 1.23.5
2023-05-27 03:43:40,944:INFO:              pandas: 1.5.3
2023-05-27 03:43:40,944:INFO:              jinja2: 3.1.2
2023-05-27 03:43:40,944:INFO:               scipy: 1.10.1
2023-05-27 03:43:40,944:INFO:              joblib: 1.2.0
2023-05-27 03:43:40,944:INFO:             sklearn: 1.2.2
2023-05-27 03:43:40,944:INFO:                pyod: 1.0.9
2023-05-27 03:43:40,944:INFO:            imblearn: 0.10.1
2023-05-27 03:43:40,944:INFO:   category_encoders: 2.6.1
2023-05-27 03:43:40,944:INFO:            lightgbm: 3.3.5
2023-05-27 03:43:40,944:INFO:               numba: 0.57.0
2023-05-27 03:43:40,944:INFO:            requests: 2.29.0
2023-05-27 03:43:40,944:INFO:          matplotlib: 3.7.1
2023-05-27 03:43:40,944:INFO:          scikitplot: 0.3.7
2023-05-27 03:43:40,944:INFO:         yellowbrick: 1.5
2023-05-27 03:43:40,944:INFO:              plotly: 5.14.1
2023-05-27 03:43:40,944:INFO:             kaleido: 0.2.1
2023-05-27 03:43:40,944:INFO:         statsmodels: 0.14.0
2023-05-27 03:43:40,944:INFO:              sktime: 0.17.0
2023-05-27 03:43:40,944:INFO:               tbats: 1.1.3
2023-05-27 03:43:40,944:INFO:            pmdarima: 2.0.3
2023-05-27 03:43:40,944:INFO:              psutil: 5.9.0
2023-05-27 03:43:40,944:INFO:PyCaret optional dependencies:
2023-05-27 03:43:40,944:INFO:                shap: Not installed
2023-05-27 03:43:40,944:INFO:           interpret: Not installed
2023-05-27 03:43:40,944:INFO:                umap: Not installed
2023-05-27 03:43:40,944:INFO:    pandas_profiling: Not installed
2023-05-27 03:43:40,944:INFO:  explainerdashboard: Not installed
2023-05-27 03:43:40,944:INFO:             autoviz: Not installed
2023-05-27 03:43:40,944:INFO:           fairlearn: Not installed
2023-05-27 03:43:40,944:INFO:             xgboost: Not installed
2023-05-27 03:43:40,944:INFO:            catboost: Not installed
2023-05-27 03:43:40,944:INFO:              kmodes: Not installed
2023-05-27 03:43:40,944:INFO:             mlxtend: Not installed
2023-05-27 03:43:40,944:INFO:       statsforecast: Not installed
2023-05-27 03:43:40,944:INFO:        tune_sklearn: Not installed
2023-05-27 03:43:40,944:INFO:                 ray: Not installed
2023-05-27 03:43:40,944:INFO:            hyperopt: Not installed
2023-05-27 03:43:40,944:INFO:              optuna: Not installed
2023-05-27 03:43:40,944:INFO:               skopt: Not installed
2023-05-27 03:43:40,944:INFO:              mlflow: Not installed
2023-05-27 03:43:40,944:INFO:              gradio: Not installed
2023-05-27 03:43:40,944:INFO:             fastapi: Not installed
2023-05-27 03:43:40,944:INFO:             uvicorn: Not installed
2023-05-27 03:43:40,944:INFO:              m2cgen: Not installed
2023-05-27 03:43:40,944:INFO:           evidently: Not installed
2023-05-27 03:43:40,944:INFO:               fugue: Not installed
2023-05-27 03:43:40,944:INFO:           streamlit: Not installed
2023-05-27 03:43:40,944:INFO:             prophet: Not installed
2023-05-27 03:43:40,944:INFO:None
2023-05-27 03:43:40,944:INFO:Set up data.
2023-05-27 03:43:41,696:INFO:Set up train/test split.
2023-05-27 03:43:42,058:INFO:Set up index.
2023-05-27 03:43:42,261:INFO:Set up folding strategy.
2023-05-27 03:43:42,261:INFO:Assigning column types.
2023-05-27 03:43:42,416:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 03:43:42,416:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,418:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,420:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,664:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:42,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:42,665:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,667:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,669:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:42,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:42,919:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 03:43:42,921:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:43:42,923:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,173:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,196:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,458:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,458:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 03:43:43,462:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,712:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,716:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:43,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:43,965:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 03:43:44,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,454:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,473:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,473:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 03:43:44,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,962:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 03:43:44,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:44,981:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 03:43:45,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:45,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:45,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:45,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 03:43:45,492:INFO:Preparing preprocessing pipeline...
2023-05-27 03:43:45,492:INFO:Set up simple imputation.
2023-05-27 03:43:45,601:INFO:Set up encoding of ordinal features.
2023-05-27 03:43:45,779:INFO:Set up encoding of categorical features.
2023-05-27 03:43:45,782:INFO:Set up feature normalization.
2023-05-27 03:43:45,808:INFO:Set up column name cleaning.
2023-05-27 03:45:08,395:INFO:PyCaret RegressionExperiment
2023-05-27 03:45:08,405:INFO:Logging name: reg-default-name
2023-05-27 03:45:08,405:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:45:08,405:INFO:version 3.0.2
2023-05-27 03:45:08,405:INFO:Initializing setup()
2023-05-27 03:45:08,405:INFO:self.USI: ccff
2023-05-27 03:45:08,405:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:45:08,405:INFO:Checking environment
2023-05-27 03:45:08,405:INFO:python_version: 3.8.16
2023-05-27 03:45:08,405:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:45:08,405:INFO:machine: x86_64
2023-05-27 03:45:08,405:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:45:08,405:INFO:Memory: svmem(total=16378343424, available=2228137984, percent=86.4, used=12911980544, free=342540288, active=1824718848, inactive=13132939264, buffers=170909696, cached=2952912896, shared=880787456, slab=624041984)
2023-05-27 03:45:08,405:INFO:Physical Core: 10
2023-05-27 03:45:08,405:INFO:Logical Core: 16
2023-05-27 03:45:08,405:INFO:Checking libraries
2023-05-27 03:45:08,405:INFO:System:
2023-05-27 03:45:08,405:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:45:08,405:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:45:08,406:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:45:08,406:INFO:PyCaret required dependencies:
2023-05-27 03:45:08,406:INFO:                 pip: 23.0.1
2023-05-27 03:45:08,406:INFO:          setuptools: 66.0.0
2023-05-27 03:45:08,406:INFO:             pycaret: 3.0.2
2023-05-27 03:45:08,406:INFO:             IPython: 8.12.2
2023-05-27 03:45:08,406:INFO:          ipywidgets: 8.0.6
2023-05-27 03:45:08,406:INFO:                tqdm: 4.65.0
2023-05-27 03:45:08,406:INFO:               numpy: 1.23.5
2023-05-27 03:45:08,406:INFO:              pandas: 1.5.3
2023-05-27 03:45:08,406:INFO:              jinja2: 3.1.2
2023-05-27 03:45:08,406:INFO:               scipy: 1.10.1
2023-05-27 03:45:08,406:INFO:              joblib: 1.2.0
2023-05-27 03:45:08,406:INFO:             sklearn: 1.2.2
2023-05-27 03:45:08,406:INFO:                pyod: 1.0.9
2023-05-27 03:45:08,406:INFO:            imblearn: 0.10.1
2023-05-27 03:45:08,406:INFO:   category_encoders: 2.6.1
2023-05-27 03:45:08,406:INFO:            lightgbm: 3.3.5
2023-05-27 03:45:08,406:INFO:               numba: 0.57.0
2023-05-27 03:45:08,406:INFO:            requests: 2.29.0
2023-05-27 03:45:08,406:INFO:          matplotlib: 3.7.1
2023-05-27 03:45:08,406:INFO:          scikitplot: 0.3.7
2023-05-27 03:45:08,406:INFO:         yellowbrick: 1.5
2023-05-27 03:45:08,406:INFO:              plotly: 5.14.1
2023-05-27 03:45:08,406:INFO:             kaleido: 0.2.1
2023-05-27 03:45:08,406:INFO:         statsmodels: 0.14.0
2023-05-27 03:45:08,406:INFO:              sktime: 0.17.0
2023-05-27 03:45:08,406:INFO:               tbats: 1.1.3
2023-05-27 03:45:08,406:INFO:            pmdarima: 2.0.3
2023-05-27 03:45:08,406:INFO:              psutil: 5.9.0
2023-05-27 03:45:08,406:INFO:PyCaret optional dependencies:
2023-05-27 03:45:08,406:INFO:                shap: Not installed
2023-05-27 03:45:08,406:INFO:           interpret: Not installed
2023-05-27 03:45:08,406:INFO:                umap: Not installed
2023-05-27 03:45:08,406:INFO:    pandas_profiling: Not installed
2023-05-27 03:45:08,406:INFO:  explainerdashboard: Not installed
2023-05-27 03:45:08,406:INFO:             autoviz: Not installed
2023-05-27 03:45:08,406:INFO:           fairlearn: Not installed
2023-05-27 03:45:08,406:INFO:             xgboost: Not installed
2023-05-27 03:45:08,406:INFO:            catboost: Not installed
2023-05-27 03:45:08,406:INFO:              kmodes: Not installed
2023-05-27 03:45:08,406:INFO:             mlxtend: Not installed
2023-05-27 03:45:08,406:INFO:       statsforecast: Not installed
2023-05-27 03:45:08,406:INFO:        tune_sklearn: Not installed
2023-05-27 03:45:08,406:INFO:                 ray: Not installed
2023-05-27 03:45:08,406:INFO:            hyperopt: Not installed
2023-05-27 03:45:08,406:INFO:              optuna: Not installed
2023-05-27 03:45:08,406:INFO:               skopt: Not installed
2023-05-27 03:45:08,406:INFO:              mlflow: Not installed
2023-05-27 03:45:08,406:INFO:              gradio: Not installed
2023-05-27 03:45:08,406:INFO:             fastapi: Not installed
2023-05-27 03:45:08,406:INFO:             uvicorn: Not installed
2023-05-27 03:45:08,406:INFO:              m2cgen: Not installed
2023-05-27 03:45:08,406:INFO:           evidently: Not installed
2023-05-27 03:45:08,406:INFO:               fugue: Not installed
2023-05-27 03:45:08,406:INFO:           streamlit: Not installed
2023-05-27 03:45:08,406:INFO:             prophet: Not installed
2023-05-27 03:45:08,406:INFO:None
2023-05-27 03:45:08,406:INFO:Set up data.
2023-05-27 03:47:13,749:INFO:PyCaret RegressionExperiment
2023-05-27 03:47:13,750:INFO:Logging name: reg-default-name
2023-05-27 03:47:13,750:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:47:13,750:INFO:version 3.0.2
2023-05-27 03:47:13,750:INFO:Initializing setup()
2023-05-27 03:47:13,750:INFO:self.USI: 107a
2023-05-27 03:47:13,750:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:47:13,750:INFO:Checking environment
2023-05-27 03:47:13,750:INFO:python_version: 3.8.16
2023-05-27 03:47:13,750:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:47:13,750:INFO:machine: x86_64
2023-05-27 03:47:13,750:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:47:13,750:INFO:Memory: svmem(total=16378343424, available=1736871936, percent=89.4, used=13326381056, free=223457280, active=1811169280, inactive=13289254912, buffers=167714816, cached=2660790272, shared=957714432, slab=618508288)
2023-05-27 03:47:13,750:INFO:Physical Core: 10
2023-05-27 03:47:13,750:INFO:Logical Core: 16
2023-05-27 03:47:13,750:INFO:Checking libraries
2023-05-27 03:47:13,750:INFO:System:
2023-05-27 03:47:13,750:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:47:13,750:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:47:13,750:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:47:13,750:INFO:PyCaret required dependencies:
2023-05-27 03:47:13,750:INFO:                 pip: 23.0.1
2023-05-27 03:47:13,750:INFO:          setuptools: 66.0.0
2023-05-27 03:47:13,750:INFO:             pycaret: 3.0.2
2023-05-27 03:47:13,750:INFO:             IPython: 8.12.2
2023-05-27 03:47:13,750:INFO:          ipywidgets: 8.0.6
2023-05-27 03:47:13,750:INFO:                tqdm: 4.65.0
2023-05-27 03:47:13,750:INFO:               numpy: 1.23.5
2023-05-27 03:47:13,750:INFO:              pandas: 1.5.3
2023-05-27 03:47:13,750:INFO:              jinja2: 3.1.2
2023-05-27 03:47:13,750:INFO:               scipy: 1.10.1
2023-05-27 03:47:13,750:INFO:              joblib: 1.2.0
2023-05-27 03:47:13,750:INFO:             sklearn: 1.2.2
2023-05-27 03:47:13,750:INFO:                pyod: 1.0.9
2023-05-27 03:47:13,750:INFO:            imblearn: 0.10.1
2023-05-27 03:47:13,750:INFO:   category_encoders: 2.6.1
2023-05-27 03:47:13,750:INFO:            lightgbm: 3.3.5
2023-05-27 03:47:13,750:INFO:               numba: 0.57.0
2023-05-27 03:47:13,750:INFO:            requests: 2.29.0
2023-05-27 03:47:13,750:INFO:          matplotlib: 3.7.1
2023-05-27 03:47:13,750:INFO:          scikitplot: 0.3.7
2023-05-27 03:47:13,750:INFO:         yellowbrick: 1.5
2023-05-27 03:47:13,750:INFO:              plotly: 5.14.1
2023-05-27 03:47:13,750:INFO:             kaleido: 0.2.1
2023-05-27 03:47:13,750:INFO:         statsmodels: 0.14.0
2023-05-27 03:47:13,750:INFO:              sktime: 0.17.0
2023-05-27 03:47:13,750:INFO:               tbats: 1.1.3
2023-05-27 03:47:13,750:INFO:            pmdarima: 2.0.3
2023-05-27 03:47:13,750:INFO:              psutil: 5.9.0
2023-05-27 03:47:13,750:INFO:PyCaret optional dependencies:
2023-05-27 03:47:13,750:INFO:                shap: Not installed
2023-05-27 03:47:13,750:INFO:           interpret: Not installed
2023-05-27 03:47:13,750:INFO:                umap: Not installed
2023-05-27 03:47:13,750:INFO:    pandas_profiling: Not installed
2023-05-27 03:47:13,750:INFO:  explainerdashboard: Not installed
2023-05-27 03:47:13,750:INFO:             autoviz: Not installed
2023-05-27 03:47:13,750:INFO:           fairlearn: Not installed
2023-05-27 03:47:13,750:INFO:             xgboost: Not installed
2023-05-27 03:47:13,750:INFO:            catboost: Not installed
2023-05-27 03:47:13,750:INFO:              kmodes: Not installed
2023-05-27 03:47:13,750:INFO:             mlxtend: Not installed
2023-05-27 03:47:13,751:INFO:       statsforecast: Not installed
2023-05-27 03:47:13,751:INFO:        tune_sklearn: Not installed
2023-05-27 03:47:13,751:INFO:                 ray: Not installed
2023-05-27 03:47:13,751:INFO:            hyperopt: Not installed
2023-05-27 03:47:13,751:INFO:              optuna: Not installed
2023-05-27 03:47:13,751:INFO:               skopt: Not installed
2023-05-27 03:47:13,751:INFO:              mlflow: Not installed
2023-05-27 03:47:13,751:INFO:              gradio: Not installed
2023-05-27 03:47:13,751:INFO:             fastapi: Not installed
2023-05-27 03:47:13,751:INFO:             uvicorn: Not installed
2023-05-27 03:47:13,751:INFO:              m2cgen: Not installed
2023-05-27 03:47:13,751:INFO:           evidently: Not installed
2023-05-27 03:47:13,751:INFO:               fugue: Not installed
2023-05-27 03:47:13,751:INFO:           streamlit: Not installed
2023-05-27 03:47:13,751:INFO:             prophet: Not installed
2023-05-27 03:47:13,751:INFO:None
2023-05-27 03:47:13,751:INFO:Set up data.
2023-05-27 03:47:14,513:INFO:Set up train/test split.
2023-05-27 03:47:14,861:INFO:Set up index.
2023-05-27 03:47:15,038:INFO:Set up folding strategy.
2023-05-27 03:47:15,038:INFO:Assigning column types.
2023-05-27 03:47:50,931:INFO:PyCaret RegressionExperiment
2023-05-27 03:47:50,931:INFO:Logging name: reg-default-name
2023-05-27 03:47:50,931:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 03:47:50,931:INFO:version 3.0.2
2023-05-27 03:47:50,931:INFO:Initializing setup()
2023-05-27 03:47:50,931:INFO:self.USI: a2c0
2023-05-27 03:47:50,931:INFO:self._variable_keys: {'_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'X', 'X_train', 'html_param', '_available_plots', 'data', 'X_test', 'y_test', 'exp_name_log', 'transform_target_param', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', 'logging_param', 'fold_generator', 'exp_id', 'y_train', 'target_param', 'n_jobs_param', 'seed', 'USI', 'idx', 'y'}
2023-05-27 03:47:50,931:INFO:Checking environment
2023-05-27 03:47:50,931:INFO:python_version: 3.8.16
2023-05-27 03:47:50,931:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 03:47:50,931:INFO:machine: x86_64
2023-05-27 03:47:50,931:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:47:50,931:INFO:Memory: svmem(total=16378343424, available=1485348864, percent=90.9, used=13630816256, free=476274688, active=1570873344, inactive=13283160064, buffers=162504704, cached=2108747776, shared=898748416, slab=612741120)
2023-05-27 03:47:50,931:INFO:Physical Core: 10
2023-05-27 03:47:50,931:INFO:Logical Core: 16
2023-05-27 03:47:50,931:INFO:Checking libraries
2023-05-27 03:47:50,931:INFO:System:
2023-05-27 03:47:50,931:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 03:47:50,931:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 03:47:50,931:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 03:47:50,931:INFO:PyCaret required dependencies:
2023-05-27 03:47:50,931:INFO:                 pip: 23.0.1
2023-05-27 03:47:50,931:INFO:          setuptools: 66.0.0
2023-05-27 03:47:50,931:INFO:             pycaret: 3.0.2
2023-05-27 03:47:50,931:INFO:             IPython: 8.12.2
2023-05-27 03:47:50,931:INFO:          ipywidgets: 8.0.6
2023-05-27 03:47:50,931:INFO:                tqdm: 4.65.0
2023-05-27 03:47:50,931:INFO:               numpy: 1.23.5
2023-05-27 03:47:50,931:INFO:              pandas: 1.5.3
2023-05-27 03:47:50,931:INFO:              jinja2: 3.1.2
2023-05-27 03:47:50,931:INFO:               scipy: 1.10.1
2023-05-27 03:47:50,931:INFO:              joblib: 1.2.0
2023-05-27 03:47:50,931:INFO:             sklearn: 1.2.2
2023-05-27 03:47:50,931:INFO:                pyod: 1.0.9
2023-05-27 03:47:50,931:INFO:            imblearn: 0.10.1
2023-05-27 03:47:50,931:INFO:   category_encoders: 2.6.1
2023-05-27 03:47:50,931:INFO:            lightgbm: 3.3.5
2023-05-27 03:47:50,931:INFO:               numba: 0.57.0
2023-05-27 03:47:50,931:INFO:            requests: 2.29.0
2023-05-27 03:47:50,932:INFO:          matplotlib: 3.7.1
2023-05-27 03:47:50,932:INFO:          scikitplot: 0.3.7
2023-05-27 03:47:50,932:INFO:         yellowbrick: 1.5
2023-05-27 03:47:50,932:INFO:              plotly: 5.14.1
2023-05-27 03:47:50,932:INFO:             kaleido: 0.2.1
2023-05-27 03:47:50,932:INFO:         statsmodels: 0.14.0
2023-05-27 03:47:50,932:INFO:              sktime: 0.17.0
2023-05-27 03:47:50,932:INFO:               tbats: 1.1.3
2023-05-27 03:47:50,932:INFO:            pmdarima: 2.0.3
2023-05-27 03:47:50,932:INFO:              psutil: 5.9.0
2023-05-27 03:47:50,932:INFO:PyCaret optional dependencies:
2023-05-27 03:47:50,932:INFO:                shap: Not installed
2023-05-27 03:47:50,932:INFO:           interpret: Not installed
2023-05-27 03:47:50,932:INFO:                umap: Not installed
2023-05-27 03:47:50,932:INFO:    pandas_profiling: Not installed
2023-05-27 03:47:50,932:INFO:  explainerdashboard: Not installed
2023-05-27 03:47:50,932:INFO:             autoviz: Not installed
2023-05-27 03:47:50,932:INFO:           fairlearn: Not installed
2023-05-27 03:47:50,932:INFO:             xgboost: Not installed
2023-05-27 03:47:50,932:INFO:            catboost: Not installed
2023-05-27 03:47:50,932:INFO:              kmodes: Not installed
2023-05-27 03:47:50,932:INFO:             mlxtend: Not installed
2023-05-27 03:47:50,932:INFO:       statsforecast: Not installed
2023-05-27 03:47:50,932:INFO:        tune_sklearn: Not installed
2023-05-27 03:47:50,932:INFO:                 ray: Not installed
2023-05-27 03:47:50,932:INFO:            hyperopt: Not installed
2023-05-27 03:47:50,932:INFO:              optuna: Not installed
2023-05-27 03:47:50,932:INFO:               skopt: Not installed
2023-05-27 03:47:50,932:INFO:              mlflow: Not installed
2023-05-27 03:47:50,932:INFO:              gradio: Not installed
2023-05-27 03:47:50,932:INFO:             fastapi: Not installed
2023-05-27 03:47:50,932:INFO:             uvicorn: Not installed
2023-05-27 03:47:50,932:INFO:              m2cgen: Not installed
2023-05-27 03:47:50,932:INFO:           evidently: Not installed
2023-05-27 03:47:50,932:INFO:               fugue: Not installed
2023-05-27 03:47:50,932:INFO:           streamlit: Not installed
2023-05-27 03:47:50,932:INFO:             prophet: Not installed
2023-05-27 03:47:50,932:INFO:None
2023-05-27 03:47:50,932:INFO:Set up data.
2023-05-27 03:47:51,867:INFO:Set up train/test split.
2023-05-27 03:47:52,400:INFO:Set up index.
2023-05-27 03:47:52,660:INFO:Set up folding strategy.
2023-05-27 03:47:52,660:INFO:Assigning column types.
2023-05-27 22:03:05,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:03:05,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:03:05,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:03:05,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:03:05,465:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 22:25:11,146:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:74: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  all_source_names = [cur_name for cur_name, cur_series in source_df.iteritems()]

2023-05-27 22:25:11,149:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/dataframe_report.py:109: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  filtered_series_names_in_source = [cur_name for cur_name, cur_series in source_df.iteritems()

2023-05-27 22:25:12,615:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:12,788:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 22:25:12,835:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,028:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,268:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,408:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,530:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,719:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:13,912:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:14,255:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:14,384:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:14,724:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:15,164:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,274:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,402:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,666:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,776:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:15,889:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:16,024:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:16,152:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:16,278:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:16,406:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:16,920:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_text.py:19: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in to_process.source_counts["value_counts_without_nan"].iteritems():

2023-05-27 22:25:17,479:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:17,831:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:18,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:18,518:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:18,877:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:19,071:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:19,429:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:19,789:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_numeric.py:25: FutureWarning: The 'mad' method is deprecated and will be removed in a future version. To compute the same result, you may do `(df - df.mean()).abs().mean()`.
  stats["mad"] = series.mad()

2023-05-27 22:25:20,163:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:20,316:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:20,438:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:20,557:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:20,677:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:20,792:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,058:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,177:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,294:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,411:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,532:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,650:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,766:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:21,891:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,013:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,122:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,231:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,345:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,448:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,561:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,672:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,785:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:22,898:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,007:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,119:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,228:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,339:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,452:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,568:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,801:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:23,917:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,030:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,145:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,279:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,489:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,600:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,710:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,807:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:24,996:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,226:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,341:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,453:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,568:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,679:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,786:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:25,901:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,040:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,134:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,427:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,546:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,663:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,770:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,885:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:26,999:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,115:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,230:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,344:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,460:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,576:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,692:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,809:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:27,942:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,059:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,175:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,291:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,405:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,512:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,739:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,855:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:28,969:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,195:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,309:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,428:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,544:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,656:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,773:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:29,890:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,004:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,124:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,234:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,353:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,469:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,594:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,716:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,841:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:30,962:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,086:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,205:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,328:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,447:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,569:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,691:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,815:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:31,938:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:32,073:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:32,194:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:32,312:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:32,434:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:25:32,556:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/sweetviz/series_analyzer_cat.py:28: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.
  for item in category_counts.iteritems():

2023-05-27 22:37:19,280:INFO:PyCaret RegressionExperiment
2023-05-27 22:37:19,280:INFO:Logging name: reg-default-name
2023-05-27 22:37:19,280:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:37:19,280:INFO:version 3.0.2
2023-05-27 22:37:19,280:INFO:Initializing setup()
2023-05-27 22:37:19,280:INFO:self.USI: 25b6
2023-05-27 22:37:19,280:INFO:self._variable_keys: {'y', 'log_plots_param', 'memory', 'n_jobs_param', 'USI', 'fold_shuffle_param', 'fold_groups_param', 'X_train', 'y_train', 'html_param', 'y_test', 'data', '_available_plots', 'gpu_param', 'pipeline', 'seed', 'exp_id', 'idx', 'X', 'fold_generator', 'X_test', 'target_param', 'transform_target_param', '_ml_usecase', 'gpu_n_jobs_param', 'logging_param', 'exp_name_log'}
2023-05-27 22:37:19,280:INFO:Checking environment
2023-05-27 22:37:19,280:INFO:python_version: 3.8.16
2023-05-27 22:37:19,280:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:37:19,280:INFO:machine: x86_64
2023-05-27 22:37:19,280:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:37:19,281:INFO:Memory: svmem(total=16378343424, available=3201335296, percent=80.5, used=11276406784, free=973189120, active=6788136960, inactive=7063883776, buffers=84279296, cached=4044468224, shared=1376108544, slab=652738560)
2023-05-27 22:37:19,282:INFO:Physical Core: 10
2023-05-27 22:37:19,282:INFO:Logical Core: 16
2023-05-27 22:37:19,282:INFO:Checking libraries
2023-05-27 22:37:19,282:INFO:System:
2023-05-27 22:37:19,282:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:37:19,282:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:37:19,282:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:37:19,282:INFO:PyCaret required dependencies:
2023-05-27 22:37:19,282:INFO:                 pip: 23.0.1
2023-05-27 22:37:19,282:INFO:          setuptools: 66.0.0
2023-05-27 22:37:19,282:INFO:             pycaret: 3.0.2
2023-05-27 22:37:19,282:INFO:             IPython: 8.12.2
2023-05-27 22:37:19,282:INFO:          ipywidgets: 8.0.6
2023-05-27 22:37:19,282:INFO:                tqdm: 4.65.0
2023-05-27 22:37:19,282:INFO:               numpy: 1.23.5
2023-05-27 22:37:19,282:INFO:              pandas: 1.5.3
2023-05-27 22:37:19,282:INFO:              jinja2: 3.1.2
2023-05-27 22:37:19,282:INFO:               scipy: 1.10.1
2023-05-27 22:37:19,282:INFO:              joblib: 1.2.0
2023-05-27 22:37:19,282:INFO:             sklearn: 1.2.2
2023-05-27 22:37:19,282:INFO:                pyod: 1.0.9
2023-05-27 22:37:19,282:INFO:            imblearn: 0.10.1
2023-05-27 22:37:19,282:INFO:   category_encoders: 2.6.1
2023-05-27 22:37:19,282:INFO:            lightgbm: 3.3.5
2023-05-27 22:37:19,282:INFO:               numba: 0.57.0
2023-05-27 22:37:19,282:INFO:            requests: 2.29.0
2023-05-27 22:37:19,282:INFO:          matplotlib: 3.7.1
2023-05-27 22:37:19,282:INFO:          scikitplot: 0.3.7
2023-05-27 22:37:19,282:INFO:         yellowbrick: 1.5
2023-05-27 22:37:19,282:INFO:              plotly: 5.14.1
2023-05-27 22:37:19,282:INFO:             kaleido: 0.2.1
2023-05-27 22:37:19,282:INFO:         statsmodels: 0.14.0
2023-05-27 22:37:19,283:INFO:              sktime: 0.17.0
2023-05-27 22:37:19,283:INFO:               tbats: 1.1.3
2023-05-27 22:37:19,283:INFO:            pmdarima: 2.0.3
2023-05-27 22:37:19,283:INFO:              psutil: 5.9.0
2023-05-27 22:37:19,283:INFO:PyCaret optional dependencies:
2023-05-27 22:37:19,300:INFO:                shap: Not installed
2023-05-27 22:37:19,300:INFO:           interpret: Not installed
2023-05-27 22:37:19,301:INFO:                umap: Not installed
2023-05-27 22:37:19,301:INFO:    pandas_profiling: Not installed
2023-05-27 22:37:19,301:INFO:  explainerdashboard: Not installed
2023-05-27 22:37:19,301:INFO:             autoviz: Not installed
2023-05-27 22:37:19,301:INFO:           fairlearn: Not installed
2023-05-27 22:37:19,301:INFO:             xgboost: Not installed
2023-05-27 22:37:19,301:INFO:            catboost: Not installed
2023-05-27 22:37:19,301:INFO:              kmodes: Not installed
2023-05-27 22:37:19,301:INFO:             mlxtend: Not installed
2023-05-27 22:37:19,301:INFO:       statsforecast: Not installed
2023-05-27 22:37:19,301:INFO:        tune_sklearn: Not installed
2023-05-27 22:37:19,301:INFO:                 ray: Not installed
2023-05-27 22:37:19,301:INFO:            hyperopt: Not installed
2023-05-27 22:37:19,301:INFO:              optuna: Not installed
2023-05-27 22:37:19,301:INFO:               skopt: Not installed
2023-05-27 22:37:19,301:INFO:              mlflow: Not installed
2023-05-27 22:37:19,301:INFO:              gradio: Not installed
2023-05-27 22:37:19,301:INFO:             fastapi: Not installed
2023-05-27 22:37:19,301:INFO:             uvicorn: Not installed
2023-05-27 22:37:19,301:INFO:              m2cgen: Not installed
2023-05-27 22:37:19,301:INFO:           evidently: Not installed
2023-05-27 22:37:19,301:INFO:               fugue: Not installed
2023-05-27 22:37:19,301:INFO:           streamlit: Not installed
2023-05-27 22:37:19,301:INFO:             prophet: Not installed
2023-05-27 22:37:19,301:INFO:None
2023-05-27 22:37:19,301:INFO:Set up data.
2023-05-27 22:37:19,852:INFO:Set up train/test split.
2023-05-27 22:37:20,182:INFO:Set up index.
2023-05-27 22:37:20,192:INFO:Set up folding strategy.
2023-05-27 22:37:20,192:INFO:Assigning column types.
2023-05-27 22:37:20,390:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:37:20,390:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,394:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,396:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,629:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:20,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:20,685:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,688:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,691:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,918:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:20,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:20,949:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:37:20,952:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:37:20,956:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,178:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,210:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,441:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,468:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:37:21,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,953:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:21,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:21,982:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:37:22,217:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:22,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:22,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:22,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:37:22,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,502:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:37:22,736:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:22,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:22,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:37:23,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,025:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:37:23,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:37:23,550:INFO:Preparing preprocessing pipeline...
2023-05-27 22:37:23,550:INFO:Set up simple imputation.
2023-05-27 22:37:23,694:INFO:Set up encoding of ordinal features.
2023-05-27 22:37:23,824:INFO:Set up encoding of categorical features.
2023-05-27 22:37:23,826:INFO:Set up column transformation.
2023-05-27 22:37:23,826:INFO:Set up feature normalization.
2023-05-27 22:37:23,843:INFO:Set up column name cleaning.
2023-05-27 22:39:19,594:INFO:PyCaret RegressionExperiment
2023-05-27 22:39:19,594:INFO:Logging name: reg-default-name
2023-05-27 22:39:19,594:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:39:19,594:INFO:version 3.0.2
2023-05-27 22:39:19,594:INFO:Initializing setup()
2023-05-27 22:39:19,594:INFO:self.USI: e6d9
2023-05-27 22:39:19,594:INFO:self._variable_keys: {'y', 'log_plots_param', 'memory', 'n_jobs_param', 'USI', 'fold_shuffle_param', 'fold_groups_param', 'X_train', 'y_train', 'html_param', 'y_test', 'data', '_available_plots', 'gpu_param', 'pipeline', 'seed', 'exp_id', 'idx', 'X', 'fold_generator', 'X_test', 'target_param', 'transform_target_param', '_ml_usecase', 'gpu_n_jobs_param', 'logging_param', 'exp_name_log'}
2023-05-27 22:39:19,594:INFO:Checking environment
2023-05-27 22:39:19,594:INFO:python_version: 3.8.16
2023-05-27 22:39:19,595:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:39:19,595:INFO:machine: x86_64
2023-05-27 22:39:19,595:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:39:19,595:INFO:Memory: svmem(total=16378343424, available=3550482432, percent=78.3, used=11055906816, free=2631892992, active=6030114816, inactive=6414340096, buffers=21413888, cached=2669129728, shared=1419227136, slab=639180800)
2023-05-27 22:39:19,595:INFO:Physical Core: 10
2023-05-27 22:39:19,595:INFO:Logical Core: 16
2023-05-27 22:39:19,595:INFO:Checking libraries
2023-05-27 22:39:19,595:INFO:System:
2023-05-27 22:39:19,595:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:39:19,595:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:39:19,595:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:39:19,595:INFO:PyCaret required dependencies:
2023-05-27 22:39:19,595:INFO:                 pip: 23.0.1
2023-05-27 22:39:19,595:INFO:          setuptools: 66.0.0
2023-05-27 22:39:19,595:INFO:             pycaret: 3.0.2
2023-05-27 22:39:19,595:INFO:             IPython: 8.12.2
2023-05-27 22:39:19,595:INFO:          ipywidgets: 8.0.6
2023-05-27 22:39:19,595:INFO:                tqdm: 4.65.0
2023-05-27 22:39:19,595:INFO:               numpy: 1.23.5
2023-05-27 22:39:19,595:INFO:              pandas: 1.5.3
2023-05-27 22:39:19,595:INFO:              jinja2: 3.1.2
2023-05-27 22:39:19,596:INFO:               scipy: 1.10.1
2023-05-27 22:39:19,596:INFO:              joblib: 1.2.0
2023-05-27 22:39:19,596:INFO:             sklearn: 1.2.2
2023-05-27 22:39:19,596:INFO:                pyod: 1.0.9
2023-05-27 22:39:19,596:INFO:            imblearn: 0.10.1
2023-05-27 22:39:19,596:INFO:   category_encoders: 2.6.1
2023-05-27 22:39:19,596:INFO:            lightgbm: 3.3.5
2023-05-27 22:39:19,596:INFO:               numba: 0.57.0
2023-05-27 22:39:19,596:INFO:            requests: 2.29.0
2023-05-27 22:39:19,596:INFO:          matplotlib: 3.7.1
2023-05-27 22:39:19,596:INFO:          scikitplot: 0.3.7
2023-05-27 22:39:19,596:INFO:         yellowbrick: 1.5
2023-05-27 22:39:19,596:INFO:              plotly: 5.14.1
2023-05-27 22:39:19,596:INFO:             kaleido: 0.2.1
2023-05-27 22:39:19,596:INFO:         statsmodels: 0.14.0
2023-05-27 22:39:19,596:INFO:              sktime: 0.17.0
2023-05-27 22:39:19,596:INFO:               tbats: 1.1.3
2023-05-27 22:39:19,596:INFO:            pmdarima: 2.0.3
2023-05-27 22:39:19,596:INFO:              psutil: 5.9.0
2023-05-27 22:39:19,596:INFO:PyCaret optional dependencies:
2023-05-27 22:39:19,596:INFO:                shap: Not installed
2023-05-27 22:39:19,596:INFO:           interpret: Not installed
2023-05-27 22:39:19,596:INFO:                umap: Not installed
2023-05-27 22:39:19,596:INFO:    pandas_profiling: Not installed
2023-05-27 22:39:19,596:INFO:  explainerdashboard: Not installed
2023-05-27 22:39:19,596:INFO:             autoviz: Not installed
2023-05-27 22:39:19,596:INFO:           fairlearn: Not installed
2023-05-27 22:39:19,596:INFO:             xgboost: Not installed
2023-05-27 22:39:19,596:INFO:            catboost: Not installed
2023-05-27 22:39:19,596:INFO:              kmodes: Not installed
2023-05-27 22:39:19,596:INFO:             mlxtend: Not installed
2023-05-27 22:39:19,596:INFO:       statsforecast: Not installed
2023-05-27 22:39:19,596:INFO:        tune_sklearn: Not installed
2023-05-27 22:39:19,596:INFO:                 ray: Not installed
2023-05-27 22:39:19,596:INFO:            hyperopt: Not installed
2023-05-27 22:39:19,596:INFO:              optuna: Not installed
2023-05-27 22:39:19,596:INFO:               skopt: Not installed
2023-05-27 22:39:19,596:INFO:              mlflow: Not installed
2023-05-27 22:39:19,596:INFO:              gradio: Not installed
2023-05-27 22:39:19,596:INFO:             fastapi: Not installed
2023-05-27 22:39:19,596:INFO:             uvicorn: Not installed
2023-05-27 22:39:19,596:INFO:              m2cgen: Not installed
2023-05-27 22:39:19,596:INFO:           evidently: Not installed
2023-05-27 22:39:19,596:INFO:               fugue: Not installed
2023-05-27 22:39:19,596:INFO:           streamlit: Not installed
2023-05-27 22:39:19,596:INFO:             prophet: Not installed
2023-05-27 22:39:19,596:INFO:None
2023-05-27 22:39:19,596:INFO:Set up data.
2023-05-27 22:39:19,983:INFO:Set up train/test split.
2023-05-27 22:39:20,250:INFO:Set up index.
2023-05-27 22:39:20,254:INFO:Set up folding strategy.
2023-05-27 22:39:20,255:INFO:Assigning column types.
2023-05-27 22:39:20,419:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:39:20,419:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,422:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,572:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,574:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,576:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,728:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:39:20,730:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:20,884:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:39:20,887:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,039:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:39:21,045:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,211:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,369:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:39:21,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,678:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,705:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:39:21,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:21,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:21,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:39:22,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,046:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:39:22,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:39:22,382:INFO:Preparing preprocessing pipeline...
2023-05-27 22:39:22,382:INFO:Set up simple imputation.
2023-05-27 22:39:22,459:INFO:Set up encoding of ordinal features.
2023-05-27 22:39:22,555:INFO:Set up encoding of categorical features.
2023-05-27 22:39:22,555:INFO:Set up column transformation.
2023-05-27 22:39:22,555:INFO:Set up feature normalization.
2023-05-27 22:39:22,572:INFO:Set up column name cleaning.
2023-05-27 22:43:28,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:43:28,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:43:28,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:43:28,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:43:28,469:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 22:43:32,452:INFO:PyCaret RegressionExperiment
2023-05-27 22:43:32,452:INFO:Logging name: reg-default-name
2023-05-27 22:43:32,452:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:43:32,453:INFO:version 3.0.2
2023-05-27 22:43:32,453:INFO:Initializing setup()
2023-05-27 22:43:32,453:INFO:self.USI: ac68
2023-05-27 22:43:32,453:INFO:self._variable_keys: {'X', 'gpu_param', 'n_jobs_param', 'target_param', 'y_test', 'y', 'fold_groups_param', 'seed', 'fold_generator', 'log_plots_param', 'exp_name_log', 'USI', 'fold_shuffle_param', 'y_train', 'memory', 'logging_param', 'X_train', 'gpu_n_jobs_param', 'exp_id', 'data', '_available_plots', 'idx', 'X_test', 'html_param', 'transform_target_param', '_ml_usecase', 'pipeline'}
2023-05-27 22:43:32,453:INFO:Checking environment
2023-05-27 22:43:32,453:INFO:python_version: 3.8.16
2023-05-27 22:43:32,453:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:43:32,453:INFO:machine: x86_64
2023-05-27 22:43:32,453:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:43:32,453:INFO:Memory: svmem(total=16378343424, available=5774196736, percent=64.7, used=8982003712, free=4449878016, active=5041774592, inactive=5683314688, buffers=80039936, cached=2866421760, shared=1226866688, slab=637800448)
2023-05-27 22:43:32,454:INFO:Physical Core: 10
2023-05-27 22:43:32,454:INFO:Logical Core: 16
2023-05-27 22:43:32,454:INFO:Checking libraries
2023-05-27 22:43:32,454:INFO:System:
2023-05-27 22:43:32,454:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:43:32,454:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:43:32,454:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:43:32,454:INFO:PyCaret required dependencies:
2023-05-27 22:43:32,454:INFO:                 pip: 23.0.1
2023-05-27 22:43:32,454:INFO:          setuptools: 66.0.0
2023-05-27 22:43:32,454:INFO:             pycaret: 3.0.2
2023-05-27 22:43:32,454:INFO:             IPython: 8.12.2
2023-05-27 22:43:32,454:INFO:          ipywidgets: 8.0.6
2023-05-27 22:43:32,454:INFO:                tqdm: 4.65.0
2023-05-27 22:43:32,454:INFO:               numpy: 1.23.5
2023-05-27 22:43:32,454:INFO:              pandas: 1.5.3
2023-05-27 22:43:32,454:INFO:              jinja2: 3.1.2
2023-05-27 22:43:32,454:INFO:               scipy: 1.10.1
2023-05-27 22:43:32,454:INFO:              joblib: 1.2.0
2023-05-27 22:43:32,454:INFO:             sklearn: 1.2.2
2023-05-27 22:43:32,454:INFO:                pyod: 1.0.9
2023-05-27 22:43:32,454:INFO:            imblearn: 0.10.1
2023-05-27 22:43:32,454:INFO:   category_encoders: 2.6.1
2023-05-27 22:43:32,454:INFO:            lightgbm: 3.3.5
2023-05-27 22:43:32,454:INFO:               numba: 0.57.0
2023-05-27 22:43:32,454:INFO:            requests: 2.29.0
2023-05-27 22:43:32,454:INFO:          matplotlib: 3.7.1
2023-05-27 22:43:32,454:INFO:          scikitplot: 0.3.7
2023-05-27 22:43:32,454:INFO:         yellowbrick: 1.5
2023-05-27 22:43:32,454:INFO:              plotly: 5.14.1
2023-05-27 22:43:32,454:INFO:             kaleido: 0.2.1
2023-05-27 22:43:32,454:INFO:         statsmodels: 0.14.0
2023-05-27 22:43:32,454:INFO:              sktime: 0.17.0
2023-05-27 22:43:32,454:INFO:               tbats: 1.1.3
2023-05-27 22:43:32,454:INFO:            pmdarima: 2.0.3
2023-05-27 22:43:32,455:INFO:              psutil: 5.9.0
2023-05-27 22:43:32,455:INFO:PyCaret optional dependencies:
2023-05-27 22:43:32,470:INFO:                shap: Not installed
2023-05-27 22:43:32,470:INFO:           interpret: Not installed
2023-05-27 22:43:32,470:INFO:                umap: Not installed
2023-05-27 22:43:32,470:INFO:    pandas_profiling: Not installed
2023-05-27 22:43:32,470:INFO:  explainerdashboard: Not installed
2023-05-27 22:43:32,470:INFO:             autoviz: Not installed
2023-05-27 22:43:32,470:INFO:           fairlearn: Not installed
2023-05-27 22:43:32,470:INFO:             xgboost: Not installed
2023-05-27 22:43:32,470:INFO:            catboost: Not installed
2023-05-27 22:43:32,470:INFO:              kmodes: Not installed
2023-05-27 22:43:32,470:INFO:             mlxtend: Not installed
2023-05-27 22:43:32,470:INFO:       statsforecast: Not installed
2023-05-27 22:43:32,470:INFO:        tune_sklearn: Not installed
2023-05-27 22:43:32,470:INFO:                 ray: Not installed
2023-05-27 22:43:32,470:INFO:            hyperopt: Not installed
2023-05-27 22:43:32,470:INFO:              optuna: Not installed
2023-05-27 22:43:32,470:INFO:               skopt: Not installed
2023-05-27 22:43:32,470:INFO:              mlflow: Not installed
2023-05-27 22:43:32,470:INFO:              gradio: Not installed
2023-05-27 22:43:32,470:INFO:             fastapi: Not installed
2023-05-27 22:43:32,470:INFO:             uvicorn: Not installed
2023-05-27 22:43:32,470:INFO:              m2cgen: Not installed
2023-05-27 22:43:32,470:INFO:           evidently: Not installed
2023-05-27 22:43:32,470:INFO:               fugue: Not installed
2023-05-27 22:43:32,470:INFO:           streamlit: Not installed
2023-05-27 22:43:32,470:INFO:             prophet: Not installed
2023-05-27 22:43:32,470:INFO:None
2023-05-27 22:43:32,470:INFO:Set up data.
2023-05-27 22:43:32,847:INFO:Set up train/test split.
2023-05-27 22:43:33,152:INFO:Set up index.
2023-05-27 22:43:33,157:INFO:Set up folding strategy.
2023-05-27 22:43:33,157:INFO:Assigning column types.
2023-05-27 22:43:33,371:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:43:33,371:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,375:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,377:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:33,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:33,599:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,601:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,604:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:33,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:33,823:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:43:33,826:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,829:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:33,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,024:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,028:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,032:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,232:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:43:34,237:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,419:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,586:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,623:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:43:34,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,872:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:34,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:34,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:35,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:43:35,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,083:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:43:35,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:35,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,488:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:43:35,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,518:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:43:35,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:43:35,967:INFO:Preparing preprocessing pipeline...
2023-05-27 22:43:35,967:INFO:Set up simple imputation.
2023-05-27 22:43:36,046:INFO:Set up encoding of ordinal features.
2023-05-27 22:43:36,174:INFO:Set up encoding of categorical features.
2023-05-27 22:43:36,174:INFO:Set up column transformation.
2023-05-27 22:43:36,174:INFO:Set up feature normalization.
2023-05-27 22:43:36,190:INFO:Set up column name cleaning.
2023-05-27 22:47:19,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:47:19,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:47:19,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:47:19,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:47:19,764:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 22:47:23,715:INFO:PyCaret RegressionExperiment
2023-05-27 22:47:23,715:INFO:Logging name: reg-default-name
2023-05-27 22:47:23,715:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:47:23,715:INFO:version 3.0.2
2023-05-27 22:47:23,715:INFO:Initializing setup()
2023-05-27 22:47:23,715:INFO:self.USI: 71d3
2023-05-27 22:47:23,715:INFO:self._variable_keys: {'X_test', 'html_param', 'X_train', 'gpu_param', 'exp_name_log', 'fold_groups_param', 'fold_shuffle_param', 'fold_generator', 'seed', 'target_param', 'y_train', 'transform_target_param', 'memory', 'idx', 'n_jobs_param', '_ml_usecase', 'y_test', 'logging_param', 'y', 'USI', 'X', 'exp_id', 'pipeline', 'log_plots_param', 'data', 'gpu_n_jobs_param', '_available_plots'}
2023-05-27 22:47:23,716:INFO:Checking environment
2023-05-27 22:47:23,716:INFO:python_version: 3.8.16
2023-05-27 22:47:23,716:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:47:23,716:INFO:machine: x86_64
2023-05-27 22:47:23,716:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:47:23,716:INFO:Memory: svmem(total=16378343424, available=5943738368, percent=63.7, used=8889102336, free=4685344768, active=6081884160, inactive=4368433152, buffers=57028608, cached=2746867712, shared=1192116224, slab=638279680)
2023-05-27 22:47:23,717:INFO:Physical Core: 10
2023-05-27 22:47:23,718:INFO:Logical Core: 16
2023-05-27 22:47:23,718:INFO:Checking libraries
2023-05-27 22:47:23,718:INFO:System:
2023-05-27 22:47:23,718:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:47:23,718:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:47:23,718:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:47:23,718:INFO:PyCaret required dependencies:
2023-05-27 22:47:23,718:INFO:                 pip: 23.0.1
2023-05-27 22:47:23,718:INFO:          setuptools: 66.0.0
2023-05-27 22:47:23,718:INFO:             pycaret: 3.0.2
2023-05-27 22:47:23,718:INFO:             IPython: 8.12.2
2023-05-27 22:47:23,718:INFO:          ipywidgets: 8.0.6
2023-05-27 22:47:23,718:INFO:                tqdm: 4.65.0
2023-05-27 22:47:23,718:INFO:               numpy: 1.23.5
2023-05-27 22:47:23,718:INFO:              pandas: 1.5.3
2023-05-27 22:47:23,718:INFO:              jinja2: 3.1.2
2023-05-27 22:47:23,718:INFO:               scipy: 1.10.1
2023-05-27 22:47:23,718:INFO:              joblib: 1.2.0
2023-05-27 22:47:23,718:INFO:             sklearn: 1.2.2
2023-05-27 22:47:23,719:INFO:                pyod: 1.0.9
2023-05-27 22:47:23,719:INFO:            imblearn: 0.10.1
2023-05-27 22:47:23,719:INFO:   category_encoders: 2.6.1
2023-05-27 22:47:23,719:INFO:            lightgbm: 3.3.5
2023-05-27 22:47:23,719:INFO:               numba: 0.57.0
2023-05-27 22:47:23,719:INFO:            requests: 2.29.0
2023-05-27 22:47:23,719:INFO:          matplotlib: 3.7.1
2023-05-27 22:47:23,719:INFO:          scikitplot: 0.3.7
2023-05-27 22:47:23,719:INFO:         yellowbrick: 1.5
2023-05-27 22:47:23,719:INFO:              plotly: 5.14.1
2023-05-27 22:47:23,719:INFO:             kaleido: 0.2.1
2023-05-27 22:47:23,719:INFO:         statsmodels: 0.14.0
2023-05-27 22:47:23,719:INFO:              sktime: 0.17.0
2023-05-27 22:47:23,719:INFO:               tbats: 1.1.3
2023-05-27 22:47:23,719:INFO:            pmdarima: 2.0.3
2023-05-27 22:47:23,719:INFO:              psutil: 5.9.0
2023-05-27 22:47:23,719:INFO:PyCaret optional dependencies:
2023-05-27 22:47:23,738:INFO:                shap: Not installed
2023-05-27 22:47:23,738:INFO:           interpret: Not installed
2023-05-27 22:47:23,739:INFO:                umap: Not installed
2023-05-27 22:47:23,739:INFO:    pandas_profiling: Not installed
2023-05-27 22:47:23,739:INFO:  explainerdashboard: Not installed
2023-05-27 22:47:23,739:INFO:             autoviz: Not installed
2023-05-27 22:47:23,739:INFO:           fairlearn: Not installed
2023-05-27 22:47:23,739:INFO:             xgboost: Not installed
2023-05-27 22:47:23,739:INFO:            catboost: Not installed
2023-05-27 22:47:23,739:INFO:              kmodes: Not installed
2023-05-27 22:47:23,739:INFO:             mlxtend: Not installed
2023-05-27 22:47:23,739:INFO:       statsforecast: Not installed
2023-05-27 22:47:23,739:INFO:        tune_sklearn: Not installed
2023-05-27 22:47:23,739:INFO:                 ray: Not installed
2023-05-27 22:47:23,739:INFO:            hyperopt: Not installed
2023-05-27 22:47:23,739:INFO:              optuna: Not installed
2023-05-27 22:47:23,739:INFO:               skopt: Not installed
2023-05-27 22:47:23,739:INFO:              mlflow: Not installed
2023-05-27 22:47:23,739:INFO:              gradio: Not installed
2023-05-27 22:47:23,739:INFO:             fastapi: Not installed
2023-05-27 22:47:23,739:INFO:             uvicorn: Not installed
2023-05-27 22:47:23,739:INFO:              m2cgen: Not installed
2023-05-27 22:47:23,739:INFO:           evidently: Not installed
2023-05-27 22:47:23,739:INFO:               fugue: Not installed
2023-05-27 22:47:23,739:INFO:           streamlit: Not installed
2023-05-27 22:47:23,739:INFO:             prophet: Not installed
2023-05-27 22:47:23,739:INFO:None
2023-05-27 22:47:23,739:INFO:Set up data.
2023-05-27 22:47:24,142:INFO:Set up train/test split.
2023-05-27 22:47:24,426:INFO:Set up index.
2023-05-27 22:47:24,431:INFO:Set up folding strategy.
2023-05-27 22:47:24,431:INFO:Assigning column types.
2023-05-27 22:47:24,637:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:47:24,638:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,641:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,644:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,818:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:24,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:24,866:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,869:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:47:24,872:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,042:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,072:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:47:25,076:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,079:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,251:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,282:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,284:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,483:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:47:25,489:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,701:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,709:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:25,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:25,917:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:47:26,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,318:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,347:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,347:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:47:26,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:47:26,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,778:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:47:26,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:26,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:27,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:27,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:27,198:INFO:Preparing preprocessing pipeline...
2023-05-27 22:47:27,198:INFO:Set up simple imputation.
2023-05-27 22:47:27,284:INFO:Set up encoding of ordinal features.
2023-05-27 22:47:27,419:INFO:Set up encoding of categorical features.
2023-05-27 22:47:27,420:INFO:Set up column transformation.
2023-05-27 22:47:27,420:INFO:Set up feature normalization.
2023-05-27 22:47:27,420:INFO:Set up feature selection.
2023-05-27 22:47:27,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:27,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:47:27,702:INFO:Set up column name cleaning.
2023-05-27 22:52:55,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:52:55,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:52:55,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:52:55,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 22:52:55,790:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 22:53:06,838:INFO:PyCaret RegressionExperiment
2023-05-27 22:53:06,838:INFO:Logging name: reg-default-name
2023-05-27 22:53:06,838:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:53:06,838:INFO:version 3.0.2
2023-05-27 22:53:06,838:INFO:Initializing setup()
2023-05-27 22:53:06,838:INFO:self.USI: f30a
2023-05-27 22:53:06,838:INFO:self._variable_keys: {'USI', 'gpu_param', 'memory', '_ml_usecase', 'exp_name_log', 'gpu_n_jobs_param', 'X', 'exp_id', 'fold_shuffle_param', 'fold_generator', 'y_test', 'idx', 'fold_groups_param', 'seed', 'target_param', 'log_plots_param', 'logging_param', '_available_plots', 'pipeline', 'X_train', 'X_test', 'transform_target_param', 'data', 'y', 'n_jobs_param', 'html_param', 'y_train'}
2023-05-27 22:53:06,838:INFO:Checking environment
2023-05-27 22:53:06,838:INFO:python_version: 3.8.16
2023-05-27 22:53:06,838:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:53:06,838:INFO:machine: x86_64
2023-05-27 22:53:06,838:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:53:06,838:INFO:Memory: svmem(total=16378343424, available=6761553920, percent=58.7, used=8211841024, free=5616693248, active=5222223872, inactive=4361363456, buffers=46637056, cached=2503172096, shared=1051951104, slab=634318848)
2023-05-27 22:53:06,840:INFO:Physical Core: 10
2023-05-27 22:53:06,840:INFO:Logical Core: 16
2023-05-27 22:53:06,840:INFO:Checking libraries
2023-05-27 22:53:06,840:INFO:System:
2023-05-27 22:53:06,840:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:53:06,840:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:53:06,840:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:53:06,840:INFO:PyCaret required dependencies:
2023-05-27 22:53:06,840:INFO:                 pip: 23.0.1
2023-05-27 22:53:06,840:INFO:          setuptools: 66.0.0
2023-05-27 22:53:06,840:INFO:             pycaret: 3.0.2
2023-05-27 22:53:06,840:INFO:             IPython: 8.12.2
2023-05-27 22:53:06,840:INFO:          ipywidgets: 8.0.6
2023-05-27 22:53:06,840:INFO:                tqdm: 4.65.0
2023-05-27 22:53:06,840:INFO:               numpy: 1.23.5
2023-05-27 22:53:06,840:INFO:              pandas: 1.5.3
2023-05-27 22:53:06,840:INFO:              jinja2: 3.1.2
2023-05-27 22:53:06,841:INFO:               scipy: 1.10.1
2023-05-27 22:53:06,841:INFO:              joblib: 1.2.0
2023-05-27 22:53:06,841:INFO:             sklearn: 1.2.2
2023-05-27 22:53:06,841:INFO:                pyod: 1.0.9
2023-05-27 22:53:06,841:INFO:            imblearn: 0.10.1
2023-05-27 22:53:06,841:INFO:   category_encoders: 2.6.1
2023-05-27 22:53:06,841:INFO:            lightgbm: 3.3.5
2023-05-27 22:53:06,841:INFO:               numba: 0.57.0
2023-05-27 22:53:06,841:INFO:            requests: 2.29.0
2023-05-27 22:53:06,841:INFO:          matplotlib: 3.7.1
2023-05-27 22:53:06,841:INFO:          scikitplot: 0.3.7
2023-05-27 22:53:06,841:INFO:         yellowbrick: 1.5
2023-05-27 22:53:06,841:INFO:              plotly: 5.14.1
2023-05-27 22:53:06,841:INFO:             kaleido: 0.2.1
2023-05-27 22:53:06,841:INFO:         statsmodels: 0.14.0
2023-05-27 22:53:06,841:INFO:              sktime: 0.17.0
2023-05-27 22:53:06,841:INFO:               tbats: 1.1.3
2023-05-27 22:53:06,841:INFO:            pmdarima: 2.0.3
2023-05-27 22:53:06,841:INFO:              psutil: 5.9.0
2023-05-27 22:53:06,841:INFO:PyCaret optional dependencies:
2023-05-27 22:53:06,855:INFO:                shap: Not installed
2023-05-27 22:53:06,855:INFO:           interpret: Not installed
2023-05-27 22:53:06,856:INFO:                umap: Not installed
2023-05-27 22:53:06,856:INFO:    pandas_profiling: Not installed
2023-05-27 22:53:06,856:INFO:  explainerdashboard: Not installed
2023-05-27 22:53:06,856:INFO:             autoviz: Not installed
2023-05-27 22:53:06,856:INFO:           fairlearn: Not installed
2023-05-27 22:53:06,856:INFO:             xgboost: Not installed
2023-05-27 22:53:06,856:INFO:            catboost: Not installed
2023-05-27 22:53:06,856:INFO:              kmodes: Not installed
2023-05-27 22:53:06,856:INFO:             mlxtend: Not installed
2023-05-27 22:53:06,856:INFO:       statsforecast: Not installed
2023-05-27 22:53:06,856:INFO:        tune_sklearn: Not installed
2023-05-27 22:53:06,856:INFO:                 ray: Not installed
2023-05-27 22:53:06,856:INFO:            hyperopt: Not installed
2023-05-27 22:53:06,856:INFO:              optuna: Not installed
2023-05-27 22:53:06,856:INFO:               skopt: Not installed
2023-05-27 22:53:06,856:INFO:              mlflow: Not installed
2023-05-27 22:53:06,856:INFO:              gradio: Not installed
2023-05-27 22:53:06,856:INFO:             fastapi: Not installed
2023-05-27 22:53:06,856:INFO:             uvicorn: Not installed
2023-05-27 22:53:06,856:INFO:              m2cgen: Not installed
2023-05-27 22:53:06,856:INFO:           evidently: Not installed
2023-05-27 22:53:06,856:INFO:               fugue: Not installed
2023-05-27 22:53:06,856:INFO:           streamlit: Not installed
2023-05-27 22:53:06,856:INFO:             prophet: Not installed
2023-05-27 22:53:06,856:INFO:None
2023-05-27 22:53:06,856:INFO:Set up data.
2023-05-27 22:53:07,274:INFO:Set up train/test split.
2023-05-27 22:53:07,572:INFO:Set up index.
2023-05-27 22:53:07,577:INFO:Set up folding strategy.
2023-05-27 22:53:07,577:INFO:Assigning column types.
2023-05-27 22:53:07,786:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:53:07,786:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:53:07,788:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:53:07,792:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:07,981:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,010:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,031:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,034:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,037:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,240:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:53:08,242:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,245:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,445:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,448:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,615:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,643:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:53:08,649:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,821:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:08,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:08,853:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,047:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:53:09,224:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,454:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,457:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:53:09,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,830:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:53:09,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:09,856:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:53:10,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,269:INFO:Preparing preprocessing pipeline...
2023-05-27 22:53:10,269:INFO:Set up simple imputation.
2023-05-27 22:53:10,350:INFO:Set up encoding of ordinal features.
2023-05-27 22:53:10,479:INFO:Set up encoding of categorical features.
2023-05-27 22:53:10,479:INFO:Set up feature selection.
2023-05-27 22:53:10,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:53:10,740:INFO:Set up column name cleaning.
2023-05-27 22:55:40,776:INFO:PyCaret RegressionExperiment
2023-05-27 22:55:40,776:INFO:Logging name: reg-default-name
2023-05-27 22:55:40,776:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 22:55:40,776:INFO:version 3.0.2
2023-05-27 22:55:40,776:INFO:Initializing setup()
2023-05-27 22:55:40,776:INFO:self.USI: a239
2023-05-27 22:55:40,776:INFO:self._variable_keys: {'USI', 'gpu_param', 'memory', '_ml_usecase', 'exp_name_log', 'gpu_n_jobs_param', 'X', 'exp_id', 'fold_shuffle_param', 'fold_generator', 'y_test', 'idx', 'fold_groups_param', 'seed', 'target_param', 'log_plots_param', 'logging_param', '_available_plots', 'pipeline', 'X_train', 'X_test', 'transform_target_param', 'data', 'y', 'n_jobs_param', 'html_param', 'y_train'}
2023-05-27 22:55:40,776:INFO:Checking environment
2023-05-27 22:55:40,776:INFO:python_version: 3.8.16
2023-05-27 22:55:40,776:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 22:55:40,776:INFO:machine: x86_64
2023-05-27 22:55:40,776:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:55:40,776:INFO:Memory: svmem(total=16378343424, available=6379667456, percent=61.0, used=8482623488, free=3976753152, active=5242859520, inactive=5974396928, buffers=49827840, cached=3869138944, shared=1163079680, slab=634503168)
2023-05-27 22:55:40,777:INFO:Physical Core: 10
2023-05-27 22:55:40,777:INFO:Logical Core: 16
2023-05-27 22:55:40,777:INFO:Checking libraries
2023-05-27 22:55:40,777:INFO:System:
2023-05-27 22:55:40,777:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 22:55:40,777:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 22:55:40,777:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 22:55:40,777:INFO:PyCaret required dependencies:
2023-05-27 22:55:40,777:INFO:                 pip: 23.0.1
2023-05-27 22:55:40,777:INFO:          setuptools: 66.0.0
2023-05-27 22:55:40,777:INFO:             pycaret: 3.0.2
2023-05-27 22:55:40,777:INFO:             IPython: 8.12.2
2023-05-27 22:55:40,777:INFO:          ipywidgets: 8.0.6
2023-05-27 22:55:40,777:INFO:                tqdm: 4.65.0
2023-05-27 22:55:40,777:INFO:               numpy: 1.23.5
2023-05-27 22:55:40,777:INFO:              pandas: 1.5.3
2023-05-27 22:55:40,777:INFO:              jinja2: 3.1.2
2023-05-27 22:55:40,777:INFO:               scipy: 1.10.1
2023-05-27 22:55:40,777:INFO:              joblib: 1.2.0
2023-05-27 22:55:40,777:INFO:             sklearn: 1.2.2
2023-05-27 22:55:40,777:INFO:                pyod: 1.0.9
2023-05-27 22:55:40,777:INFO:            imblearn: 0.10.1
2023-05-27 22:55:40,777:INFO:   category_encoders: 2.6.1
2023-05-27 22:55:40,777:INFO:            lightgbm: 3.3.5
2023-05-27 22:55:40,777:INFO:               numba: 0.57.0
2023-05-27 22:55:40,777:INFO:            requests: 2.29.0
2023-05-27 22:55:40,777:INFO:          matplotlib: 3.7.1
2023-05-27 22:55:40,777:INFO:          scikitplot: 0.3.7
2023-05-27 22:55:40,777:INFO:         yellowbrick: 1.5
2023-05-27 22:55:40,777:INFO:              plotly: 5.14.1
2023-05-27 22:55:40,777:INFO:             kaleido: 0.2.1
2023-05-27 22:55:40,777:INFO:         statsmodels: 0.14.0
2023-05-27 22:55:40,777:INFO:              sktime: 0.17.0
2023-05-27 22:55:40,778:INFO:               tbats: 1.1.3
2023-05-27 22:55:40,778:INFO:            pmdarima: 2.0.3
2023-05-27 22:55:40,778:INFO:              psutil: 5.9.0
2023-05-27 22:55:40,778:INFO:PyCaret optional dependencies:
2023-05-27 22:55:40,778:INFO:                shap: Not installed
2023-05-27 22:55:40,778:INFO:           interpret: Not installed
2023-05-27 22:55:40,778:INFO:                umap: Not installed
2023-05-27 22:55:40,778:INFO:    pandas_profiling: Not installed
2023-05-27 22:55:40,778:INFO:  explainerdashboard: Not installed
2023-05-27 22:55:40,778:INFO:             autoviz: Not installed
2023-05-27 22:55:40,778:INFO:           fairlearn: Not installed
2023-05-27 22:55:40,778:INFO:             xgboost: Not installed
2023-05-27 22:55:40,778:INFO:            catboost: Not installed
2023-05-27 22:55:40,778:INFO:              kmodes: Not installed
2023-05-27 22:55:40,778:INFO:             mlxtend: Not installed
2023-05-27 22:55:40,778:INFO:       statsforecast: Not installed
2023-05-27 22:55:40,778:INFO:        tune_sklearn: Not installed
2023-05-27 22:55:40,778:INFO:                 ray: Not installed
2023-05-27 22:55:40,778:INFO:            hyperopt: Not installed
2023-05-27 22:55:40,778:INFO:              optuna: Not installed
2023-05-27 22:55:40,778:INFO:               skopt: Not installed
2023-05-27 22:55:40,778:INFO:              mlflow: Not installed
2023-05-27 22:55:40,778:INFO:              gradio: Not installed
2023-05-27 22:55:40,778:INFO:             fastapi: Not installed
2023-05-27 22:55:40,778:INFO:             uvicorn: Not installed
2023-05-27 22:55:40,778:INFO:              m2cgen: Not installed
2023-05-27 22:55:40,778:INFO:           evidently: Not installed
2023-05-27 22:55:40,778:INFO:               fugue: Not installed
2023-05-27 22:55:40,778:INFO:           streamlit: Not installed
2023-05-27 22:55:40,778:INFO:             prophet: Not installed
2023-05-27 22:55:40,778:INFO:None
2023-05-27 22:55:40,778:INFO:Set up data.
2023-05-27 22:55:41,187:INFO:Set up train/test split.
2023-05-27 22:55:41,553:INFO:Set up index.
2023-05-27 22:55:41,558:INFO:Set up folding strategy.
2023-05-27 22:55:41,558:INFO:Assigning column types.
2023-05-27 22:55:41,836:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 22:55:41,836:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:55:41,839:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:55:41,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,076:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,077:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,081:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,084:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,326:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 22:55:42,329:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,333:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,538:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,574:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,577:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,815:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:42,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:42,816:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 22:55:42,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,057:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,254:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,281:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 22:55:43,484:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,512:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,714:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,742:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,743:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 22:55:43,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:43,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:43,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 22:55:44,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,208:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 22:55:44,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:44,673:INFO:Preparing preprocessing pipeline...
2023-05-27 22:55:44,673:INFO:Set up simple imputation.
2023-05-27 22:55:44,761:INFO:Set up encoding of ordinal features.
2023-05-27 22:55:44,892:INFO:Set up encoding of categorical features.
2023-05-27 22:55:44,892:INFO:Set up feature selection.
2023-05-27 22:55:45,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:45,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:55:55,775:INFO:Finished creating preprocessing pipeline.
2023-05-27 22:55:55,807:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size',
                                             'nearest_fault_distance_km',
                                             'nearest_eq_...
                                                                    'Province',
                                                                    'city'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              handle_missing='return_nan'))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf)))])
2023-05-27 22:55:55,807:INFO:Creating final display dataframe.
2023-05-27 22:56:00,259:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (296921, 128)
4        Transformed data shape      (296921, 26)
5   Transformed train set shape      (207844, 26)
6    Transformed test set shape       (89077, 26)
7              Ordinal features                 2
8              Numeric features               120
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              a239
2023-05-27 22:56:00,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:56:00,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:56:00,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:56:00,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 22:56:00,622:INFO:setup() successfully completed in 19.85s...............
2023-05-27 22:56:00,622:INFO:Initializing create_model()
2023-05-27 22:56:00,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f4b02d784f0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-27 22:56:00,622:INFO:Checking exceptions
2023-05-27 22:56:00,651:INFO:Importing libraries
2023-05-27 22:56:00,651:INFO:Copying training dataset
2023-05-27 22:56:00,823:INFO:Defining folds
2023-05-27 22:56:00,823:INFO:Declaring metric variables
2023-05-27 22:56:00,826:INFO:Importing untrained model
2023-05-27 22:56:00,828:INFO:Ridge Regression Imported successfully
2023-05-27 22:56:00,835:INFO:Starting cross validation
2023-05-27 22:56:00,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-27 23:29:55,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:29:55,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:29:55,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:29:55,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:29:56,105:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 23:30:03,160:INFO:PyCaret RegressionExperiment
2023-05-27 23:30:03,160:INFO:Logging name: reg-default-name
2023-05-27 23:30:03,160:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 23:30:03,160:INFO:version 3.0.2
2023-05-27 23:30:03,160:INFO:Initializing setup()
2023-05-27 23:30:03,160:INFO:self.USI: 4989
2023-05-27 23:30:03,160:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'X', 'USI', 'memory', '_ml_usecase', 'exp_name_log', 'X_test', 'n_jobs_param', 'y', 'fold_generator', 'data', 'logging_param', 'log_plots_param', 'idx', 'fold_groups_param', '_available_plots', 'html_param', 'fold_shuffle_param', 'target_param', 'X_train', 'pipeline', 'seed', 'exp_id', 'y_test', 'gpu_param', 'transform_target_param'}
2023-05-27 23:30:03,160:INFO:Checking environment
2023-05-27 23:30:03,160:INFO:python_version: 3.8.16
2023-05-27 23:30:03,160:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 23:30:03,160:INFO:machine: x86_64
2023-05-27 23:30:03,160:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:30:03,161:INFO:Memory: svmem(total=16378343424, available=9330409472, percent=43.0, used=5630210048, free=7043317760, active=2242789376, inactive=5677441024, buffers=215068672, cached=3489746944, shared=1064370176, slab=567726080)
2023-05-27 23:30:03,161:INFO:Physical Core: 10
2023-05-27 23:30:03,161:INFO:Logical Core: 16
2023-05-27 23:30:03,161:INFO:Checking libraries
2023-05-27 23:30:03,161:INFO:System:
2023-05-27 23:30:03,161:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 23:30:03,161:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 23:30:03,161:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:30:03,161:INFO:PyCaret required dependencies:
2023-05-27 23:30:03,161:INFO:                 pip: 23.0.1
2023-05-27 23:30:03,161:INFO:          setuptools: 66.0.0
2023-05-27 23:30:03,161:INFO:             pycaret: 3.0.2
2023-05-27 23:30:03,161:INFO:             IPython: 8.12.2
2023-05-27 23:30:03,161:INFO:          ipywidgets: 8.0.6
2023-05-27 23:30:03,161:INFO:                tqdm: 4.65.0
2023-05-27 23:30:03,162:INFO:               numpy: 1.23.5
2023-05-27 23:30:03,162:INFO:              pandas: 1.5.3
2023-05-27 23:30:03,162:INFO:              jinja2: 3.1.2
2023-05-27 23:30:03,162:INFO:               scipy: 1.10.1
2023-05-27 23:30:03,162:INFO:              joblib: 1.2.0
2023-05-27 23:30:03,162:INFO:             sklearn: 1.2.2
2023-05-27 23:30:03,162:INFO:                pyod: 1.0.9
2023-05-27 23:30:03,162:INFO:            imblearn: 0.10.1
2023-05-27 23:30:03,162:INFO:   category_encoders: 2.6.1
2023-05-27 23:30:03,162:INFO:            lightgbm: 3.3.5
2023-05-27 23:30:03,162:INFO:               numba: 0.57.0
2023-05-27 23:30:03,162:INFO:            requests: 2.29.0
2023-05-27 23:30:03,162:INFO:          matplotlib: 3.7.1
2023-05-27 23:30:03,162:INFO:          scikitplot: 0.3.7
2023-05-27 23:30:03,162:INFO:         yellowbrick: 1.5
2023-05-27 23:30:03,162:INFO:              plotly: 5.14.1
2023-05-27 23:30:03,162:INFO:             kaleido: 0.2.1
2023-05-27 23:30:03,162:INFO:         statsmodels: 0.14.0
2023-05-27 23:30:03,162:INFO:              sktime: 0.17.0
2023-05-27 23:30:03,162:INFO:               tbats: 1.1.3
2023-05-27 23:30:03,162:INFO:            pmdarima: 2.0.3
2023-05-27 23:30:03,162:INFO:              psutil: 5.9.0
2023-05-27 23:30:03,162:INFO:PyCaret optional dependencies:
2023-05-27 23:30:03,173:INFO:                shap: Not installed
2023-05-27 23:30:03,173:INFO:           interpret: Not installed
2023-05-27 23:30:03,173:INFO:                umap: Not installed
2023-05-27 23:30:03,173:INFO:    pandas_profiling: Not installed
2023-05-27 23:30:03,173:INFO:  explainerdashboard: Not installed
2023-05-27 23:30:03,173:INFO:             autoviz: Not installed
2023-05-27 23:30:03,173:INFO:           fairlearn: Not installed
2023-05-27 23:30:03,173:INFO:             xgboost: Not installed
2023-05-27 23:30:03,173:INFO:            catboost: Not installed
2023-05-27 23:30:03,173:INFO:              kmodes: Not installed
2023-05-27 23:30:03,173:INFO:             mlxtend: Not installed
2023-05-27 23:30:03,173:INFO:       statsforecast: Not installed
2023-05-27 23:30:03,173:INFO:        tune_sklearn: Not installed
2023-05-27 23:30:03,174:INFO:                 ray: Not installed
2023-05-27 23:30:03,174:INFO:            hyperopt: Not installed
2023-05-27 23:30:03,174:INFO:              optuna: Not installed
2023-05-27 23:30:03,174:INFO:               skopt: Not installed
2023-05-27 23:30:03,174:INFO:              mlflow: Not installed
2023-05-27 23:30:03,174:INFO:              gradio: Not installed
2023-05-27 23:30:03,174:INFO:             fastapi: Not installed
2023-05-27 23:30:03,174:INFO:             uvicorn: Not installed
2023-05-27 23:30:03,174:INFO:              m2cgen: Not installed
2023-05-27 23:30:03,174:INFO:           evidently: Not installed
2023-05-27 23:30:03,174:INFO:               fugue: Not installed
2023-05-27 23:30:03,174:INFO:           streamlit: Not installed
2023-05-27 23:30:03,174:INFO:             prophet: Not installed
2023-05-27 23:30:03,174:INFO:None
2023-05-27 23:30:03,174:INFO:Set up data.
2023-05-27 23:30:03,493:INFO:Set up train/test split.
2023-05-27 23:30:03,744:INFO:Set up index.
2023-05-27 23:30:03,748:INFO:Set up folding strategy.
2023-05-27 23:30:03,748:INFO:Assigning column types.
2023-05-27 23:30:03,913:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 23:30:03,913:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:30:03,916:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:30:03,918:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,103:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,106:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,269:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,269:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 23:30:04,272:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,274:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,410:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,436:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,438:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,597:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 23:30:04,601:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,734:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:04,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:04,911:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 23:30:05,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,199:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,223:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 23:30:05,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,514:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:30:05,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,535:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 23:30:05,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:05,865:INFO:Preparing preprocessing pipeline...
2023-05-27 23:30:05,865:INFO:Set up simple imputation.
2023-05-27 23:30:05,928:INFO:Set up encoding of ordinal features.
2023-05-27 23:30:06,034:INFO:Set up encoding of categorical features.
2023-05-27 23:30:06,035:INFO:Set up feature selection.
2023-05-27 23:30:06,198:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:06,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:08,209:INFO:Finished creating preprocessing pipeline.
2023-05-27 23:30:08,241:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size',
                                             'nearest_fault_distance_km',
                                             'nearest_eq_...
                                                                    'Province',
                                                                    'city'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              handle_missing='return_nan'))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf)))])
2023-05-27 23:30:08,241:INFO:Creating final display dataframe.
2023-05-27 23:30:10,608:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (296921, 128)
4        Transformed data shape      (296921, 26)
5   Transformed train set shape      (207844, 26)
6    Transformed test set shape       (89077, 26)
7              Ordinal features                 2
8              Numeric features               120
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              4989
2023-05-27 23:30:10,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:10,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:10,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:10,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:30:10,928:INFO:setup() successfully completed in 7.8s...............
2023-05-27 23:30:10,928:INFO:Initializing create_model()
2023-05-27 23:30:10,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7efdff824a90>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-27 23:30:10,928:INFO:Checking exceptions
2023-05-27 23:30:10,951:INFO:Importing libraries
2023-05-27 23:30:10,951:INFO:Copying training dataset
2023-05-27 23:30:11,120:INFO:Defining folds
2023-05-27 23:30:11,120:INFO:Declaring metric variables
2023-05-27 23:30:11,122:INFO:Importing untrained model
2023-05-27 23:30:11,124:INFO:Ridge Regression Imported successfully
2023-05-27 23:30:11,128:INFO:Starting cross validation
2023-05-27 23:30:11,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-27 23:51:10,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:51:10,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:51:10,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:51:10,675:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:51:11,144:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 23:51:42,899:INFO:PyCaret RegressionExperiment
2023-05-27 23:51:42,899:INFO:Logging name: reg-default-name
2023-05-27 23:51:42,899:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 23:51:42,899:INFO:version 3.0.2
2023-05-27 23:51:42,899:INFO:Initializing setup()
2023-05-27 23:51:42,899:INFO:self.USI: 2138
2023-05-27 23:51:42,899:INFO:self._variable_keys: {'n_jobs_param', 'memory', 'fold_generator', 'USI', 'X_test', 'y_train', 'logging_param', 'log_plots_param', 'exp_name_log', 'target_param', 'seed', 'y_test', 'fold_shuffle_param', '_available_plots', 'transform_target_param', 'idx', 'data', '_ml_usecase', 'y', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'fold_groups_param', 'X_train', 'pipeline', 'X', 'exp_id'}
2023-05-27 23:51:42,899:INFO:Checking environment
2023-05-27 23:51:42,899:INFO:python_version: 3.8.16
2023-05-27 23:51:42,899:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 23:51:42,899:INFO:machine: x86_64
2023-05-27 23:51:42,899:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:51:42,899:INFO:Memory: svmem(total=16378343424, available=9548509184, percent=41.7, used=5413961728, free=6385487872, active=2044243968, inactive=6642388992, buffers=208519168, cached=4370374656, shared=1062899712, slab=558051328)
2023-05-27 23:51:42,900:INFO:Physical Core: 10
2023-05-27 23:51:42,900:INFO:Logical Core: 16
2023-05-27 23:51:42,900:INFO:Checking libraries
2023-05-27 23:51:42,900:INFO:System:
2023-05-27 23:51:42,900:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 23:51:42,900:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 23:51:42,900:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:51:42,900:INFO:PyCaret required dependencies:
2023-05-27 23:51:42,900:INFO:                 pip: 23.0.1
2023-05-27 23:51:42,900:INFO:          setuptools: 66.0.0
2023-05-27 23:51:42,900:INFO:             pycaret: 3.0.2
2023-05-27 23:51:42,900:INFO:             IPython: 8.12.2
2023-05-27 23:51:42,900:INFO:          ipywidgets: 8.0.6
2023-05-27 23:51:42,900:INFO:                tqdm: 4.65.0
2023-05-27 23:51:42,900:INFO:               numpy: 1.23.5
2023-05-27 23:51:42,900:INFO:              pandas: 1.5.3
2023-05-27 23:51:42,900:INFO:              jinja2: 3.1.2
2023-05-27 23:51:42,900:INFO:               scipy: 1.10.1
2023-05-27 23:51:42,900:INFO:              joblib: 1.2.0
2023-05-27 23:51:42,900:INFO:             sklearn: 1.2.2
2023-05-27 23:51:42,900:INFO:                pyod: 1.0.9
2023-05-27 23:51:42,901:INFO:            imblearn: 0.10.1
2023-05-27 23:51:42,901:INFO:   category_encoders: 2.6.1
2023-05-27 23:51:42,901:INFO:            lightgbm: 3.3.5
2023-05-27 23:51:42,901:INFO:               numba: 0.57.0
2023-05-27 23:51:42,901:INFO:            requests: 2.29.0
2023-05-27 23:51:42,901:INFO:          matplotlib: 3.7.1
2023-05-27 23:51:42,901:INFO:          scikitplot: 0.3.7
2023-05-27 23:51:42,901:INFO:         yellowbrick: 1.5
2023-05-27 23:51:42,901:INFO:              plotly: 5.14.1
2023-05-27 23:51:42,901:INFO:             kaleido: 0.2.1
2023-05-27 23:51:42,901:INFO:         statsmodels: 0.14.0
2023-05-27 23:51:42,901:INFO:              sktime: 0.17.0
2023-05-27 23:51:42,901:INFO:               tbats: 1.1.3
2023-05-27 23:51:42,901:INFO:            pmdarima: 2.0.3
2023-05-27 23:51:42,901:INFO:              psutil: 5.9.0
2023-05-27 23:51:42,901:INFO:PyCaret optional dependencies:
2023-05-27 23:51:42,913:INFO:                shap: Not installed
2023-05-27 23:51:42,913:INFO:           interpret: Not installed
2023-05-27 23:51:42,913:INFO:                umap: Not installed
2023-05-27 23:51:42,913:INFO:    pandas_profiling: Not installed
2023-05-27 23:51:42,913:INFO:  explainerdashboard: Not installed
2023-05-27 23:51:42,913:INFO:             autoviz: Not installed
2023-05-27 23:51:42,913:INFO:           fairlearn: Not installed
2023-05-27 23:51:42,913:INFO:             xgboost: Not installed
2023-05-27 23:51:42,913:INFO:            catboost: Not installed
2023-05-27 23:51:42,913:INFO:              kmodes: Not installed
2023-05-27 23:51:42,913:INFO:             mlxtend: Not installed
2023-05-27 23:51:42,913:INFO:       statsforecast: Not installed
2023-05-27 23:51:42,913:INFO:        tune_sklearn: Not installed
2023-05-27 23:51:42,913:INFO:                 ray: Not installed
2023-05-27 23:51:42,913:INFO:            hyperopt: Not installed
2023-05-27 23:51:42,913:INFO:              optuna: Not installed
2023-05-27 23:51:42,913:INFO:               skopt: Not installed
2023-05-27 23:51:42,913:INFO:              mlflow: Not installed
2023-05-27 23:51:42,913:INFO:              gradio: Not installed
2023-05-27 23:51:42,913:INFO:             fastapi: Not installed
2023-05-27 23:51:42,913:INFO:             uvicorn: Not installed
2023-05-27 23:51:42,913:INFO:              m2cgen: Not installed
2023-05-27 23:51:42,913:INFO:           evidently: Not installed
2023-05-27 23:51:42,913:INFO:               fugue: Not installed
2023-05-27 23:51:42,913:INFO:           streamlit: Not installed
2023-05-27 23:51:42,913:INFO:             prophet: Not installed
2023-05-27 23:51:42,913:INFO:None
2023-05-27 23:51:42,913:INFO:Set up data.
2023-05-27 23:51:43,255:INFO:Set up train/test split.
2023-05-27 23:51:43,540:INFO:Set up index.
2023-05-27 23:51:43,551:INFO:Set up folding strategy.
2023-05-27 23:51:43,551:INFO:Assigning column types.
2023-05-27 23:51:43,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 23:51:43,746:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,748:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,750:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,930:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,958:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:43,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:43,978:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,980:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:51:43,984:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,171:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,172:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 23:51:44,174:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,177:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,337:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,362:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,365:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,548:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 23:51:44,552:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:44,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:44,923:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 23:51:45,083:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,273:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,295:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,295:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 23:51:45,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:51:45,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,661:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 23:51:45,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:45,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:46,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:46,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:46,033:INFO:Preparing preprocessing pipeline...
2023-05-27 23:51:46,033:INFO:Set up simple imputation.
2023-05-27 23:51:46,105:INFO:Set up encoding of ordinal features.
2023-05-27 23:51:46,226:INFO:Set up encoding of categorical features.
2023-05-27 23:51:46,226:INFO:Set up removing multicollinearity.
2023-05-27 23:51:46,226:INFO:Set up feature selection.
2023-05-27 23:51:46,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:46,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:57,558:INFO:Finished creating preprocessing pipeline.
2023-05-27 23:51:57,584:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size',
                                             'nearest_fault_distance_km',
                                             'nearest_eq_...
                 TransformerWrapper(include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf)))])
2023-05-27 23:51:57,584:INFO:Creating final display dataframe.
2023-05-27 23:51:59,547:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (296921, 128)
4        Transformed data shape      (296921, 26)
5   Transformed train set shape      (207844, 26)
6    Transformed test set shape       (89077, 26)
7              Ordinal features                 2
8              Numeric features               120
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              2138
2023-05-27 23:51:59,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:59,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:59,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:59,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:51:59,866:INFO:setup() successfully completed in 16.98s...............
2023-05-27 23:51:59,866:INFO:Initializing create_model()
2023-05-27 23:51:59,866:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f71ed9071c0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-27 23:51:59,866:INFO:Checking exceptions
2023-05-27 23:51:59,888:INFO:Importing libraries
2023-05-27 23:51:59,888:INFO:Copying training dataset
2023-05-27 23:52:00,073:INFO:Defining folds
2023-05-27 23:52:00,073:INFO:Declaring metric variables
2023-05-27 23:52:00,075:INFO:Importing untrained model
2023-05-27 23:52:00,077:INFO:Ridge Regression Imported successfully
2023-05-27 23:52:00,081:INFO:Starting cross validation
2023-05-27 23:52:00,105:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-27 23:52:33,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:52:33,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:52:33,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:52:33,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-27 23:52:33,527:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-27 23:52:36,746:INFO:PyCaret RegressionExperiment
2023-05-27 23:52:36,746:INFO:Logging name: reg-default-name
2023-05-27 23:52:36,746:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-27 23:52:36,746:INFO:version 3.0.2
2023-05-27 23:52:36,746:INFO:Initializing setup()
2023-05-27 23:52:36,746:INFO:self.USI: 7494
2023-05-27 23:52:36,746:INFO:self._variable_keys: {'exp_name_log', 'USI', 'html_param', 'gpu_n_jobs_param', 'fold_generator', 'fold_shuffle_param', 'fold_groups_param', 'idx', 'data', 'X_train', 'memory', 'y_test', 'log_plots_param', 'y', 'n_jobs_param', 'target_param', 'seed', '_available_plots', 'logging_param', 'X_test', 'y_train', 'exp_id', 'transform_target_param', 'pipeline', 'gpu_param', 'X', '_ml_usecase'}
2023-05-27 23:52:36,746:INFO:Checking environment
2023-05-27 23:52:36,746:INFO:python_version: 3.8.16
2023-05-27 23:52:36,746:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-27 23:52:36,746:INFO:machine: x86_64
2023-05-27 23:52:36,746:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:52:36,746:INFO:Memory: svmem(total=16378343424, available=9901338624, percent=39.5, used=5294600192, free=7528914944, active=2090754048, inactive=5700091904, buffers=178794496, cached=3376033792, shared=829399040, slab=542167040)
2023-05-27 23:52:36,747:INFO:Physical Core: 10
2023-05-27 23:52:36,747:INFO:Logical Core: 16
2023-05-27 23:52:36,747:INFO:Checking libraries
2023-05-27 23:52:36,747:INFO:System:
2023-05-27 23:52:36,747:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-27 23:52:36,747:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-27 23:52:36,747:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-27 23:52:36,747:INFO:PyCaret required dependencies:
2023-05-27 23:52:36,747:INFO:                 pip: 23.0.1
2023-05-27 23:52:36,747:INFO:          setuptools: 66.0.0
2023-05-27 23:52:36,747:INFO:             pycaret: 3.0.2
2023-05-27 23:52:36,747:INFO:             IPython: 8.12.2
2023-05-27 23:52:36,747:INFO:          ipywidgets: 8.0.6
2023-05-27 23:52:36,747:INFO:                tqdm: 4.65.0
2023-05-27 23:52:36,747:INFO:               numpy: 1.23.5
2023-05-27 23:52:36,747:INFO:              pandas: 1.5.3
2023-05-27 23:52:36,747:INFO:              jinja2: 3.1.2
2023-05-27 23:52:36,748:INFO:               scipy: 1.10.1
2023-05-27 23:52:36,748:INFO:              joblib: 1.2.0
2023-05-27 23:52:36,748:INFO:             sklearn: 1.2.2
2023-05-27 23:52:36,748:INFO:                pyod: 1.0.9
2023-05-27 23:52:36,748:INFO:            imblearn: 0.10.1
2023-05-27 23:52:36,748:INFO:   category_encoders: 2.6.1
2023-05-27 23:52:36,748:INFO:            lightgbm: 3.3.5
2023-05-27 23:52:36,748:INFO:               numba: 0.57.0
2023-05-27 23:52:36,748:INFO:            requests: 2.29.0
2023-05-27 23:52:36,748:INFO:          matplotlib: 3.7.1
2023-05-27 23:52:36,748:INFO:          scikitplot: 0.3.7
2023-05-27 23:52:36,748:INFO:         yellowbrick: 1.5
2023-05-27 23:52:36,748:INFO:              plotly: 5.14.1
2023-05-27 23:52:36,748:INFO:             kaleido: 0.2.1
2023-05-27 23:52:36,748:INFO:         statsmodels: 0.14.0
2023-05-27 23:52:36,748:INFO:              sktime: 0.17.0
2023-05-27 23:52:36,748:INFO:               tbats: 1.1.3
2023-05-27 23:52:36,748:INFO:            pmdarima: 2.0.3
2023-05-27 23:52:36,748:INFO:              psutil: 5.9.0
2023-05-27 23:52:36,748:INFO:PyCaret optional dependencies:
2023-05-27 23:52:36,758:INFO:                shap: Not installed
2023-05-27 23:52:36,758:INFO:           interpret: Not installed
2023-05-27 23:52:36,758:INFO:                umap: Not installed
2023-05-27 23:52:36,758:INFO:    pandas_profiling: Not installed
2023-05-27 23:52:36,758:INFO:  explainerdashboard: Not installed
2023-05-27 23:52:36,758:INFO:             autoviz: Not installed
2023-05-27 23:52:36,758:INFO:           fairlearn: Not installed
2023-05-27 23:52:36,758:INFO:             xgboost: Not installed
2023-05-27 23:52:36,758:INFO:            catboost: Not installed
2023-05-27 23:52:36,758:INFO:              kmodes: Not installed
2023-05-27 23:52:36,758:INFO:             mlxtend: Not installed
2023-05-27 23:52:36,758:INFO:       statsforecast: Not installed
2023-05-27 23:52:36,758:INFO:        tune_sklearn: Not installed
2023-05-27 23:52:36,758:INFO:                 ray: Not installed
2023-05-27 23:52:36,758:INFO:            hyperopt: Not installed
2023-05-27 23:52:36,759:INFO:              optuna: Not installed
2023-05-27 23:52:36,759:INFO:               skopt: Not installed
2023-05-27 23:52:36,759:INFO:              mlflow: Not installed
2023-05-27 23:52:36,759:INFO:              gradio: Not installed
2023-05-27 23:52:36,759:INFO:             fastapi: Not installed
2023-05-27 23:52:36,759:INFO:             uvicorn: Not installed
2023-05-27 23:52:36,759:INFO:              m2cgen: Not installed
2023-05-27 23:52:36,759:INFO:           evidently: Not installed
2023-05-27 23:52:36,759:INFO:               fugue: Not installed
2023-05-27 23:52:36,759:INFO:           streamlit: Not installed
2023-05-27 23:52:36,759:INFO:             prophet: Not installed
2023-05-27 23:52:36,759:INFO:None
2023-05-27 23:52:36,759:INFO:Set up data.
2023-05-27 23:52:37,088:INFO:Set up train/test split.
2023-05-27 23:52:37,366:INFO:Set up index.
2023-05-27 23:52:37,370:INFO:Set up folding strategy.
2023-05-27 23:52:37,370:INFO:Assigning column types.
2023-05-27 23:52:37,543:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-27 23:52:37,543:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,545:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,548:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,703:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:37,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:37,743:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,745:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,893:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:37,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:37,924:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-27 23:52:37,928:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:52:37,931:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,107:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,248:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,274:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,276:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-27 23:52:38,282:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,421:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,442:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,446:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,624:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-27 23:52:38,766:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,954:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-27 23:52:38,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:38,955:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-27 23:52:39,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:39,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,277:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-27 23:52:39,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,302:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-27 23:52:39,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,643:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,656:INFO:Preparing preprocessing pipeline...
2023-05-27 23:52:39,656:INFO:Set up simple imputation.
2023-05-27 23:52:39,719:INFO:Set up encoding of ordinal features.
2023-05-27 23:52:39,828:INFO:Set up encoding of categorical features.
2023-05-27 23:52:39,828:INFO:Set up removing multicollinearity.
2023-05-27 23:52:39,828:INFO:Set up feature selection.
2023-05-27 23:52:39,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:39,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:41,870:INFO:Finished creating preprocessing pipeline.
2023-05-27 23:52:41,903:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size',
                                             'nearest_fault_distance_km',
                                             'nearest_eq_...
                 TransformerWrapper(include=['info', 'Municipio'],
                                    transformer=TargetEncoder(cols=['info',
                                                                    'Municipio'],
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf)))])
2023-05-27 23:52:41,903:INFO:Creating final display dataframe.
2023-05-27 23:52:42,553:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape     (296921, 128)
4        Transformed data shape      (296921, 26)
5   Transformed train set shape      (207844, 26)
6    Transformed test set shape       (89077, 26)
7              Ordinal features                 2
8              Numeric features               120
9          Categorical features                 7
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              7494
2023-05-27 23:52:42,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:42,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:42,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:42,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-27 23:52:42,924:INFO:setup() successfully completed in 6.19s...............
2023-05-27 23:52:42,924:INFO:Initializing create_model()
2023-05-27 23:52:42,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f2da3677250>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-27 23:52:42,924:INFO:Checking exceptions
2023-05-27 23:52:42,950:INFO:Importing libraries
2023-05-27 23:52:42,950:INFO:Copying training dataset
2023-05-27 23:52:43,156:INFO:Defining folds
2023-05-27 23:52:43,156:INFO:Declaring metric variables
2023-05-27 23:52:43,159:INFO:Importing untrained model
2023-05-27 23:52:43,161:INFO:Ridge Regression Imported successfully
2023-05-27 23:52:43,166:INFO:Starting cross validation
2023-05-27 23:52:43,198:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-27 23:52:46,393:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:47,523:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:49,960:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:50,777:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:50,843:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:51,629:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:52,848:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-27 23:52:55,154:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:55,682:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:57,480:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:52:58,177:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-27 23:52:58,292:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-27 23:52:59,904:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-05-27 23:53:00,063:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-05-28 00:59:32,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 00:59:32,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 00:59:32,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 00:59:32,915:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 00:59:33,354:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-28 00:59:34,238:INFO:PyCaret RegressionExperiment
2023-05-28 00:59:34,238:INFO:Logging name: reg-default-name
2023-05-28 00:59:34,238:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 00:59:34,238:INFO:version 3.0.2
2023-05-28 00:59:34,238:INFO:Initializing setup()
2023-05-28 00:59:34,238:INFO:self.USI: d670
2023-05-28 00:59:34,238:INFO:self._variable_keys: {'seed', 'X_train', 'y_test', 'log_plots_param', 'y_train', 'html_param', 'X', 'fold_groups_param', 'idx', 'exp_id', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'target_param', '_ml_usecase', 'exp_name_log', '_available_plots', 'memory', 'pipeline', 'transform_target_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'y', 'gpu_param', 'X_test'}
2023-05-28 00:59:34,238:INFO:Checking environment
2023-05-28 00:59:34,238:INFO:python_version: 3.8.16
2023-05-28 00:59:34,238:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 00:59:34,238:INFO:machine: x86_64
2023-05-28 00:59:34,238:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 00:59:34,238:INFO:Memory: svmem(total=16378343424, available=8882630656, percent=45.8, used=6249725952, free=6413520896, active=2055479296, inactive=6647857152, buffers=226824192, cached=3488272384, shared=892981248, slab=550776832)
2023-05-28 00:59:34,239:INFO:Physical Core: 10
2023-05-28 00:59:34,239:INFO:Logical Core: 16
2023-05-28 00:59:34,239:INFO:Checking libraries
2023-05-28 00:59:34,239:INFO:System:
2023-05-28 00:59:34,239:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 00:59:34,239:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 00:59:34,239:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 00:59:34,239:INFO:PyCaret required dependencies:
2023-05-28 00:59:34,239:INFO:                 pip: 23.0.1
2023-05-28 00:59:34,239:INFO:          setuptools: 66.0.0
2023-05-28 00:59:34,239:INFO:             pycaret: 3.0.2
2023-05-28 00:59:34,239:INFO:             IPython: 8.12.2
2023-05-28 00:59:34,239:INFO:          ipywidgets: 8.0.6
2023-05-28 00:59:34,239:INFO:                tqdm: 4.65.0
2023-05-28 00:59:34,239:INFO:               numpy: 1.23.5
2023-05-28 00:59:34,239:INFO:              pandas: 1.5.3
2023-05-28 00:59:34,239:INFO:              jinja2: 3.1.2
2023-05-28 00:59:34,239:INFO:               scipy: 1.10.1
2023-05-28 00:59:34,239:INFO:              joblib: 1.2.0
2023-05-28 00:59:34,239:INFO:             sklearn: 1.2.2
2023-05-28 00:59:34,239:INFO:                pyod: 1.0.9
2023-05-28 00:59:34,239:INFO:            imblearn: 0.10.1
2023-05-28 00:59:34,239:INFO:   category_encoders: 2.6.1
2023-05-28 00:59:34,239:INFO:            lightgbm: 3.3.5
2023-05-28 00:59:34,239:INFO:               numba: 0.57.0
2023-05-28 00:59:34,239:INFO:            requests: 2.29.0
2023-05-28 00:59:34,239:INFO:          matplotlib: 3.7.1
2023-05-28 00:59:34,239:INFO:          scikitplot: 0.3.7
2023-05-28 00:59:34,239:INFO:         yellowbrick: 1.5
2023-05-28 00:59:34,239:INFO:              plotly: 5.14.1
2023-05-28 00:59:34,239:INFO:             kaleido: 0.2.1
2023-05-28 00:59:34,239:INFO:         statsmodels: 0.14.0
2023-05-28 00:59:34,239:INFO:              sktime: 0.17.0
2023-05-28 00:59:34,239:INFO:               tbats: 1.1.3
2023-05-28 00:59:34,239:INFO:            pmdarima: 2.0.3
2023-05-28 00:59:34,239:INFO:              psutil: 5.9.0
2023-05-28 00:59:34,239:INFO:PyCaret optional dependencies:
2023-05-28 00:59:34,248:INFO:                shap: Not installed
2023-05-28 00:59:34,248:INFO:           interpret: Not installed
2023-05-28 00:59:34,248:INFO:                umap: Not installed
2023-05-28 00:59:34,248:INFO:    pandas_profiling: Not installed
2023-05-28 00:59:34,248:INFO:  explainerdashboard: Not installed
2023-05-28 00:59:34,248:INFO:             autoviz: Not installed
2023-05-28 00:59:34,248:INFO:           fairlearn: Not installed
2023-05-28 00:59:34,248:INFO:             xgboost: Not installed
2023-05-28 00:59:34,248:INFO:            catboost: Not installed
2023-05-28 00:59:34,248:INFO:              kmodes: Not installed
2023-05-28 00:59:34,248:INFO:             mlxtend: Not installed
2023-05-28 00:59:34,248:INFO:       statsforecast: Not installed
2023-05-28 00:59:34,248:INFO:        tune_sklearn: Not installed
2023-05-28 00:59:34,248:INFO:                 ray: Not installed
2023-05-28 00:59:34,248:INFO:            hyperopt: Not installed
2023-05-28 00:59:34,248:INFO:              optuna: Not installed
2023-05-28 00:59:34,248:INFO:               skopt: Not installed
2023-05-28 00:59:34,248:INFO:              mlflow: Not installed
2023-05-28 00:59:34,248:INFO:              gradio: Not installed
2023-05-28 00:59:34,248:INFO:             fastapi: Not installed
2023-05-28 00:59:34,248:INFO:             uvicorn: Not installed
2023-05-28 00:59:34,248:INFO:              m2cgen: Not installed
2023-05-28 00:59:34,248:INFO:           evidently: Not installed
2023-05-28 00:59:34,248:INFO:               fugue: Not installed
2023-05-28 00:59:34,248:INFO:           streamlit: Not installed
2023-05-28 00:59:34,248:INFO:             prophet: Not installed
2023-05-28 00:59:34,248:INFO:None
2023-05-28 00:59:34,248:INFO:Set up data.
2023-05-28 00:59:34,385:INFO:Set up train/test split.
2023-05-28 00:59:34,431:INFO:Set up index.
2023-05-28 00:59:34,431:INFO:Set up folding strategy.
2023-05-28 00:59:34,431:INFO:Assigning column types.
2023-05-28 00:59:34,451:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-28 00:59:34,451:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,453:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,455:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,539:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,542:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,544:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,605:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,606:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-28 00:59:34,609:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,612:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,677:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,741:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-28 00:59:34,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,796:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,825:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,872:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,897:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-28 00:59:34,947:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,970:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:34,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:34,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:35,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 00:59:35,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-28 00:59:35,083:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:35,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 00:59:35,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,224:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-28 00:59:35,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,397:INFO:Preparing preprocessing pipeline...
2023-05-28 00:59:35,397:INFO:Set up simple imputation.
2023-05-28 00:59:35,410:INFO:Set up encoding of ordinal features.
2023-05-28 00:59:35,420:INFO:Set up encoding of categorical features.
2023-05-28 00:59:35,420:INFO:Set up removing multicollinearity.
2023-05-28 00:59:35,420:INFO:Set up feature selection.
2023-05-28 00:59:35,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:35,509:INFO:Set up column name cleaning.
2023-05-28 00:59:37,825:INFO:Finished creating preprocessing pipeline.
2023-05-28 00:59:37,853:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size', 'Center-Longitude',
                                             'Center-Latitude', 'ec...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-05-28 00:59:37,853:INFO:Creating final display dataframe.
2023-05-28 00:59:38,980:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape      (39490, 128)
4        Transformed data shape       (39490, 26)
5   Transformed train set shape       (27643, 26)
6    Transformed test set shape       (11847, 26)
7              Ordinal features                 2
8              Numeric features               118
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              d670
2023-05-28 00:59:39,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:39,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:39,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:39,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 00:59:39,123:INFO:setup() successfully completed in 4.89s...............
2023-05-28 00:59:39,123:INFO:Initializing create_model()
2023-05-28 00:59:39,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff79b85c310>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 00:59:39,123:INFO:Checking exceptions
2023-05-28 00:59:39,151:INFO:Importing libraries
2023-05-28 00:59:39,152:INFO:Copying training dataset
2023-05-28 00:59:39,175:INFO:Defining folds
2023-05-28 00:59:39,175:INFO:Declaring metric variables
2023-05-28 00:59:39,178:INFO:Importing untrained model
2023-05-28 00:59:39,181:INFO:Ridge Regression Imported successfully
2023-05-28 00:59:39,188:INFO:Starting cross validation
2023-05-28 00:59:39,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 00:59:46,252:INFO:Calculating mean and std
2023-05-28 00:59:46,256:INFO:Creating metrics dataframe
2023-05-28 00:59:46,272:INFO:Finalizing model
2023-05-28 00:59:46,928:INFO:Uploading results into container
2023-05-28 00:59:46,929:INFO:Uploading model into container now
2023-05-28 00:59:46,940:INFO:_master_model_container: 1
2023-05-28 00:59:46,940:INFO:_display_container: 2
2023-05-28 00:59:46,940:INFO:Ridge(random_state=123)
2023-05-28 00:59:46,940:INFO:create_model() successfully completed......................................
2023-05-28 01:03:20,016:INFO:Initializing create_model()
2023-05-28 01:03:20,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff79b85c310>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:03:20,017:INFO:Checking exceptions
2023-05-28 01:03:20,032:INFO:Importing libraries
2023-05-28 01:03:20,032:INFO:Copying training dataset
2023-05-28 01:03:20,059:INFO:Defining folds
2023-05-28 01:03:20,060:INFO:Declaring metric variables
2023-05-28 01:03:20,063:INFO:Importing untrained model
2023-05-28 01:03:20,067:INFO:Ridge Regression Imported successfully
2023-05-28 01:03:20,075:INFO:Starting cross validation
2023-05-28 01:03:20,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:03:22,761:INFO:Calculating mean and std
2023-05-28 01:03:22,763:INFO:Creating metrics dataframe
2023-05-28 01:03:22,775:INFO:Finalizing model
2023-05-28 01:03:23,246:INFO:Uploading results into container
2023-05-28 01:03:23,247:INFO:Uploading model into container now
2023-05-28 01:03:23,257:INFO:_master_model_container: 2
2023-05-28 01:03:23,258:INFO:_display_container: 3
2023-05-28 01:03:23,258:INFO:Ridge(random_state=123)
2023-05-28 01:03:23,258:INFO:create_model() successfully completed......................................
2023-05-28 01:04:11,339:INFO:PyCaret RegressionExperiment
2023-05-28 01:04:11,339:INFO:Logging name: reg-default-name
2023-05-28 01:04:11,339:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 01:04:11,339:INFO:version 3.0.2
2023-05-28 01:04:11,339:INFO:Initializing setup()
2023-05-28 01:04:11,339:INFO:self.USI: cb7d
2023-05-28 01:04:11,339:INFO:self._variable_keys: {'seed', 'X_train', 'y_test', 'log_plots_param', 'y_train', 'html_param', 'X', 'fold_groups_param', 'idx', 'exp_id', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'target_param', '_ml_usecase', 'exp_name_log', '_available_plots', 'memory', 'pipeline', 'transform_target_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'y', 'gpu_param', 'X_test'}
2023-05-28 01:04:11,339:INFO:Checking environment
2023-05-28 01:04:11,339:INFO:python_version: 3.8.16
2023-05-28 01:04:11,339:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 01:04:11,339:INFO:machine: x86_64
2023-05-28 01:04:11,339:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:04:11,340:INFO:Memory: svmem(total=16378343424, available=4284653568, percent=73.8, used=10710781952, free=664768512, active=2152443904, inactive=12142690304, buffers=235327488, cached=4767465472, shared=1030021120, slab=594595840)
2023-05-28 01:04:11,340:INFO:Physical Core: 10
2023-05-28 01:04:11,340:INFO:Logical Core: 16
2023-05-28 01:04:11,340:INFO:Checking libraries
2023-05-28 01:04:11,340:INFO:System:
2023-05-28 01:04:11,340:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 01:04:11,340:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 01:04:11,340:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:04:11,340:INFO:PyCaret required dependencies:
2023-05-28 01:04:11,340:INFO:                 pip: 23.0.1
2023-05-28 01:04:11,340:INFO:          setuptools: 66.0.0
2023-05-28 01:04:11,340:INFO:             pycaret: 3.0.2
2023-05-28 01:04:11,340:INFO:             IPython: 8.12.2
2023-05-28 01:04:11,340:INFO:          ipywidgets: 8.0.6
2023-05-28 01:04:11,340:INFO:                tqdm: 4.65.0
2023-05-28 01:04:11,340:INFO:               numpy: 1.23.5
2023-05-28 01:04:11,340:INFO:              pandas: 1.5.3
2023-05-28 01:04:11,340:INFO:              jinja2: 3.1.2
2023-05-28 01:04:11,340:INFO:               scipy: 1.10.1
2023-05-28 01:04:11,341:INFO:              joblib: 1.2.0
2023-05-28 01:04:11,341:INFO:             sklearn: 1.2.2
2023-05-28 01:04:11,341:INFO:                pyod: 1.0.9
2023-05-28 01:04:11,341:INFO:            imblearn: 0.10.1
2023-05-28 01:04:11,341:INFO:   category_encoders: 2.6.1
2023-05-28 01:04:11,341:INFO:            lightgbm: 3.3.5
2023-05-28 01:04:11,341:INFO:               numba: 0.57.0
2023-05-28 01:04:11,341:INFO:            requests: 2.29.0
2023-05-28 01:04:11,341:INFO:          matplotlib: 3.7.1
2023-05-28 01:04:11,341:INFO:          scikitplot: 0.3.7
2023-05-28 01:04:11,341:INFO:         yellowbrick: 1.5
2023-05-28 01:04:11,341:INFO:              plotly: 5.14.1
2023-05-28 01:04:11,341:INFO:             kaleido: 0.2.1
2023-05-28 01:04:11,341:INFO:         statsmodels: 0.14.0
2023-05-28 01:04:11,341:INFO:              sktime: 0.17.0
2023-05-28 01:04:11,341:INFO:               tbats: 1.1.3
2023-05-28 01:04:11,341:INFO:            pmdarima: 2.0.3
2023-05-28 01:04:11,341:INFO:              psutil: 5.9.0
2023-05-28 01:04:11,341:INFO:PyCaret optional dependencies:
2023-05-28 01:04:11,341:INFO:                shap: Not installed
2023-05-28 01:04:11,341:INFO:           interpret: Not installed
2023-05-28 01:04:11,341:INFO:                umap: Not installed
2023-05-28 01:04:11,341:INFO:    pandas_profiling: Not installed
2023-05-28 01:04:11,341:INFO:  explainerdashboard: Not installed
2023-05-28 01:04:11,341:INFO:             autoviz: Not installed
2023-05-28 01:04:11,341:INFO:           fairlearn: Not installed
2023-05-28 01:04:11,341:INFO:             xgboost: Not installed
2023-05-28 01:04:11,341:INFO:            catboost: Not installed
2023-05-28 01:04:11,341:INFO:              kmodes: Not installed
2023-05-28 01:04:11,341:INFO:             mlxtend: Not installed
2023-05-28 01:04:11,341:INFO:       statsforecast: Not installed
2023-05-28 01:04:11,341:INFO:        tune_sklearn: Not installed
2023-05-28 01:04:11,341:INFO:                 ray: Not installed
2023-05-28 01:04:11,341:INFO:            hyperopt: Not installed
2023-05-28 01:04:11,341:INFO:              optuna: Not installed
2023-05-28 01:04:11,341:INFO:               skopt: Not installed
2023-05-28 01:04:11,341:INFO:              mlflow: Not installed
2023-05-28 01:04:11,341:INFO:              gradio: Not installed
2023-05-28 01:04:11,341:INFO:             fastapi: Not installed
2023-05-28 01:04:11,341:INFO:             uvicorn: Not installed
2023-05-28 01:04:11,341:INFO:              m2cgen: Not installed
2023-05-28 01:04:11,341:INFO:           evidently: Not installed
2023-05-28 01:04:11,341:INFO:               fugue: Not installed
2023-05-28 01:04:11,341:INFO:           streamlit: Not installed
2023-05-28 01:04:11,341:INFO:             prophet: Not installed
2023-05-28 01:04:11,341:INFO:None
2023-05-28 01:04:11,341:INFO:Set up data.
2023-05-28 01:04:11,414:INFO:Set up train/test split.
2023-05-28 01:04:11,438:INFO:Set up index.
2023-05-28 01:04:11,439:INFO:Set up folding strategy.
2023-05-28 01:04:11,439:INFO:Assigning column types.
2023-05-28 01:04:11,456:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-28 01:04:11,456:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,458:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,460:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,496:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,517:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,519:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,522:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,584:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-28 01:04:11,586:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,588:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,632:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,656:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,658:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,699:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,722:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-28 01:04:11,727:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,767:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,788:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,793:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,856:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-28 01:04:11,905:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:11,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:11,979:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:12,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:04:12,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,003:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-28 01:04:12,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:12,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,121:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:04:12,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,147:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-28 01:04:12,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,282:INFO:Preparing preprocessing pipeline...
2023-05-28 01:04:12,282:INFO:Set up simple imputation.
2023-05-28 01:04:12,292:INFO:Set up encoding of ordinal features.
2023-05-28 01:04:12,303:INFO:Set up encoding of categorical features.
2023-05-28 01:04:12,303:INFO:Set up removing multicollinearity.
2023-05-28 01:04:12,303:INFO:Set up feature selection.
2023-05-28 01:04:12,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:12,389:INFO:Set up column name cleaning.
2023-05-28 01:04:12,857:INFO:Finished creating preprocessing pipeline.
2023-05-28 01:04:12,882:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size', 'Center-Longitude',
                                             'Center-Latitude', 'ec...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-05-28 01:04:12,882:INFO:Creating final display dataframe.
2023-05-28 01:04:13,802:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape      (39490, 128)
4        Transformed data shape       (39490, 26)
5   Transformed train set shape       (27643, 26)
6    Transformed test set shape       (11847, 26)
7              Ordinal features                 2
8              Numeric features               118
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              cb7d
2023-05-28 01:04:13,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:13,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:13,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:13,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:04:13,967:INFO:setup() successfully completed in 2.64s...............
2023-05-28 01:04:13,972:INFO:Initializing create_model()
2023-05-28 01:04:13,972:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7fd2520>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:04:13,972:INFO:Checking exceptions
2023-05-28 01:04:13,985:INFO:Importing libraries
2023-05-28 01:04:13,985:INFO:Copying training dataset
2023-05-28 01:04:14,015:INFO:Defining folds
2023-05-28 01:04:14,015:INFO:Declaring metric variables
2023-05-28 01:04:14,020:INFO:Importing untrained model
2023-05-28 01:04:14,025:INFO:Ridge Regression Imported successfully
2023-05-28 01:04:14,034:INFO:Starting cross validation
2023-05-28 01:04:14,088:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:04:15,441:INFO:Calculating mean and std
2023-05-28 01:04:15,444:INFO:Creating metrics dataframe
2023-05-28 01:04:15,451:INFO:Finalizing model
2023-05-28 01:04:16,080:INFO:Uploading results into container
2023-05-28 01:04:16,081:INFO:Uploading model into container now
2023-05-28 01:04:16,093:INFO:_master_model_container: 1
2023-05-28 01:04:16,093:INFO:_display_container: 2
2023-05-28 01:04:16,094:INFO:Ridge(random_state=123)
2023-05-28 01:04:16,094:INFO:create_model() successfully completed......................................
2023-05-28 01:06:41,875:INFO:Initializing create_model()
2023-05-28 01:06:41,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7fd2520>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:06:41,875:INFO:Checking exceptions
2023-05-28 01:06:41,889:INFO:Importing libraries
2023-05-28 01:06:41,890:INFO:Copying training dataset
2023-05-28 01:06:41,916:INFO:Defining folds
2023-05-28 01:06:41,916:INFO:Declaring metric variables
2023-05-28 01:06:41,919:INFO:Importing untrained model
2023-05-28 01:06:41,922:INFO:Ridge Regression Imported successfully
2023-05-28 01:06:41,927:INFO:Starting cross validation
2023-05-28 01:06:41,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:06:42,944:INFO:Calculating mean and std
2023-05-28 01:06:42,947:INFO:Creating metrics dataframe
2023-05-28 01:06:42,954:INFO:Finalizing model
2023-05-28 01:06:43,353:INFO:Uploading results into container
2023-05-28 01:06:43,354:INFO:Uploading model into container now
2023-05-28 01:06:43,366:INFO:_master_model_container: 2
2023-05-28 01:06:43,366:INFO:_display_container: 3
2023-05-28 01:06:43,367:INFO:Ridge(random_state=123)
2023-05-28 01:06:43,367:INFO:create_model() successfully completed......................................
2023-05-28 01:09:48,315:INFO:Initializing create_model()
2023-05-28 01:09:48,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7fd2520>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:09:48,315:INFO:Checking exceptions
2023-05-28 01:09:48,330:INFO:Importing libraries
2023-05-28 01:09:48,330:INFO:Copying training dataset
2023-05-28 01:09:48,355:INFO:Defining folds
2023-05-28 01:09:48,355:INFO:Declaring metric variables
2023-05-28 01:09:48,358:INFO:Importing untrained model
2023-05-28 01:09:48,361:INFO:Ridge Regression Imported successfully
2023-05-28 01:09:48,366:INFO:Starting cross validation
2023-05-28 01:09:48,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:09:49,524:INFO:Calculating mean and std
2023-05-28 01:09:49,527:INFO:Creating metrics dataframe
2023-05-28 01:09:49,536:INFO:Finalizing model
2023-05-28 01:09:49,922:INFO:Uploading results into container
2023-05-28 01:09:49,923:INFO:Uploading model into container now
2023-05-28 01:09:49,933:INFO:_master_model_container: 3
2023-05-28 01:09:49,933:INFO:_display_container: 4
2023-05-28 01:09:49,933:INFO:Ridge(random_state=123)
2023-05-28 01:09:49,933:INFO:create_model() successfully completed......................................
2023-05-28 01:11:54,516:INFO:PyCaret RegressionExperiment
2023-05-28 01:11:54,516:INFO:Logging name: reg-default-name
2023-05-28 01:11:54,516:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 01:11:54,516:INFO:version 3.0.2
2023-05-28 01:11:54,516:INFO:Initializing setup()
2023-05-28 01:11:54,516:INFO:self.USI: 9492
2023-05-28 01:11:54,516:INFO:self._variable_keys: {'seed', 'X_train', 'y_test', 'log_plots_param', 'y_train', 'html_param', 'X', 'fold_groups_param', 'idx', 'exp_id', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'target_param', '_ml_usecase', 'exp_name_log', '_available_plots', 'memory', 'pipeline', 'transform_target_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'y', 'gpu_param', 'X_test'}
2023-05-28 01:11:54,516:INFO:Checking environment
2023-05-28 01:11:54,516:INFO:python_version: 3.8.16
2023-05-28 01:11:54,516:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 01:11:54,516:INFO:machine: x86_64
2023-05-28 01:11:54,517:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:11:54,517:INFO:Memory: svmem(total=16378343424, available=5415899136, percent=66.9, used=9613430784, free=1797308416, active=3239866368, inactive=9924984832, buffers=236789760, cached=4730814464, shared=996126720, slab=601362432)
2023-05-28 01:11:54,517:INFO:Physical Core: 10
2023-05-28 01:11:54,517:INFO:Logical Core: 16
2023-05-28 01:11:54,517:INFO:Checking libraries
2023-05-28 01:11:54,517:INFO:System:
2023-05-28 01:11:54,517:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 01:11:54,517:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 01:11:54,517:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:11:54,517:INFO:PyCaret required dependencies:
2023-05-28 01:11:54,517:INFO:                 pip: 23.0.1
2023-05-28 01:11:54,517:INFO:          setuptools: 66.0.0
2023-05-28 01:11:54,517:INFO:             pycaret: 3.0.2
2023-05-28 01:11:54,517:INFO:             IPython: 8.12.2
2023-05-28 01:11:54,517:INFO:          ipywidgets: 8.0.6
2023-05-28 01:11:54,517:INFO:                tqdm: 4.65.0
2023-05-28 01:11:54,517:INFO:               numpy: 1.23.5
2023-05-28 01:11:54,517:INFO:              pandas: 1.5.3
2023-05-28 01:11:54,517:INFO:              jinja2: 3.1.2
2023-05-28 01:11:54,517:INFO:               scipy: 1.10.1
2023-05-28 01:11:54,517:INFO:              joblib: 1.2.0
2023-05-28 01:11:54,518:INFO:             sklearn: 1.2.2
2023-05-28 01:11:54,518:INFO:                pyod: 1.0.9
2023-05-28 01:11:54,518:INFO:            imblearn: 0.10.1
2023-05-28 01:11:54,518:INFO:   category_encoders: 2.6.1
2023-05-28 01:11:54,518:INFO:            lightgbm: 3.3.5
2023-05-28 01:11:54,518:INFO:               numba: 0.57.0
2023-05-28 01:11:54,518:INFO:            requests: 2.29.0
2023-05-28 01:11:54,518:INFO:          matplotlib: 3.7.1
2023-05-28 01:11:54,518:INFO:          scikitplot: 0.3.7
2023-05-28 01:11:54,518:INFO:         yellowbrick: 1.5
2023-05-28 01:11:54,518:INFO:              plotly: 5.14.1
2023-05-28 01:11:54,518:INFO:             kaleido: 0.2.1
2023-05-28 01:11:54,518:INFO:         statsmodels: 0.14.0
2023-05-28 01:11:54,518:INFO:              sktime: 0.17.0
2023-05-28 01:11:54,518:INFO:               tbats: 1.1.3
2023-05-28 01:11:54,518:INFO:            pmdarima: 2.0.3
2023-05-28 01:11:54,518:INFO:              psutil: 5.9.0
2023-05-28 01:11:54,518:INFO:PyCaret optional dependencies:
2023-05-28 01:11:54,518:INFO:                shap: Not installed
2023-05-28 01:11:54,518:INFO:           interpret: Not installed
2023-05-28 01:11:54,518:INFO:                umap: Not installed
2023-05-28 01:11:54,518:INFO:    pandas_profiling: Not installed
2023-05-28 01:11:54,518:INFO:  explainerdashboard: Not installed
2023-05-28 01:11:54,518:INFO:             autoviz: Not installed
2023-05-28 01:11:54,518:INFO:           fairlearn: Not installed
2023-05-28 01:11:54,518:INFO:             xgboost: Not installed
2023-05-28 01:11:54,518:INFO:            catboost: Not installed
2023-05-28 01:11:54,518:INFO:              kmodes: Not installed
2023-05-28 01:11:54,518:INFO:             mlxtend: Not installed
2023-05-28 01:11:54,518:INFO:       statsforecast: Not installed
2023-05-28 01:11:54,518:INFO:        tune_sklearn: Not installed
2023-05-28 01:11:54,518:INFO:                 ray: Not installed
2023-05-28 01:11:54,518:INFO:            hyperopt: Not installed
2023-05-28 01:11:54,518:INFO:              optuna: Not installed
2023-05-28 01:11:54,518:INFO:               skopt: Not installed
2023-05-28 01:11:54,518:INFO:              mlflow: Not installed
2023-05-28 01:11:54,518:INFO:              gradio: Not installed
2023-05-28 01:11:54,518:INFO:             fastapi: Not installed
2023-05-28 01:11:54,518:INFO:             uvicorn: Not installed
2023-05-28 01:11:54,518:INFO:              m2cgen: Not installed
2023-05-28 01:11:54,518:INFO:           evidently: Not installed
2023-05-28 01:11:54,518:INFO:               fugue: Not installed
2023-05-28 01:11:54,518:INFO:           streamlit: Not installed
2023-05-28 01:11:54,518:INFO:             prophet: Not installed
2023-05-28 01:11:54,518:INFO:None
2023-05-28 01:11:54,518:INFO:Set up data.
2023-05-28 01:11:54,570:INFO:Set up train/test split.
2023-05-28 01:11:54,593:INFO:Set up index.
2023-05-28 01:11:54,593:INFO:Set up folding strategy.
2023-05-28 01:11:54,593:INFO:Assigning column types.
2023-05-28 01:11:54,612:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-28 01:11:54,612:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,616:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,676:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,678:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,680:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,740:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-28 01:11:54,742:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,744:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,804:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,842:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,862:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,862:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-28 01:11:54,867:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:54,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:54,983:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-28 01:11:55,026:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,116:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-28 01:11:55,161:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:11:55,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,260:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-28 01:11:55,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,404:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,404:INFO:Preparing preprocessing pipeline...
2023-05-28 01:11:55,404:INFO:Set up simple imputation.
2023-05-28 01:11:55,414:INFO:Set up encoding of ordinal features.
2023-05-28 01:11:55,424:INFO:Set up encoding of categorical features.
2023-05-28 01:11:55,424:INFO:Set up removing multicollinearity.
2023-05-28 01:11:55,424:INFO:Set up feature selection.
2023-05-28 01:11:55,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:55,497:INFO:Set up column name cleaning.
2023-05-28 01:11:55,914:INFO:Finished creating preprocessing pipeline.
2023-05-28 01:11:55,939:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size', 'Center-Longitude',
                                             'Center-Latitude', 'ec...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-05-28 01:11:55,939:INFO:Creating final display dataframe.
2023-05-28 01:11:56,148:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape      (39490, 128)
4        Transformed data shape       (39490, 26)
5   Transformed train set shape       (27643, 26)
6    Transformed test set shape       (11847, 26)
7              Ordinal features                 2
8              Numeric features               118
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              9492
2023-05-28 01:11:56,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:56,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:56,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:56,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:11:56,308:INFO:setup() successfully completed in 1.8s...............
2023-05-28 01:11:56,315:INFO:Initializing create_model()
2023-05-28 01:11:56,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff79b8ab580>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:11:56,315:INFO:Checking exceptions
2023-05-28 01:11:56,330:INFO:Importing libraries
2023-05-28 01:11:56,330:INFO:Copying training dataset
2023-05-28 01:11:56,357:INFO:Defining folds
2023-05-28 01:11:56,357:INFO:Declaring metric variables
2023-05-28 01:11:56,361:INFO:Importing untrained model
2023-05-28 01:11:56,364:INFO:Ridge Regression Imported successfully
2023-05-28 01:11:56,370:INFO:Starting cross validation
2023-05-28 01:11:56,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:11:58,320:INFO:Calculating mean and std
2023-05-28 01:11:58,321:INFO:Creating metrics dataframe
2023-05-28 01:11:58,326:INFO:Finalizing model
2023-05-28 01:11:58,722:INFO:Uploading results into container
2023-05-28 01:11:58,723:INFO:Uploading model into container now
2023-05-28 01:11:58,732:INFO:_master_model_container: 1
2023-05-28 01:11:58,733:INFO:_display_container: 2
2023-05-28 01:11:58,733:INFO:Ridge(random_state=123)
2023-05-28 01:11:58,733:INFO:create_model() successfully completed......................................
2023-05-28 01:13:31,346:INFO:PyCaret RegressionExperiment
2023-05-28 01:13:31,346:INFO:Logging name: reg-default-name
2023-05-28 01:13:31,346:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 01:13:31,346:INFO:version 3.0.2
2023-05-28 01:13:31,346:INFO:Initializing setup()
2023-05-28 01:13:31,346:INFO:self.USI: f96f
2023-05-28 01:13:31,346:INFO:self._variable_keys: {'seed', 'X_train', 'y_test', 'log_plots_param', 'y_train', 'html_param', 'X', 'fold_groups_param', 'idx', 'exp_id', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'target_param', '_ml_usecase', 'exp_name_log', '_available_plots', 'memory', 'pipeline', 'transform_target_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'y', 'gpu_param', 'X_test'}
2023-05-28 01:13:31,346:INFO:Checking environment
2023-05-28 01:13:31,346:INFO:python_version: 3.8.16
2023-05-28 01:13:31,346:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 01:13:31,346:INFO:machine: x86_64
2023-05-28 01:13:31,346:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:13:31,346:INFO:Memory: svmem(total=16378343424, available=4439797760, percent=72.9, used=10591408128, free=761544704, active=3253321728, inactive=10925162496, buffers=237154304, cached=4788236288, shared=994250752, slab=604069888)
2023-05-28 01:13:31,346:INFO:Physical Core: 10
2023-05-28 01:13:31,346:INFO:Logical Core: 16
2023-05-28 01:13:31,347:INFO:Checking libraries
2023-05-28 01:13:31,347:INFO:System:
2023-05-28 01:13:31,347:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 01:13:31,347:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 01:13:31,347:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:13:31,347:INFO:PyCaret required dependencies:
2023-05-28 01:13:31,347:INFO:                 pip: 23.0.1
2023-05-28 01:13:31,347:INFO:          setuptools: 66.0.0
2023-05-28 01:13:31,347:INFO:             pycaret: 3.0.2
2023-05-28 01:13:31,347:INFO:             IPython: 8.12.2
2023-05-28 01:13:31,347:INFO:          ipywidgets: 8.0.6
2023-05-28 01:13:31,347:INFO:                tqdm: 4.65.0
2023-05-28 01:13:31,347:INFO:               numpy: 1.23.5
2023-05-28 01:13:31,347:INFO:              pandas: 1.5.3
2023-05-28 01:13:31,347:INFO:              jinja2: 3.1.2
2023-05-28 01:13:31,347:INFO:               scipy: 1.10.1
2023-05-28 01:13:31,347:INFO:              joblib: 1.2.0
2023-05-28 01:13:31,347:INFO:             sklearn: 1.2.2
2023-05-28 01:13:31,347:INFO:                pyod: 1.0.9
2023-05-28 01:13:31,347:INFO:            imblearn: 0.10.1
2023-05-28 01:13:31,347:INFO:   category_encoders: 2.6.1
2023-05-28 01:13:31,347:INFO:            lightgbm: 3.3.5
2023-05-28 01:13:31,347:INFO:               numba: 0.57.0
2023-05-28 01:13:31,347:INFO:            requests: 2.29.0
2023-05-28 01:13:31,347:INFO:          matplotlib: 3.7.1
2023-05-28 01:13:31,347:INFO:          scikitplot: 0.3.7
2023-05-28 01:13:31,347:INFO:         yellowbrick: 1.5
2023-05-28 01:13:31,347:INFO:              plotly: 5.14.1
2023-05-28 01:13:31,347:INFO:             kaleido: 0.2.1
2023-05-28 01:13:31,347:INFO:         statsmodels: 0.14.0
2023-05-28 01:13:31,347:INFO:              sktime: 0.17.0
2023-05-28 01:13:31,347:INFO:               tbats: 1.1.3
2023-05-28 01:13:31,347:INFO:            pmdarima: 2.0.3
2023-05-28 01:13:31,347:INFO:              psutil: 5.9.0
2023-05-28 01:13:31,347:INFO:PyCaret optional dependencies:
2023-05-28 01:13:31,347:INFO:                shap: Not installed
2023-05-28 01:13:31,347:INFO:           interpret: Not installed
2023-05-28 01:13:31,347:INFO:                umap: Not installed
2023-05-28 01:13:31,347:INFO:    pandas_profiling: Not installed
2023-05-28 01:13:31,347:INFO:  explainerdashboard: Not installed
2023-05-28 01:13:31,347:INFO:             autoviz: Not installed
2023-05-28 01:13:31,347:INFO:           fairlearn: Not installed
2023-05-28 01:13:31,347:INFO:             xgboost: Not installed
2023-05-28 01:13:31,347:INFO:            catboost: Not installed
2023-05-28 01:13:31,347:INFO:              kmodes: Not installed
2023-05-28 01:13:31,347:INFO:             mlxtend: Not installed
2023-05-28 01:13:31,347:INFO:       statsforecast: Not installed
2023-05-28 01:13:31,347:INFO:        tune_sklearn: Not installed
2023-05-28 01:13:31,347:INFO:                 ray: Not installed
2023-05-28 01:13:31,347:INFO:            hyperopt: Not installed
2023-05-28 01:13:31,347:INFO:              optuna: Not installed
2023-05-28 01:13:31,347:INFO:               skopt: Not installed
2023-05-28 01:13:31,347:INFO:              mlflow: Not installed
2023-05-28 01:13:31,347:INFO:              gradio: Not installed
2023-05-28 01:13:31,347:INFO:             fastapi: Not installed
2023-05-28 01:13:31,348:INFO:             uvicorn: Not installed
2023-05-28 01:13:31,348:INFO:              m2cgen: Not installed
2023-05-28 01:13:31,348:INFO:           evidently: Not installed
2023-05-28 01:13:31,348:INFO:               fugue: Not installed
2023-05-28 01:13:31,348:INFO:           streamlit: Not installed
2023-05-28 01:13:31,348:INFO:             prophet: Not installed
2023-05-28 01:13:31,348:INFO:None
2023-05-28 01:13:31,348:INFO:Set up data.
2023-05-28 01:13:31,405:INFO:Set up train/test split.
2023-05-28 01:13:31,430:INFO:Set up index.
2023-05-28 01:13:31,431:INFO:Set up folding strategy.
2023-05-28 01:13:31,431:INFO:Assigning column types.
2023-05-28 01:13:31,451:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-28 01:13:31,451:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,454:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,456:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,524:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,525:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,528:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,595:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-28 01:13:31,598:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,600:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,641:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,666:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,668:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,716:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,741:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-28 01:13:31,747:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,824:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,871:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,896:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-28 01:13:31,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:31,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:31,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:32,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:13:32,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,036:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-28 01:13:32,083:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:32,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:13:32,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,174:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-28 01:13:32,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,319:INFO:Preparing preprocessing pipeline...
2023-05-28 01:13:32,319:INFO:Set up simple imputation.
2023-05-28 01:13:32,328:INFO:Set up encoding of ordinal features.
2023-05-28 01:13:32,340:INFO:Set up encoding of categorical features.
2023-05-28 01:13:32,340:INFO:Set up removing multicollinearity.
2023-05-28 01:13:32,340:INFO:Set up feature selection.
2023-05-28 01:13:32,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:32,425:INFO:Set up column name cleaning.
2023-05-28 01:13:32,835:INFO:Finished creating preprocessing pipeline.
2023-05-28 01:13:32,858:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size', 'Center-Longitude',
                                             'Center-Latitude', 'ec...
                                                              handle_missing='return_nan'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-05-28 01:13:32,858:INFO:Creating final display dataframe.
2023-05-28 01:13:33,075:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape      (39490, 128)
4        Transformed data shape       (39490, 26)
5   Transformed train set shape       (27643, 26)
6    Transformed test set shape       (11847, 26)
7              Ordinal features                 2
8              Numeric features               118
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16     Remove multicollinearity              True
17  Multicollinearity threshold               0.9
18            Feature selection              True
19     Feature selection method           classic
20  Feature selection estimator          lightgbm
21  Number of features selected               0.2
22               Fold Generator             KFold
23                  Fold Number                10
24                     CPU Jobs                -1
25                      Use GPU             False
26               Log Experiment             False
27              Experiment Name  reg-default-name
28                          USI              f96f
2023-05-28 01:13:33,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:33,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:33,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:33,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:13:33,234:INFO:setup() successfully completed in 1.9s...............
2023-05-28 01:13:33,241:INFO:Initializing create_model()
2023-05-28 01:13:33,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c83c4910>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:13:33,241:INFO:Checking exceptions
2023-05-28 01:13:33,252:INFO:Importing libraries
2023-05-28 01:13:33,252:INFO:Copying training dataset
2023-05-28 01:13:33,283:INFO:Defining folds
2023-05-28 01:13:33,284:INFO:Declaring metric variables
2023-05-28 01:13:33,287:INFO:Importing untrained model
2023-05-28 01:13:33,290:INFO:Ridge Regression Imported successfully
2023-05-28 01:13:33,297:INFO:Starting cross validation
2023-05-28 01:13:33,387:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:13:34,370:INFO:Calculating mean and std
2023-05-28 01:13:34,371:INFO:Creating metrics dataframe
2023-05-28 01:13:34,378:INFO:Finalizing model
2023-05-28 01:13:34,804:INFO:Uploading results into container
2023-05-28 01:13:34,805:INFO:Uploading model into container now
2023-05-28 01:13:34,816:INFO:_master_model_container: 1
2023-05-28 01:13:34,816:INFO:_display_container: 2
2023-05-28 01:13:34,816:INFO:Ridge(random_state=123)
2023-05-28 01:13:34,817:INFO:create_model() successfully completed......................................
2023-05-28 01:13:42,574:INFO:Initializing create_model()
2023-05-28 01:13:42,574:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c83c4910>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:13:42,574:INFO:Checking exceptions
2023-05-28 01:13:42,590:INFO:Importing libraries
2023-05-28 01:13:42,591:INFO:Copying training dataset
2023-05-28 01:13:42,617:INFO:Defining folds
2023-05-28 01:13:42,617:INFO:Declaring metric variables
2023-05-28 01:13:42,620:INFO:Importing untrained model
2023-05-28 01:13:42,623:INFO:Ridge Regression Imported successfully
2023-05-28 01:13:42,628:INFO:Starting cross validation
2023-05-28 01:13:42,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:13:43,753:INFO:Calculating mean and std
2023-05-28 01:13:43,754:INFO:Creating metrics dataframe
2023-05-28 01:13:43,758:INFO:Finalizing model
2023-05-28 01:13:44,213:INFO:Uploading results into container
2023-05-28 01:13:44,214:INFO:Uploading model into container now
2023-05-28 01:13:44,224:INFO:_master_model_container: 2
2023-05-28 01:13:44,225:INFO:_display_container: 3
2023-05-28 01:13:44,225:INFO:Ridge(random_state=123)
2023-05-28 01:13:44,225:INFO:create_model() successfully completed......................................
2023-05-28 01:18:12,333:INFO:PyCaret RegressionExperiment
2023-05-28 01:18:12,333:INFO:Logging name: reg-default-name
2023-05-28 01:18:12,333:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 01:18:12,333:INFO:version 3.0.2
2023-05-28 01:18:12,333:INFO:Initializing setup()
2023-05-28 01:18:12,333:INFO:self.USI: d026
2023-05-28 01:18:12,333:INFO:self._variable_keys: {'seed', 'X_train', 'y_test', 'log_plots_param', 'y_train', 'html_param', 'X', 'fold_groups_param', 'idx', 'exp_id', 'n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'target_param', '_ml_usecase', 'exp_name_log', '_available_plots', 'memory', 'pipeline', 'transform_target_param', 'fold_generator', 'data', 'gpu_n_jobs_param', 'y', 'gpu_param', 'X_test'}
2023-05-28 01:18:12,333:INFO:Checking environment
2023-05-28 01:18:12,333:INFO:python_version: 3.8.16
2023-05-28 01:18:12,333:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 01:18:12,333:INFO:machine: x86_64
2023-05-28 01:18:12,333:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:18:12,333:INFO:Memory: svmem(total=16378343424, available=4480184320, percent=72.6, used=10559647744, free=750202880, active=3336851456, inactive=10886750208, buffers=238256128, cached=4830236672, shared=985624576, slab=605474816)
2023-05-28 01:18:12,334:INFO:Physical Core: 10
2023-05-28 01:18:12,334:INFO:Logical Core: 16
2023-05-28 01:18:12,334:INFO:Checking libraries
2023-05-28 01:18:12,334:INFO:System:
2023-05-28 01:18:12,334:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 01:18:12,334:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 01:18:12,334:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 01:18:12,334:INFO:PyCaret required dependencies:
2023-05-28 01:18:12,334:INFO:                 pip: 23.0.1
2023-05-28 01:18:12,334:INFO:          setuptools: 66.0.0
2023-05-28 01:18:12,334:INFO:             pycaret: 3.0.2
2023-05-28 01:18:12,334:INFO:             IPython: 8.12.2
2023-05-28 01:18:12,334:INFO:          ipywidgets: 8.0.6
2023-05-28 01:18:12,334:INFO:                tqdm: 4.65.0
2023-05-28 01:18:12,334:INFO:               numpy: 1.23.5
2023-05-28 01:18:12,334:INFO:              pandas: 1.5.3
2023-05-28 01:18:12,334:INFO:              jinja2: 3.1.2
2023-05-28 01:18:12,334:INFO:               scipy: 1.10.1
2023-05-28 01:18:12,334:INFO:              joblib: 1.2.0
2023-05-28 01:18:12,334:INFO:             sklearn: 1.2.2
2023-05-28 01:18:12,334:INFO:                pyod: 1.0.9
2023-05-28 01:18:12,334:INFO:            imblearn: 0.10.1
2023-05-28 01:18:12,334:INFO:   category_encoders: 2.6.1
2023-05-28 01:18:12,334:INFO:            lightgbm: 3.3.5
2023-05-28 01:18:12,334:INFO:               numba: 0.57.0
2023-05-28 01:18:12,334:INFO:            requests: 2.29.0
2023-05-28 01:18:12,334:INFO:          matplotlib: 3.7.1
2023-05-28 01:18:12,334:INFO:          scikitplot: 0.3.7
2023-05-28 01:18:12,334:INFO:         yellowbrick: 1.5
2023-05-28 01:18:12,334:INFO:              plotly: 5.14.1
2023-05-28 01:18:12,334:INFO:             kaleido: 0.2.1
2023-05-28 01:18:12,334:INFO:         statsmodels: 0.14.0
2023-05-28 01:18:12,334:INFO:              sktime: 0.17.0
2023-05-28 01:18:12,334:INFO:               tbats: 1.1.3
2023-05-28 01:18:12,334:INFO:            pmdarima: 2.0.3
2023-05-28 01:18:12,334:INFO:              psutil: 5.9.0
2023-05-28 01:18:12,334:INFO:PyCaret optional dependencies:
2023-05-28 01:18:12,334:INFO:                shap: Not installed
2023-05-28 01:18:12,334:INFO:           interpret: Not installed
2023-05-28 01:18:12,334:INFO:                umap: Not installed
2023-05-28 01:18:12,334:INFO:    pandas_profiling: Not installed
2023-05-28 01:18:12,334:INFO:  explainerdashboard: Not installed
2023-05-28 01:18:12,334:INFO:             autoviz: Not installed
2023-05-28 01:18:12,334:INFO:           fairlearn: Not installed
2023-05-28 01:18:12,334:INFO:             xgboost: Not installed
2023-05-28 01:18:12,334:INFO:            catboost: Not installed
2023-05-28 01:18:12,335:INFO:              kmodes: Not installed
2023-05-28 01:18:12,335:INFO:             mlxtend: Not installed
2023-05-28 01:18:12,335:INFO:       statsforecast: Not installed
2023-05-28 01:18:12,335:INFO:        tune_sklearn: Not installed
2023-05-28 01:18:12,335:INFO:                 ray: Not installed
2023-05-28 01:18:12,335:INFO:            hyperopt: Not installed
2023-05-28 01:18:12,335:INFO:              optuna: Not installed
2023-05-28 01:18:12,335:INFO:               skopt: Not installed
2023-05-28 01:18:12,335:INFO:              mlflow: Not installed
2023-05-28 01:18:12,335:INFO:              gradio: Not installed
2023-05-28 01:18:12,335:INFO:             fastapi: Not installed
2023-05-28 01:18:12,335:INFO:             uvicorn: Not installed
2023-05-28 01:18:12,335:INFO:              m2cgen: Not installed
2023-05-28 01:18:12,335:INFO:           evidently: Not installed
2023-05-28 01:18:12,335:INFO:               fugue: Not installed
2023-05-28 01:18:12,335:INFO:           streamlit: Not installed
2023-05-28 01:18:12,335:INFO:             prophet: Not installed
2023-05-28 01:18:12,335:INFO:None
2023-05-28 01:18:12,335:INFO:Set up data.
2023-05-28 01:18:12,406:INFO:Set up train/test split.
2023-05-28 01:18:12,430:INFO:Set up index.
2023-05-28 01:18:12,431:INFO:Set up folding strategy.
2023-05-28 01:18:12,431:INFO:Assigning column types.
2023-05-28 01:18:12,449:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-28 01:18:12,449:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,451:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,453:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,508:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,512:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,570:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-05-28 01:18:12,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,573:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,630:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,632:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,669:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,688:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-05-28 01:18:12,692:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,747:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,752:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,788:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,810:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-05-28 01:18:12,850:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,874:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-28 01:18:12,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:12,943:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-28 01:18:12,987:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:13,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,057:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-05-28 01:18:13,080:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,080:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-05-28 01:18:13,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,213:INFO:Preparing preprocessing pipeline...
2023-05-28 01:18:13,213:INFO:Set up simple imputation.
2023-05-28 01:18:13,222:INFO:Set up encoding of ordinal features.
2023-05-28 01:18:13,232:INFO:Set up encoding of categorical features.
2023-05-28 01:18:13,232:INFO:Set up feature selection.
2023-05-28 01:18:13,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:13,305:INFO:Set up column name cleaning.
2023-05-28 01:18:14,223:INFO:Finished creating preprocessing pipeline.
2023-05-28 01:18:14,245:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['population', 'income',
                                             'total_sales', 'second_sales',
                                             'water_access', 'elec_cons',
                                             'building_perm', 'land_permited',
                                             'labour_fource', 'unemployment',
                                             'agricultural', 'life_time',
                                             'hb_per100000', 'fertility',
                                             'hh_size', 'Center-Longitude',
                                             'Center-Latitude', 'ec...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['info'],
                                    transformer=TargetEncoder(cols=['info'],
                                                              handle_missing='return_nan'))),
                ('feature_selection',
                 TransformerWrapper(exclude=[],
                                    transformer=SelectFromModel(estimator=LGBMRegressor(),
                                                                max_features=25,
                                                                threshold=-inf))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-05-28 01:18:14,245:INFO:Creating final display dataframe.
2023-05-28 01:18:15,016:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target        damage_gra
2                   Target type        Regression
3           Original data shape      (39490, 128)
4        Transformed data shape       (39490, 26)
5   Transformed train set shape       (27643, 26)
6    Transformed test set shape       (11847, 26)
7              Ordinal features                 2
8              Numeric features               118
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator             KFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  reg-default-name
26                          USI              d026
2023-05-28 01:18:15,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:15,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:15,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:15,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-28 01:18:15,172:INFO:setup() successfully completed in 2.85s...............
2023-05-28 01:18:15,178:INFO:Initializing create_model()
2023-05-28 01:18:15,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7f342e0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 01:18:15,178:INFO:Checking exceptions
2023-05-28 01:18:15,188:INFO:Importing libraries
2023-05-28 01:18:15,188:INFO:Copying training dataset
2023-05-28 01:18:15,229:INFO:Defining folds
2023-05-28 01:18:15,229:INFO:Declaring metric variables
2023-05-28 01:18:15,232:INFO:Importing untrained model
2023-05-28 01:18:15,237:INFO:Ridge Regression Imported successfully
2023-05-28 01:18:15,245:INFO:Starting cross validation
2023-05-28 01:18:15,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 01:18:18,196:INFO:Calculating mean and std
2023-05-28 01:18:18,198:INFO:Creating metrics dataframe
2023-05-28 01:18:18,209:INFO:Finalizing model
2023-05-28 01:18:18,605:INFO:Uploading results into container
2023-05-28 01:18:18,606:INFO:Uploading model into container now
2023-05-28 01:18:18,617:INFO:_master_model_container: 1
2023-05-28 01:18:18,617:INFO:_display_container: 2
2023-05-28 01:18:18,617:INFO:Ridge(random_state=123)
2023-05-28 01:18:18,617:INFO:create_model() successfully completed......................................
2023-05-28 12:34:55,591:INFO:Initializing create_model()
2023-05-28 12:34:55,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7f342e0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 12:34:55,591:INFO:Checking exceptions
2023-05-28 12:34:55,607:INFO:Importing libraries
2023-05-28 12:34:55,607:INFO:Copying training dataset
2023-05-28 12:34:55,635:INFO:Defining folds
2023-05-28 12:34:55,635:INFO:Declaring metric variables
2023-05-28 12:34:55,638:INFO:Importing untrained model
2023-05-28 12:34:55,640:INFO:Ridge Regression Imported successfully
2023-05-28 12:34:55,646:INFO:Starting cross validation
2023-05-28 12:34:55,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 12:34:58,361:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,362:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,364:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,378:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,405:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,574:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:34:58,696:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:00,263:INFO:Calculating mean and std
2023-05-28 12:35:00,265:INFO:Creating metrics dataframe
2023-05-28 12:35:00,273:INFO:Finalizing model
2023-05-28 12:35:00,793:INFO:Uploading results into container
2023-05-28 12:35:00,794:INFO:Uploading model into container now
2023-05-28 12:35:00,806:INFO:_master_model_container: 2
2023-05-28 12:35:00,806:INFO:_display_container: 3
2023-05-28 12:35:00,808:INFO:Ridge(random_state=123)
2023-05-28 12:35:00,808:INFO:create_model() successfully completed......................................
2023-05-28 12:35:00,947:INFO:Initializing create_model()
2023-05-28 12:35:00,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7ff7c7f342e0>, estimator=lasso, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-28 12:35:00,947:INFO:Checking exceptions
2023-05-28 12:35:00,960:INFO:Importing libraries
2023-05-28 12:35:00,960:INFO:Copying training dataset
2023-05-28 12:35:00,985:INFO:Defining folds
2023-05-28 12:35:00,985:INFO:Declaring metric variables
2023-05-28 12:35:00,988:INFO:Importing untrained model
2023-05-28 12:35:00,992:INFO:Lasso Regression Imported successfully
2023-05-28 12:35:00,998:INFO:Starting cross validation
2023-05-28 12:35:01,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-28 12:35:01,135:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:01,148:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:01,161:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:01,173:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,010:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,018:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,035:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,037:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,101:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:03,150:WARNING:/home/lapita/anaconda3/envs/pycaret_env/lib/python3.8/site-packages/pycaret/internal/pipeline.py:135: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '7.34.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.23.0', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.9.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '23.0.1', 'setuptools': '66.0.0', 'pycaret': '3.0.2', 'IPython': '8.12.2', 'ipywidgets': '8.0.6', 'tqdm': '4.65.0', 'numpy': '1.23.5', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.1', 'lightgbm': '3.3.5', 'numba': '0.57.0', 'requests': '2.29.0', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.14.1', 'kaleido': '0.2.1', 'statsmodels': '0.14.0', 'sktime': '0.17.0', 'tbats': '1.1.3', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.8.16', 'machine': 'x86_64'}}
  warnings.warn(

2023-05-28 12:35:04,845:INFO:Calculating mean and std
2023-05-28 12:35:04,847:INFO:Creating metrics dataframe
2023-05-28 12:35:04,854:INFO:Finalizing model
2023-05-28 12:35:05,635:INFO:Uploading results into container
2023-05-28 12:35:05,636:INFO:Uploading model into container now
2023-05-28 12:35:05,648:INFO:_master_model_container: 3
2023-05-28 12:35:05,649:INFO:_display_container: 4
2023-05-28 12:35:05,649:INFO:Lasso(random_state=123)
2023-05-28 12:35:05,649:INFO:create_model() successfully completed......................................
2023-05-28 12:35:42,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 12:35:42,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 12:35:42,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 12:35:42,064:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-28 12:35:42,576:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-28 12:35:43,979:INFO:PyCaret RegressionExperiment
2023-05-28 12:35:43,979:INFO:Logging name: reg-default-name
2023-05-28 12:35:43,979:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 12:35:43,979:INFO:version 3.0.2
2023-05-28 12:35:43,979:INFO:Initializing setup()
2023-05-28 12:35:43,979:INFO:self.USI: 58f4
2023-05-28 12:35:43,979:INFO:self._variable_keys: {'transform_target_param', 'exp_name_log', 'X_train', 'USI', 'logging_param', 'target_param', '_available_plots', 'gpu_n_jobs_param', 'X', 'fold_generator', '_ml_usecase', 'idx', 'log_plots_param', 'y_test', 'y', 'X_test', 'data', 'y_train', 'fold_groups_param', 'n_jobs_param', 'pipeline', 'exp_id', 'seed', 'fold_shuffle_param', 'gpu_param', 'html_param', 'memory'}
2023-05-28 12:35:43,979:INFO:Checking environment
2023-05-28 12:35:43,979:INFO:python_version: 3.8.16
2023-05-28 12:35:43,979:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 12:35:43,979:INFO:machine: x86_64
2023-05-28 12:35:43,979:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:35:43,979:INFO:Memory: svmem(total=16378343424, available=7389995008, percent=54.9, used=7501250560, free=4305686528, active=3611500544, inactive=7244455936, buffers=158724096, cached=4412682240, shared=1110339584, slab=704884736)
2023-05-28 12:35:43,980:INFO:Physical Core: 10
2023-05-28 12:35:43,980:INFO:Logical Core: 16
2023-05-28 12:35:43,980:INFO:Checking libraries
2023-05-28 12:35:43,980:INFO:System:
2023-05-28 12:35:43,980:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 12:35:43,980:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 12:35:43,980:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:35:43,980:INFO:PyCaret required dependencies:
2023-05-28 12:35:43,981:INFO:                 pip: 23.0.1
2023-05-28 12:35:43,981:INFO:          setuptools: 66.0.0
2023-05-28 12:35:43,981:INFO:             pycaret: 3.0.2
2023-05-28 12:35:43,981:INFO:             IPython: 7.34.0
2023-05-28 12:35:43,981:INFO:          ipywidgets: 8.0.4
2023-05-28 12:35:43,981:INFO:                tqdm: 4.65.0
2023-05-28 12:35:43,981:INFO:               numpy: 1.23.0
2023-05-28 12:35:43,981:INFO:              pandas: 1.5.3
2023-05-28 12:35:43,981:INFO:              jinja2: 3.1.2
2023-05-28 12:35:43,981:INFO:               scipy: 1.9.1
2023-05-28 12:35:43,981:INFO:              joblib: 1.2.0
2023-05-28 12:35:43,981:INFO:             sklearn: 1.2.2
2023-05-28 12:35:43,981:INFO:                pyod: 1.0.9
2023-05-28 12:35:43,981:INFO:            imblearn: 0.10.1
2023-05-28 12:35:43,981:INFO:   category_encoders: 2.6.1
2023-05-28 12:35:43,981:INFO:            lightgbm: 3.3.5
2023-05-28 12:35:43,981:INFO:               numba: 0.57.0
2023-05-28 12:35:43,981:INFO:            requests: 2.29.0
2023-05-28 12:35:43,981:INFO:          matplotlib: 3.7.1
2023-05-28 12:35:43,981:INFO:          scikitplot: 0.3.7
2023-05-28 12:35:43,981:INFO:         yellowbrick: 1.5
2023-05-28 12:35:43,981:INFO:              plotly: 5.14.1
2023-05-28 12:35:43,981:INFO:             kaleido: 0.2.1
2023-05-28 12:35:43,981:INFO:         statsmodels: 0.14.0
2023-05-28 12:35:43,981:INFO:              sktime: 0.17.0
2023-05-28 12:35:43,981:INFO:               tbats: 1.1.3
2023-05-28 12:35:43,981:INFO:            pmdarima: 2.0.3
2023-05-28 12:35:43,981:INFO:              psutil: 5.9.0
2023-05-28 12:35:43,981:INFO:PyCaret optional dependencies:
2023-05-28 12:44:00,709:INFO:PyCaret RegressionExperiment
2023-05-28 12:44:00,709:INFO:Logging name: reg-default-name
2023-05-28 12:44:00,709:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 12:44:00,709:INFO:version 3.0.2
2023-05-28 12:44:00,709:INFO:Initializing setup()
2023-05-28 12:44:00,709:INFO:self.USI: c505
2023-05-28 12:44:00,709:INFO:self._variable_keys: {'transform_target_param', 'exp_name_log', 'X_train', 'USI', 'logging_param', 'target_param', '_available_plots', 'gpu_n_jobs_param', 'X', 'fold_generator', '_ml_usecase', 'idx', 'log_plots_param', 'y_test', 'y', 'X_test', 'data', 'y_train', 'fold_groups_param', 'n_jobs_param', 'pipeline', 'exp_id', 'seed', 'fold_shuffle_param', 'gpu_param', 'html_param', 'memory'}
2023-05-28 12:44:00,709:INFO:Checking environment
2023-05-28 12:44:00,709:INFO:python_version: 3.8.16
2023-05-28 12:44:00,709:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 12:44:00,709:INFO:machine: x86_64
2023-05-28 12:44:00,709:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:44:00,709:INFO:Memory: svmem(total=16378343424, available=7313833984, percent=55.3, used=7451824128, free=4153081856, active=3500105728, inactive=7175450624, buffers=168398848, cached=4605038592, shared=1235935232, slab=703713280)
2023-05-28 12:44:00,710:INFO:Physical Core: 10
2023-05-28 12:44:00,710:INFO:Logical Core: 16
2023-05-28 12:44:00,710:INFO:Checking libraries
2023-05-28 12:44:00,710:INFO:System:
2023-05-28 12:44:00,710:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 12:44:00,710:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 12:44:00,710:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:44:00,710:INFO:PyCaret required dependencies:
2023-05-28 12:44:00,710:INFO:                 pip: 23.0.1
2023-05-28 12:44:00,710:INFO:          setuptools: 66.0.0
2023-05-28 12:44:00,710:INFO:             pycaret: 3.0.2
2023-05-28 12:44:00,710:INFO:             IPython: 7.34.0
2023-05-28 12:44:00,710:INFO:          ipywidgets: 8.0.4
2023-05-28 12:44:00,710:INFO:                tqdm: 4.65.0
2023-05-28 12:44:00,710:INFO:               numpy: 1.23.0
2023-05-28 12:44:00,710:INFO:              pandas: 1.5.3
2023-05-28 12:44:00,710:INFO:              jinja2: 3.1.2
2023-05-28 12:44:00,710:INFO:               scipy: 1.9.1
2023-05-28 12:44:00,710:INFO:              joblib: 1.2.0
2023-05-28 12:44:00,710:INFO:             sklearn: 1.2.2
2023-05-28 12:44:00,710:INFO:                pyod: 1.0.9
2023-05-28 12:44:00,710:INFO:            imblearn: 0.10.1
2023-05-28 12:44:00,710:INFO:   category_encoders: 2.6.1
2023-05-28 12:44:00,710:INFO:            lightgbm: 3.3.5
2023-05-28 12:44:00,710:INFO:               numba: 0.57.0
2023-05-28 12:44:00,710:INFO:            requests: 2.29.0
2023-05-28 12:44:00,710:INFO:          matplotlib: 3.7.1
2023-05-28 12:44:00,710:INFO:          scikitplot: 0.3.7
2023-05-28 12:44:00,710:INFO:         yellowbrick: 1.5
2023-05-28 12:44:00,710:INFO:              plotly: 5.14.1
2023-05-28 12:44:00,710:INFO:             kaleido: 0.2.1
2023-05-28 12:44:00,711:INFO:         statsmodels: 0.14.0
2023-05-28 12:44:00,711:INFO:              sktime: 0.17.0
2023-05-28 12:44:00,711:INFO:               tbats: 1.1.3
2023-05-28 12:44:00,711:INFO:            pmdarima: 2.0.3
2023-05-28 12:44:00,711:INFO:              psutil: 5.9.0
2023-05-28 12:44:00,711:INFO:PyCaret optional dependencies:
2023-05-28 12:46:28,609:INFO:PyCaret RegressionExperiment
2023-05-28 12:46:28,609:INFO:Logging name: reg-default-name
2023-05-28 12:46:28,609:INFO:ML Usecase: MLUsecase.REGRESSION
2023-05-28 12:46:28,609:INFO:version 3.0.2
2023-05-28 12:46:28,609:INFO:Initializing setup()
2023-05-28 12:46:28,609:INFO:self.USI: eb4a
2023-05-28 12:46:28,609:INFO:self._variable_keys: {'transform_target_param', 'exp_name_log', 'X_train', 'USI', 'logging_param', 'target_param', '_available_plots', 'gpu_n_jobs_param', 'X', 'fold_generator', '_ml_usecase', 'idx', 'log_plots_param', 'y_test', 'y', 'X_test', 'data', 'y_train', 'fold_groups_param', 'n_jobs_param', 'pipeline', 'exp_id', 'seed', 'fold_shuffle_param', 'gpu_param', 'html_param', 'memory'}
2023-05-28 12:46:28,609:INFO:Checking environment
2023-05-28 12:46:28,609:INFO:python_version: 3.8.16
2023-05-28 12:46:28,609:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 12:46:28,609:INFO:machine: x86_64
2023-05-28 12:46:28,609:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:46:28,609:INFO:Memory: svmem(total=16378343424, available=7234437120, percent=55.8, used=7561277440, free=4069249024, active=3503423488, inactive=7271919616, buffers=169791488, cached=4578025472, shared=1205907456, slab=703684608)
2023-05-28 12:46:28,609:INFO:Physical Core: 10
2023-05-28 12:46:28,609:INFO:Logical Core: 16
2023-05-28 12:46:28,609:INFO:Checking libraries
2023-05-28 12:46:28,609:INFO:System:
2023-05-28 12:46:28,609:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 12:46:28,609:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 12:46:28,609:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 12:46:28,609:INFO:PyCaret required dependencies:
2023-05-28 12:46:28,609:INFO:                 pip: 23.0.1
2023-05-28 12:46:28,609:INFO:          setuptools: 66.0.0
2023-05-28 12:46:28,609:INFO:             pycaret: 3.0.2
2023-05-28 12:46:28,609:INFO:             IPython: 7.34.0
2023-05-28 12:46:28,609:INFO:          ipywidgets: 8.0.4
2023-05-28 12:46:28,609:INFO:                tqdm: 4.65.0
2023-05-28 12:46:28,609:INFO:               numpy: 1.23.0
2023-05-28 12:46:28,609:INFO:              pandas: 1.5.3
2023-05-28 12:46:28,609:INFO:              jinja2: 3.1.2
2023-05-28 12:46:28,609:INFO:               scipy: 1.9.1
2023-05-28 12:46:28,609:INFO:              joblib: 1.2.0
2023-05-28 12:46:28,609:INFO:             sklearn: 1.2.2
2023-05-28 12:46:28,609:INFO:                pyod: 1.0.9
2023-05-28 12:46:28,609:INFO:            imblearn: 0.10.1
2023-05-28 12:46:28,609:INFO:   category_encoders: 2.6.1
2023-05-28 12:46:28,609:INFO:            lightgbm: 3.3.5
2023-05-28 12:46:28,609:INFO:               numba: 0.57.0
2023-05-28 12:46:28,609:INFO:            requests: 2.29.0
2023-05-28 12:46:28,609:INFO:          matplotlib: 3.7.1
2023-05-28 12:46:28,609:INFO:          scikitplot: 0.3.7
2023-05-28 12:46:28,609:INFO:         yellowbrick: 1.5
2023-05-28 12:46:28,610:INFO:              plotly: 5.14.1
2023-05-28 12:46:28,610:INFO:             kaleido: 0.2.1
2023-05-28 12:46:28,610:INFO:         statsmodels: 0.14.0
2023-05-28 12:46:28,610:INFO:              sktime: 0.17.0
2023-05-28 12:46:28,610:INFO:               tbats: 1.1.3
2023-05-28 12:46:28,610:INFO:            pmdarima: 2.0.3
2023-05-28 12:46:28,610:INFO:              psutil: 5.9.0
2023-05-28 12:46:28,610:INFO:PyCaret optional dependencies:
2023-05-28 21:24:32,691:INFO:PyCaret ClassificationExperiment
2023-05-28 21:24:32,691:INFO:Logging name: clf-default-name
2023-05-28 21:24:32,691:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-28 21:24:32,691:INFO:version 3.0.2
2023-05-28 21:24:32,691:INFO:Initializing setup()
2023-05-28 21:24:32,691:INFO:self.USI: b73f
2023-05-28 21:24:32,691:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'X_train', 'USI', 'logging_param', 'target_param', '_available_plots', 'gpu_n_jobs_param', 'X', 'fold_generator', '_ml_usecase', 'idx', 'log_plots_param', 'y_test', 'y', 'X_test', 'data', 'y_train', 'fold_groups_param', 'n_jobs_param', 'pipeline', 'fix_imbalance', 'exp_id', 'seed', 'fold_shuffle_param', 'gpu_param', 'html_param', 'memory'}
2023-05-28 21:24:32,691:INFO:Checking environment
2023-05-28 21:24:32,691:INFO:python_version: 3.8.16
2023-05-28 21:24:32,692:INFO:python_build: ('default', 'Mar  2 2023 03:21:46')
2023-05-28 21:24:32,692:INFO:machine: x86_64
2023-05-28 21:24:32,692:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 21:24:32,692:INFO:Memory: svmem(total=16378343424, available=5426110464, percent=66.9, used=9432121344, free=2005565440, active=3392888832, inactive=9472069632, buffers=377171968, cached=4563484672, shared=1170132992, slab=689692672)
2023-05-28 21:24:32,692:INFO:Physical Core: 10
2023-05-28 21:24:32,692:INFO:Logical Core: 16
2023-05-28 21:24:32,692:INFO:Checking libraries
2023-05-28 21:24:32,692:INFO:System:
2023-05-28 21:24:32,692:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:21:46)  [GCC 11.2.0]
2023-05-28 21:24:32,692:INFO:executable: /home/lapita/anaconda3/envs/pycaret_env/bin/python
2023-05-28 21:24:32,692:INFO:   machine: Linux-5.19.0-42-generic-x86_64-with-glibc2.17
2023-05-28 21:24:32,692:INFO:PyCaret required dependencies:
2023-05-28 21:24:32,692:INFO:                 pip: 23.0.1
2023-05-28 21:24:32,692:INFO:          setuptools: 66.0.0
2023-05-28 21:24:32,693:INFO:             pycaret: 3.0.2
2023-05-28 21:24:32,693:INFO:             IPython: 7.34.0
2023-05-28 21:24:32,693:INFO:          ipywidgets: 8.0.4
2023-05-28 21:24:32,693:INFO:                tqdm: 4.65.0
2023-05-28 21:24:32,693:INFO:               numpy: 1.23.0
2023-05-28 21:24:32,693:INFO:              pandas: 1.5.3
2023-05-28 21:24:32,693:INFO:              jinja2: 3.1.2
2023-05-28 21:24:32,693:INFO:               scipy: 1.9.1
2023-05-28 21:24:32,693:INFO:              joblib: 1.2.0
2023-05-28 21:24:32,693:INFO:             sklearn: 1.2.2
2023-05-28 21:24:32,693:INFO:                pyod: 1.0.9
2023-05-28 21:24:32,693:INFO:            imblearn: 0.10.1
2023-05-28 21:24:32,693:INFO:   category_encoders: 2.6.1
2023-05-28 21:24:32,693:INFO:            lightgbm: 3.3.5
2023-05-28 21:24:32,693:INFO:               numba: 0.57.0
2023-05-28 21:24:32,693:INFO:            requests: 2.29.0
2023-05-28 21:24:32,693:INFO:          matplotlib: 3.7.1
2023-05-28 21:24:32,693:INFO:          scikitplot: 0.3.7
2023-05-28 21:24:32,693:INFO:         yellowbrick: 1.5
2023-05-28 21:24:32,693:INFO:              plotly: 5.14.1
2023-05-28 21:24:32,693:INFO:             kaleido: 0.2.1
2023-05-28 21:24:32,693:INFO:         statsmodels: 0.14.0
2023-05-28 21:24:32,693:INFO:              sktime: 0.17.0
2023-05-28 21:24:32,693:INFO:               tbats: 1.1.3
2023-05-28 21:24:32,693:INFO:            pmdarima: 2.0.3
2023-05-28 21:24:32,693:INFO:              psutil: 5.9.0
2023-05-28 21:24:32,693:INFO:PyCaret optional dependencies:
2023-05-28 21:43:50,558:INFO:PyCaret Supervised Module
2023-05-28 21:43:50,570:INFO:ML Usecase: classification
2023-05-28 21:43:50,570:INFO:version 2.2.3
2023-05-28 21:43:50,570:INFO:Initializing setup()
2023-05-28 21:43:50,570:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['obj_type', 'info', 'notation', 'or_src_id', 'Province', 'Municipio'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['damage_gra', 'population', 'income', 'total_sales', 'second_sales', 'water_access', 'elec_cons', 'building_perm', 'land_permited', 'labour_fource', 'unemployment', 'agricultural', 'life_time', 'hb_per100000', 'fertility', 'hh_size', 'latitude', 'longitude', 'nearest_fault_distance_km', 'nearest_eq_distance_km', 'Kayıtlı Nüfus', 'Longitude', 'Latitude', 'eclass_public', 'eclass_private', 'eclass_total', 'enumber_public', 'enumber_private', 'enumber_total', 'e_male_public', 'e_female_public', 'e_total_public', 'e_male_private', 'e_female_private', 'e_total_private', 'e_total', 'et_male_public', 'et_female_public', 'et_total_public', 'et_male_private', 'et_total_private', 'et_total', 'hclass_public', 'hclass_private', 'hclass_total', 'hnumber_public', 'hnumber_private', 'hnumber_total', 'h_male_public', 'h_female_public', 'h_total_public', 'h_male_private', 'h_female_private', 'h_total_private', 'h_total', 'hs_religious_male_public', 'hs_religious_female_public', 'hs_religious_total_public', 'hs_religious_male_private', 'hs_religious_female_private', 'hs_religious_total_private', 'hs_religious_total', 'h_male_occupational_public', 'h_female_occupational_public', 'h_total_occupational_public', 'h_male_occupational_private', 'h_male_occupational_private_1', 'h_total_ocupational_private', 'h_occupational_total', 'h_male_normal_public', 'h_female_normal_public', 'h_total_normal_public', 'h_male_normal_private', 'h_female_normal_private', 'h_total_normal_private', 'h_normal_total', 'ht_male_public', 'ht_female_public', 'ht_total_public', 'ht_male_private', 'ht_female_private', 'ht_total_private', 'ht_toplam', 'mclass_public', 'mclass_private', 'mclass_total', 'mnumber_public', 'mnumber_private', 'mnumber_total', 'm_male_public', 'm_female_public', 'm_total_public', 'm_male_private', 'm_female_private', 'm_total_private', 'm_total', 'mt_male_public', 'mt_female_public', 'mt_total_public', 'mt_male_private', 'mt_female_private', 'mt_total_private', 'mt_total', 'pclass_public', 'pclass_private', 'pclass_toplam', 'pnumber_public', 'pnumber_private', 'pnumber_total', 'p_male_public', 'p_female_public', 'p_total_public', 'p_male_private', 'p_female_private', 'p_total_private', 'p_total', 'pt_male_public', 'pt_female_public', 'pt_total_public', 'pt_male_private', 'pt_female_private', 'pt_total_private', 'pt_total'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 21:43:50,570:INFO:Checking environment
2023-05-28 21:43:50,570:INFO:python_version: 3.10.11
2023-05-28 21:43:50,570:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 21:43:50,570:INFO:machine: x86_64
2023-05-28 21:43:50,570:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 21:43:50,570:INFO:Memory: svmem(total=16378343424, available=9857306624, percent=39.8, used=4974657536, free=3198722048, active=3938611200, inactive=7686631424, buffers=520634368, cached=7684329472, shared=1196113920, slab=936251392)
2023-05-28 21:43:50,571:INFO:Physical Core: 10
2023-05-28 21:43:50,571:INFO:Logical Core: 16
2023-05-28 21:43:50,571:INFO:Checking libraries
2023-05-28 21:43:50,571:INFO:pd==1.5.3
2023-05-28 21:43:50,571:INFO:numpy==1.24.3
2023-05-28 21:43:50,571:INFO:sklearn==1.2.2
2023-05-28 21:43:50,602:INFO:xgboost==1.7.3
2023-05-28 21:43:50,602:INFO:lightgbm==3.3.5
2023-05-28 21:43:50,611:INFO:catboost==1.2
2023-05-28 21:43:50,830:INFO:mlflow==2.3.1
2023-05-28 21:43:50,830:INFO:Checking Exceptions
2023-05-28 21:44:34,465:INFO:PyCaret Supervised Module
2023-05-28 21:44:34,466:INFO:ML Usecase: classification
2023-05-28 21:44:34,467:INFO:version 2.2.3
2023-05-28 21:44:34,467:INFO:Initializing setup()
2023-05-28 21:44:34,467:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 21:44:34,467:INFO:Checking environment
2023-05-28 21:44:34,467:INFO:python_version: 3.10.11
2023-05-28 21:44:34,467:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 21:44:34,468:INFO:machine: x86_64
2023-05-28 21:44:34,468:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 21:44:34,468:INFO:Memory: svmem(total=16378343424, available=10081415168, percent=38.4, used=4818210816, free=3411255296, active=3943596032, inactive=7490158592, buffers=520892416, cached=7627984896, shared=1128456192, slab=936255488)
2023-05-28 21:44:34,468:INFO:Physical Core: 10
2023-05-28 21:44:34,468:INFO:Logical Core: 16
2023-05-28 21:44:34,468:INFO:Checking libraries
2023-05-28 21:44:34,468:INFO:pd==1.5.3
2023-05-28 21:44:34,469:INFO:numpy==1.24.3
2023-05-28 21:44:34,469:INFO:sklearn==1.2.2
2023-05-28 21:44:34,469:INFO:xgboost==1.7.3
2023-05-28 21:44:34,469:INFO:lightgbm==3.3.5
2023-05-28 21:44:34,469:INFO:catboost==1.2
2023-05-28 21:44:34,469:INFO:mlflow==2.3.1
2023-05-28 21:44:34,469:INFO:Checking Exceptions
2023-05-28 21:44:34,469:INFO:Declaring global variables
2023-05-28 21:44:34,469:INFO:USI: bdcd
2023-05-28 21:44:34,469:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 21:44:34,469:INFO:Preparing display monitor
2023-05-28 21:44:34,469:INFO:Preparing display monitor
2023-05-28 21:44:34,479:INFO:Importing libraries
2023-05-28 21:44:34,479:INFO:Copying data for preprocessing
2023-05-28 21:44:34,494:INFO:Declaring preprocessing parameters
2023-05-28 21:44:34,494:WARNING:cuML not found
2023-05-28 21:44:34,494:WARNING:cuML is outdated or not found. Required version is >=0.15, got 1.2
2023-05-28 21:44:34,514:INFO:Creating preprocessing pipeline
2023-05-28 21:44:34,732:INFO:Preprocessing pipeline created successfully
2023-05-28 21:44:34,733:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 21:44:34,733:INFO:Creating global containers
2023-05-28 21:45:56,291:INFO:PyCaret Supervised Module
2023-05-28 21:45:56,291:INFO:ML Usecase: classification
2023-05-28 21:45:56,291:INFO:version 2.2.3
2023-05-28 21:45:56,291:INFO:Initializing setup()
2023-05-28 21:45:56,291:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=True, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 21:45:56,292:INFO:Checking environment
2023-05-28 21:45:56,292:INFO:python_version: 3.10.11
2023-05-28 21:45:56,293:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 21:45:56,293:INFO:machine: x86_64
2023-05-28 21:45:56,293:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 21:45:56,293:INFO:Memory: svmem(total=16378343424, available=9753047040, percent=40.5, used=5142003712, free=3081924608, active=3944669184, inactive=7813361664, buffers=521334784, cached=7633080320, shared=1133035520, slab=936239104)
2023-05-28 21:45:56,294:INFO:Physical Core: 10
2023-05-28 21:45:56,294:INFO:Logical Core: 16
2023-05-28 21:45:56,294:INFO:Checking libraries
2023-05-28 21:45:56,294:INFO:pd==1.5.3
2023-05-28 21:45:56,294:INFO:numpy==1.24.3
2023-05-28 21:45:56,294:INFO:sklearn==1.2.2
2023-05-28 21:45:56,294:INFO:xgboost==1.7.3
2023-05-28 21:45:56,294:INFO:lightgbm==3.3.5
2023-05-28 21:45:56,294:INFO:catboost==1.2
2023-05-28 21:45:56,294:INFO:mlflow==2.3.1
2023-05-28 21:45:56,294:INFO:Checking Exceptions
2023-05-28 21:45:56,294:INFO:Declaring global variables
2023-05-28 21:45:56,294:INFO:USI: 3011
2023-05-28 21:45:56,294:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 21:45:56,294:INFO:Preparing display monitor
2023-05-28 21:45:56,294:INFO:Preparing display monitor
2023-05-28 21:45:56,301:INFO:Importing libraries
2023-05-28 21:45:56,301:INFO:Copying data for preprocessing
2023-05-28 21:45:56,317:INFO:Declaring preprocessing parameters
2023-05-28 21:45:56,318:WARNING:cuML not found
2023-05-28 21:45:56,318:WARNING:cuML is outdated or not found. Required version is >=0.15, got 1.2
2023-05-28 21:45:56,339:INFO:Creating preprocessing pipeline
2023-05-28 21:45:56,532:INFO:Preprocessing pipeline created successfully
2023-05-28 21:45:56,532:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 21:45:56,532:INFO:Creating global containers
2023-05-28 22:20:44,027:INFO:PyCaret Supervised Module
2023-05-28 22:20:44,027:INFO:ML Usecase: classification
2023-05-28 22:20:44,027:INFO:version 2.2.3
2023-05-28 22:20:44,027:INFO:Initializing setup()
2023-05-28 22:20:44,027:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 22:20:44,027:INFO:Checking environment
2023-05-28 22:20:44,027:INFO:python_version: 3.10.11
2023-05-28 22:20:44,028:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 22:20:44,028:INFO:machine: x86_64
2023-05-28 22:20:44,028:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 22:20:44,028:INFO:Memory: svmem(total=16378343424, available=8785899520, percent=46.4, used=5983997952, free=1983356928, active=3885891584, inactive=8764518400, buffers=534597632, cached=7876390912, shared=1258225664, slab=945336320)
2023-05-28 22:20:44,029:INFO:Physical Core: 10
2023-05-28 22:20:44,029:INFO:Logical Core: 16
2023-05-28 22:20:44,029:INFO:Checking libraries
2023-05-28 22:20:44,029:INFO:pd==1.5.3
2023-05-28 22:20:44,029:INFO:numpy==1.24.3
2023-05-28 22:20:44,029:INFO:sklearn==1.2.2
2023-05-28 22:20:44,029:INFO:xgboost==1.7.3
2023-05-28 22:20:44,029:INFO:lightgbm==3.3.5
2023-05-28 22:20:44,029:INFO:catboost==1.2
2023-05-28 22:20:44,029:INFO:mlflow==2.3.1
2023-05-28 22:20:44,029:INFO:Checking Exceptions
2023-05-28 22:20:44,029:INFO:Declaring global variables
2023-05-28 22:20:44,029:INFO:USI: 21b1
2023-05-28 22:20:44,029:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 22:20:44,029:INFO:Preparing display monitor
2023-05-28 22:20:44,029:INFO:Preparing display monitor
2023-05-28 22:20:44,036:INFO:Importing libraries
2023-05-28 22:20:44,036:INFO:Copying data for preprocessing
2023-05-28 22:20:44,052:INFO:Declaring preprocessing parameters
2023-05-28 22:20:44,072:INFO:Creating preprocessing pipeline
2023-05-28 22:20:44,271:INFO:Preprocessing pipeline created successfully
2023-05-28 22:20:44,271:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 22:20:44,271:INFO:Creating global containers
2023-05-28 22:23:38,324:INFO:PyCaret Supervised Module
2023-05-28 22:23:38,324:INFO:ML Usecase: classification
2023-05-28 22:23:38,324:INFO:version 2.2.3
2023-05-28 22:23:38,324:INFO:Initializing setup()
2023-05-28 22:23:38,324:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=None, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 22:23:38,324:INFO:Checking environment
2023-05-28 22:23:38,324:INFO:python_version: 3.10.11
2023-05-28 22:23:38,324:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 22:23:38,324:INFO:machine: x86_64
2023-05-28 22:23:38,324:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 22:23:38,326:INFO:Memory: svmem(total=16378343424, available=8747855872, percent=46.6, used=6036439040, free=1943826432, active=3887353856, inactive=8800067584, buffers=535482368, cached=7862595584, shared=1243828224, slab=945098752)
2023-05-28 22:23:38,327:INFO:Physical Core: 10
2023-05-28 22:23:38,327:INFO:Logical Core: 16
2023-05-28 22:23:38,327:INFO:Checking libraries
2023-05-28 22:23:38,327:INFO:pd==1.5.3
2023-05-28 22:23:38,327:INFO:numpy==1.24.3
2023-05-28 22:23:38,327:INFO:sklearn==1.2.2
2023-05-28 22:23:38,327:INFO:xgboost==1.7.3
2023-05-28 22:23:38,327:INFO:lightgbm==3.3.5
2023-05-28 22:23:38,327:INFO:catboost==1.2
2023-05-28 22:23:38,327:INFO:mlflow==2.3.1
2023-05-28 22:23:38,327:INFO:Checking Exceptions
2023-05-28 22:23:38,327:INFO:Declaring global variables
2023-05-28 22:23:38,327:INFO:USI: 024b
2023-05-28 22:23:38,327:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 22:23:38,327:INFO:Preparing display monitor
2023-05-28 22:23:38,327:INFO:Preparing display monitor
2023-05-28 22:23:38,336:INFO:Importing libraries
2023-05-28 22:23:38,336:INFO:Copying data for preprocessing
2023-05-28 22:23:38,353:INFO:Declaring preprocessing parameters
2023-05-28 22:23:38,374:INFO:Creating preprocessing pipeline
2023-05-28 22:23:38,620:INFO:Preprocessing pipeline created successfully
2023-05-28 22:23:38,620:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 22:23:38,620:INFO:Creating global containers
2023-05-28 22:25:08,028:INFO:PyCaret Supervised Module
2023-05-28 22:25:08,029:INFO:ML Usecase: classification
2023-05-28 22:25:08,029:INFO:version 2.2.3
2023-05-28 22:25:08,029:INFO:Initializing setup()
2023-05-28 22:25:08,029:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 22:25:08,029:INFO:Checking environment
2023-05-28 22:25:08,029:INFO:python_version: 3.10.11
2023-05-28 22:25:08,029:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 22:25:08,029:INFO:machine: x86_64
2023-05-28 22:25:08,029:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 22:25:08,030:INFO:Memory: svmem(total=16378343424, available=8653070336, percent=47.2, used=6133276672, free=1847173120, active=3877851136, inactive=8902418432, buffers=535916544, cached=7861977088, shared=1241776128, slab=945078272)
2023-05-28 22:25:08,030:INFO:Physical Core: 10
2023-05-28 22:25:08,030:INFO:Logical Core: 16
2023-05-28 22:25:08,030:INFO:Checking libraries
2023-05-28 22:25:08,030:INFO:pd==1.5.3
2023-05-28 22:25:08,030:INFO:numpy==1.24.3
2023-05-28 22:25:08,030:INFO:sklearn==1.2.2
2023-05-28 22:25:08,030:INFO:xgboost==1.7.3
2023-05-28 22:25:08,030:INFO:lightgbm==3.3.5
2023-05-28 22:25:08,030:INFO:catboost==1.2
2023-05-28 22:25:08,030:INFO:mlflow==2.3.1
2023-05-28 22:25:08,030:INFO:Checking Exceptions
2023-05-28 22:25:08,031:INFO:Declaring global variables
2023-05-28 22:25:08,031:INFO:USI: e113
2023-05-28 22:25:08,031:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 22:25:08,031:INFO:Preparing display monitor
2023-05-28 22:25:08,031:INFO:Preparing display monitor
2023-05-28 22:25:08,038:INFO:Importing libraries
2023-05-28 22:25:08,038:INFO:Copying data for preprocessing
2023-05-28 22:25:08,052:INFO:Declaring preprocessing parameters
2023-05-28 22:25:08,075:INFO:Creating preprocessing pipeline
2023-05-28 22:25:08,287:INFO:Preprocessing pipeline created successfully
2023-05-28 22:25:08,287:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 22:25:08,287:INFO:Creating global containers
2023-05-28 22:25:08,288:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-05-28 22:57:32,282:INFO:PyCaret Supervised Module
2023-05-28 22:57:32,282:INFO:ML Usecase: classification
2023-05-28 22:57:32,283:INFO:version 2.2.3
2023-05-28 22:57:32,283:INFO:Initializing setup()
2023-05-28 22:57:32,283:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['obj_type', 'info', 'notation', 'or_src_id', 'Province', 'Municipio'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['damage_gra', 'population', 'income', 'total_sales', 'second_sales', 'water_access', 'elec_cons', 'building_perm', 'land_permited', 'labour_fource', 'unemployment', 'agricultural', 'life_time', 'hb_per100000', 'fertility', 'hh_size', 'latitude', 'longitude', 'nearest_fault_distance_km', 'nearest_eq_distance_km', 'Kayıtlı Nüfus', 'Longitude', 'Latitude', 'eclass_public', 'eclass_private', 'eclass_total', 'enumber_public', 'enumber_private', 'enumber_total', 'e_male_public', 'e_female_public', 'e_total_public', 'e_male_private', 'e_female_private', 'e_total_private', 'e_total', 'et_male_public', 'et_female_public', 'et_total_public', 'et_male_private', 'et_total_private', 'et_total', 'hclass_public', 'hclass_private', 'hclass_total', 'hnumber_public', 'hnumber_private', 'hnumber_total', 'h_male_public', 'h_female_public', 'h_total_public', 'h_male_private', 'h_female_private', 'h_total_private', 'h_total', 'hs_religious_male_public', 'hs_religious_female_public', 'hs_religious_total_public', 'hs_religious_male_private', 'hs_religious_female_private', 'hs_religious_total_private', 'hs_religious_total', 'h_male_occupational_public', 'h_female_occupational_public', 'h_total_occupational_public', 'h_male_occupational_private', 'h_male_occupational_private_1', 'h_total_ocupational_private', 'h_occupational_total', 'h_male_normal_public', 'h_female_normal_public', 'h_total_normal_public', 'h_male_normal_private', 'h_female_normal_private', 'h_total_normal_private', 'h_normal_total', 'ht_male_public', 'ht_female_public', 'ht_total_public', 'ht_male_private', 'ht_female_private', 'ht_total_private', 'ht_toplam', 'mclass_public', 'mclass_private', 'mclass_total', 'mnumber_public', 'mnumber_private', 'mnumber_total', 'm_male_public', 'm_female_public', 'm_total_public', 'm_male_private', 'm_female_private', 'm_total_private', 'm_total', 'mt_male_public', 'mt_female_public', 'mt_total_public', 'mt_male_private', 'mt_female_private', 'mt_total_private', 'mt_total', 'pclass_public', 'pclass_private', 'pclass_toplam', 'pnumber_public', 'pnumber_private', 'pnumber_total', 'p_male_public', 'p_female_public', 'p_total_public', 'p_male_private', 'p_female_private', 'p_total_private', 'p_total', 'pt_male_public', 'pt_female_public', 'pt_total_public', 'pt_male_private', 'pt_female_private', 'pt_total_private', 'pt_total'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 22:57:32,283:INFO:Checking environment
2023-05-28 22:57:32,283:INFO:python_version: 3.10.11
2023-05-28 22:57:32,284:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 22:57:32,284:INFO:machine: x86_64
2023-05-28 22:57:32,284:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 22:57:32,284:INFO:Memory: svmem(total=16378343424, available=8531349504, percent=47.9, used=6215409664, free=1711779840, active=3885785088, inactive=8988176384, buffers=543461376, cached=7907692544, shared=1281363968, slab=945897472)
2023-05-28 22:57:32,285:INFO:Physical Core: 10
2023-05-28 22:57:32,285:INFO:Logical Core: 16
2023-05-28 22:57:32,285:INFO:Checking libraries
2023-05-28 22:57:32,285:INFO:pd==1.5.3
2023-05-28 22:57:32,285:INFO:numpy==1.24.3
2023-05-28 22:57:32,285:INFO:sklearn==1.2.2
2023-05-28 22:57:32,285:INFO:xgboost==1.7.3
2023-05-28 22:57:32,285:INFO:lightgbm==3.3.5
2023-05-28 22:57:32,285:INFO:catboost==1.2
2023-05-28 22:57:32,285:INFO:mlflow==2.3.1
2023-05-28 22:57:32,285:INFO:Checking Exceptions
2023-05-28 22:58:20,970:INFO:PyCaret Supervised Module
2023-05-28 22:58:20,970:INFO:ML Usecase: classification
2023-05-28 22:58:20,970:INFO:version 2.2.3
2023-05-28 22:58:20,971:INFO:Initializing setup()
2023-05-28 22:58:20,971:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['obj_type', 'info', 'notation', 'or_src_id', 'Province', 'Municipio'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['damage_gra', 'population', 'income', 'total_sales', 'second_sales', 'water_access', 'elec_cons', 'building_perm', 'land_permited', 'labour_fource', 'unemployment', 'agricultural', 'life_time', 'hb_per100000', 'fertility', 'hh_size', 'latitude', 'longitude', 'nearest_fault_distance_km', 'nearest_eq_distance_km', 'Longitude', 'Latitude', 'eclass_public', 'eclass_private', 'eclass_total', 'enumber_public', 'enumber_private', 'enumber_total', 'e_male_public', 'e_female_public', 'e_total_public', 'e_male_private', 'e_female_private', 'e_total_private', 'e_total', 'et_male_public', 'et_female_public', 'et_total_public', 'et_male_private', 'et_total_private', 'et_total', 'hclass_public', 'hclass_private', 'hclass_total', 'hnumber_public', 'hnumber_private', 'hnumber_total', 'h_male_public', 'h_female_public', 'h_total_public', 'h_male_private', 'h_female_private', 'h_total_private', 'h_total', 'hs_religious_male_public', 'hs_religious_female_public', 'hs_religious_total_public', 'hs_religious_male_private', 'hs_religious_female_private', 'hs_religious_total_private', 'hs_religious_total', 'h_male_occupational_public', 'h_female_occupational_public', 'h_total_occupational_public', 'h_male_occupational_private', 'h_male_occupational_private_1', 'h_total_ocupational_private', 'h_occupational_total', 'h_male_normal_public', 'h_female_normal_public', 'h_total_normal_public', 'h_male_normal_private', 'h_female_normal_private', 'h_total_normal_private', 'h_normal_total', 'ht_male_public', 'ht_female_public', 'ht_total_public', 'ht_male_private', 'ht_female_private', 'ht_total_private', 'ht_toplam', 'mclass_public', 'mclass_private', 'mclass_total', 'mnumber_public', 'mnumber_private', 'mnumber_total', 'm_male_public', 'm_female_public', 'm_total_public', 'm_male_private', 'm_female_private', 'm_total_private', 'm_total', 'mt_male_public', 'mt_female_public', 'mt_total_public', 'mt_male_private', 'mt_female_private', 'mt_total_private', 'mt_total', 'pclass_public', 'pclass_private', 'pclass_toplam', 'pnumber_public', 'pnumber_private', 'pnumber_total', 'p_male_public', 'p_female_public', 'p_total_public', 'p_male_private', 'p_female_private', 'p_total_private', 'p_total', 'pt_male_public', 'pt_female_public', 'pt_total_public', 'pt_male_private', 'pt_female_private', 'pt_total_private', 'pt_total'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 22:58:20,972:INFO:Checking environment
2023-05-28 22:58:20,972:INFO:python_version: 3.10.11
2023-05-28 22:58:20,972:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 22:58:20,972:INFO:machine: x86_64
2023-05-28 22:58:20,972:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 22:58:20,973:INFO:Memory: svmem(total=16378343424, available=8471752704, percent=48.3, used=6187569152, free=1651798016, active=3886026752, inactive=9041580032, buffers=543698944, cached=7995277312, shared=1368797184, slab=946003968)
2023-05-28 22:58:20,973:INFO:Physical Core: 10
2023-05-28 22:58:20,973:INFO:Logical Core: 16
2023-05-28 22:58:20,973:INFO:Checking libraries
2023-05-28 22:58:20,973:INFO:pd==1.5.3
2023-05-28 22:58:20,973:INFO:numpy==1.24.3
2023-05-28 22:58:20,973:INFO:sklearn==1.2.2
2023-05-28 22:58:20,973:INFO:xgboost==1.7.3
2023-05-28 22:58:20,973:INFO:lightgbm==3.3.5
2023-05-28 22:58:20,973:INFO:catboost==1.2
2023-05-28 22:58:20,973:INFO:mlflow==2.3.1
2023-05-28 22:58:20,974:INFO:Checking Exceptions
2023-05-28 23:00:03,072:INFO:PyCaret Supervised Module
2023-05-28 23:00:03,072:INFO:ML Usecase: classification
2023-05-28 23:00:03,073:INFO:version 2.2.3
2023-05-28 23:00:03,073:INFO:Initializing setup()
2023-05-28 23:00:03,073:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['obj_type', 'info', 'notation', 'or_src_id', 'Province', 'Municipio'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['population', 'income', 'total_sales', 'second_sales', 'water_access', 'elec_cons', 'building_perm', 'land_permited', 'labour_fource', 'unemployment', 'agricultural', 'life_time', 'hb_per100000', 'fertility', 'hh_size', 'latitude', 'longitude', 'nearest_fault_distance_km', 'nearest_eq_distance_km', 'Longitude', 'Latitude', 'eclass_public', 'eclass_private', 'eclass_total', 'enumber_public', 'enumber_private', 'enumber_total', 'e_male_public', 'e_female_public', 'e_total_public', 'e_male_private', 'e_female_private', 'e_total_private', 'e_total', 'et_male_public', 'et_female_public', 'et_total_public', 'et_male_private', 'et_total_private', 'et_total', 'hclass_public', 'hclass_private', 'hclass_total', 'hnumber_public', 'hnumber_private', 'hnumber_total', 'h_male_public', 'h_female_public', 'h_total_public', 'h_male_private', 'h_female_private', 'h_total_private', 'h_total', 'hs_religious_male_public', 'hs_religious_female_public', 'hs_religious_total_public', 'hs_religious_male_private', 'hs_religious_female_private', 'hs_religious_total_private', 'hs_religious_total', 'h_male_occupational_public', 'h_female_occupational_public', 'h_total_occupational_public', 'h_male_occupational_private', 'h_male_occupational_private_1', 'h_total_ocupational_private', 'h_occupational_total', 'h_male_normal_public', 'h_female_normal_public', 'h_total_normal_public', 'h_male_normal_private', 'h_female_normal_private', 'h_total_normal_private', 'h_normal_total', 'ht_male_public', 'ht_female_public', 'ht_total_public', 'ht_male_private', 'ht_female_private', 'ht_total_private', 'ht_toplam', 'mclass_public', 'mclass_private', 'mclass_total', 'mnumber_public', 'mnumber_private', 'mnumber_total', 'm_male_public', 'm_female_public', 'm_total_public', 'm_male_private', 'm_female_private', 'm_total_private', 'm_total', 'mt_male_public', 'mt_female_public', 'mt_total_public', 'mt_male_private', 'mt_female_private', 'mt_total_private', 'mt_total', 'pclass_public', 'pclass_private', 'pclass_toplam', 'pnumber_public', 'pnumber_private', 'pnumber_total', 'p_male_public', 'p_female_public', 'p_total_public', 'p_male_private', 'p_female_private', 'p_total_private', 'p_total', 'pt_male_public', 'pt_female_public', 'pt_total_public', 'pt_male_private', 'pt_female_private', 'pt_total_private', 'pt_total'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 23:00:03,074:INFO:Checking environment
2023-05-28 23:00:03,074:INFO:python_version: 3.10.11
2023-05-28 23:00:03,074:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 23:00:03,074:INFO:machine: x86_64
2023-05-28 23:00:03,074:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 23:00:03,074:INFO:Memory: svmem(total=16378343424, available=8485801984, percent=48.2, used=6210211840, free=1659207680, active=3814150144, inactive=9037352960, buffers=544415744, cached=7964508160, shared=1332101120, slab=945942528)
2023-05-28 23:00:03,075:INFO:Physical Core: 10
2023-05-28 23:00:03,075:INFO:Logical Core: 16
2023-05-28 23:00:03,075:INFO:Checking libraries
2023-05-28 23:00:03,075:INFO:pd==1.5.3
2023-05-28 23:00:03,075:INFO:numpy==1.24.3
2023-05-28 23:00:03,075:INFO:sklearn==1.2.2
2023-05-28 23:00:03,075:INFO:xgboost==1.7.3
2023-05-28 23:00:03,075:INFO:lightgbm==3.3.5
2023-05-28 23:00:03,075:INFO:catboost==1.2
2023-05-28 23:00:03,075:INFO:mlflow==2.3.1
2023-05-28 23:00:03,075:INFO:Checking Exceptions
2023-05-28 23:01:31,557:INFO:PyCaret Supervised Module
2023-05-28 23:01:31,557:INFO:ML Usecase: classification
2023-05-28 23:01:31,557:INFO:version 2.2.3
2023-05-28 23:01:31,557:INFO:Initializing setup()
2023-05-28 23:01:31,558:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['obj_type', 'info', 'notation', 'or_src_id', 'Province', 'Municipio'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['population', 'income', 'total_sales', 'second_sales', 'water_access', 'elec_cons', 'building_perm', 'land_permited', 'labour_fource', 'unemployment', 'agricultural', 'life_time', 'hb_per100000', 'fertility', 'hh_size', 'latitude', 'longitude', 'nearest_fault_distance_km', 'nearest_eq_distance_km', 'Longitude', 'Latitude', 'eclass_public', 'eclass_private', 'eclass_total', 'enumber_public', 'enumber_private', 'enumber_total', 'e_male_public', 'e_female_public', 'e_total_public', 'e_male_private', 'e_female_private', 'e_total_private', 'e_total', 'et_male_public', 'et_female_public', 'et_total_public', 'et_male_private', 'et_total_private', 'et_total', 'hclass_public', 'hclass_private', 'hclass_total', 'hnumber_public', 'hnumber_private', 'hnumber_total', 'h_male_public', 'h_female_public', 'h_total_public', 'h_male_private', 'h_female_private', 'h_total_private', 'h_total', 'hs_religious_male_public', 'hs_religious_female_public', 'hs_religious_total_public', 'hs_religious_male_private', 'hs_religious_female_private', 'hs_religious_total_private', 'hs_religious_total', 'h_male_occupational_public', 'h_female_occupational_public', 'h_total_occupational_public', 'h_male_occupational_private', 'h_male_occupational_private_1', 'h_total_ocupational_private', 'h_occupational_total', 'h_male_normal_public', 'h_female_normal_public', 'h_total_normal_public', 'h_male_normal_private', 'h_female_normal_private', 'h_total_normal_private', 'h_normal_total', 'ht_male_public', 'ht_female_public', 'ht_total_public', 'ht_male_private', 'ht_female_private', 'ht_total_private', 'ht_toplam', 'mclass_public', 'mclass_private', 'mclass_total', 'mnumber_public', 'mnumber_private', 'mnumber_total', 'm_male_public', 'm_female_public', 'm_total_public', 'm_male_private', 'm_female_private', 'm_total_private', 'm_total', 'mt_male_public', 'mt_female_public', 'mt_total_public', 'mt_male_private', 'mt_female_private', 'mt_total_private', 'mt_total', 'pclass_public', 'pclass_private', 'pclass_toplam', 'pnumber_public', 'pnumber_private', 'pnumber_total', 'p_male_public', 'p_female_public', 'p_total_public', 'p_male_private', 'p_female_private', 'p_total_private', 'p_total', 'pt_male_public', 'pt_female_public', 'pt_total_public', 'pt_male_private', 'pt_female_private', 'pt_total_private', 'pt_total'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 23:01:31,558:INFO:Checking environment
2023-05-28 23:01:31,558:INFO:python_version: 3.10.11
2023-05-28 23:01:31,558:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 23:01:31,558:INFO:machine: x86_64
2023-05-28 23:01:31,558:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 23:01:31,559:INFO:Memory: svmem(total=16378343424, available=8401969152, percent=48.7, used=6316417024, free=1574133760, active=3814653952, inactive=9125953536, buffers=544948224, cached=7942844416, shared=1309716480, slab=946008064)
2023-05-28 23:01:31,560:INFO:Physical Core: 10
2023-05-28 23:01:31,560:INFO:Logical Core: 16
2023-05-28 23:01:31,560:INFO:Checking libraries
2023-05-28 23:01:31,560:INFO:pd==1.5.3
2023-05-28 23:01:31,560:INFO:numpy==1.24.3
2023-05-28 23:01:31,560:INFO:sklearn==1.2.2
2023-05-28 23:01:31,560:INFO:xgboost==1.7.3
2023-05-28 23:01:31,560:INFO:lightgbm==3.3.5
2023-05-28 23:01:31,560:INFO:catboost==1.2
2023-05-28 23:01:31,560:INFO:mlflow==2.3.1
2023-05-28 23:01:31,560:INFO:Checking Exceptions
2023-05-28 23:03:29,382:INFO:PyCaret Supervised Module
2023-05-28 23:03:29,382:INFO:ML Usecase: classification
2023-05-28 23:03:29,382:INFO:version 2.2.3
2023-05-28 23:03:29,383:INFO:Initializing setup()
2023-05-28 23:03:29,383:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 23:03:29,383:INFO:Checking environment
2023-05-28 23:03:29,383:INFO:python_version: 3.10.11
2023-05-28 23:03:29,383:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 23:03:29,383:INFO:machine: x86_64
2023-05-28 23:03:29,383:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 23:03:29,383:INFO:Memory: svmem(total=16378343424, available=8536764416, percent=47.9, used=6242148352, free=1682583552, active=3840544768, inactive=8997195776, buffers=545755136, cached=7907856384, shared=1249198080, slab=946085888)
2023-05-28 23:03:29,383:INFO:Physical Core: 10
2023-05-28 23:03:29,384:INFO:Logical Core: 16
2023-05-28 23:03:29,384:INFO:Checking libraries
2023-05-28 23:03:29,384:INFO:pd==1.5.3
2023-05-28 23:03:29,384:INFO:numpy==1.24.3
2023-05-28 23:03:29,384:INFO:sklearn==1.2.2
2023-05-28 23:03:29,384:INFO:xgboost==1.7.3
2023-05-28 23:03:29,384:INFO:lightgbm==3.3.5
2023-05-28 23:03:29,384:INFO:catboost==1.2
2023-05-28 23:03:29,384:INFO:mlflow==2.3.1
2023-05-28 23:03:29,384:INFO:Checking Exceptions
2023-05-28 23:03:29,384:INFO:Declaring global variables
2023-05-28 23:03:29,384:INFO:USI: bf1b
2023-05-28 23:03:29,384:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 23:03:29,384:INFO:Preparing display monitor
2023-05-28 23:03:29,384:INFO:Preparing display monitor
2023-05-28 23:03:29,390:INFO:Importing libraries
2023-05-28 23:03:29,390:INFO:Copying data for preprocessing
2023-05-28 23:03:29,400:INFO:Declaring preprocessing parameters
2023-05-28 23:03:29,406:INFO:Creating preprocessing pipeline
2023-05-28 23:03:29,456:INFO:Preprocessing pipeline created successfully
2023-05-28 23:03:29,456:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 23:03:29,456:INFO:Creating global containers
2023-05-28 23:03:29,456:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-05-28 23:06:19,761:INFO:PyCaret Supervised Module
2023-05-28 23:06:19,761:INFO:ML Usecase: classification
2023-05-28 23:06:19,761:INFO:version 2.2.3
2023-05-28 23:06:19,761:INFO:Initializing setup()
2023-05-28 23:06:19,762:INFO:setup(target=damage_gra, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree'}, train_size=0.7, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=None, numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=True, normalize_method=zscore, transformation=True, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=10, fold_shuffle=True, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-05-28 23:06:19,762:INFO:Checking environment
2023-05-28 23:06:19,763:INFO:python_version: 3.10.11
2023-05-28 23:06:19,763:INFO:python_build: ('main', 'Apr 20 2023 19:02:41')
2023-05-28 23:06:19,763:INFO:machine: x86_64
2023-05-28 23:06:19,763:INFO:platform: Linux-5.19.0-42-generic-x86_64-with-glibc2.35
2023-05-28 23:06:19,763:INFO:Memory: svmem(total=16378343424, available=8556646400, percent=47.8, used=6144450560, free=1103474688, active=3859730432, inactive=9498873856, buffers=555155456, cached=8575262720, shared=1327026176, slab=975392768)
2023-05-28 23:06:19,764:INFO:Physical Core: 10
2023-05-28 23:06:19,764:INFO:Logical Core: 16
2023-05-28 23:06:19,764:INFO:Checking libraries
2023-05-28 23:06:19,764:INFO:pd==1.5.3
2023-05-28 23:06:19,764:INFO:numpy==1.24.3
2023-05-28 23:06:19,764:INFO:sklearn==1.2.2
2023-05-28 23:06:19,764:INFO:xgboost==1.7.3
2023-05-28 23:06:19,764:INFO:lightgbm==3.3.5
2023-05-28 23:06:19,764:INFO:catboost==1.2
2023-05-28 23:06:19,764:INFO:mlflow==2.3.1
2023-05-28 23:06:19,764:INFO:Checking Exceptions
2023-05-28 23:06:19,764:INFO:Declaring global variables
2023-05-28 23:06:19,764:INFO:USI: 672c
2023-05-28 23:06:19,764:INFO:pycaret_globals: {'logging_param', 'transform_target_method_param', 'log_plots_param', 'X', 'fold_generator', 'exp_name_log', 'create_model_container', 'transform_target_param', 'prep_pipe', 'stratify_param', 'seed', 'fix_imbalance_param', 'iterative_imputation_iters_param', 'USI', 'fold_param', 'display_container', 'y_test', 'experiment__', '_ml_usecase', '_gpu_n_jobs_param', '_internal_pipeline', 'master_model_container', 'gpu_param', 'fix_imbalance_method_param', 'pycaret_globals', 'fold_groups_param', 'data_before_preprocess', 'n_jobs_param', 'target_param', 'X_train', '_all_models_internal', 'X_test', 'imputation_regressor', '_all_models', 'imputation_classifier', 'y', '_available_plots', 'fold_shuffle_param', 'y_train', '_all_metrics', 'html_param'}
2023-05-28 23:06:19,764:INFO:Preparing display monitor
2023-05-28 23:06:19,764:INFO:Preparing display monitor
2023-05-28 23:06:19,772:INFO:Importing libraries
2023-05-28 23:06:19,772:INFO:Copying data for preprocessing
2023-05-28 23:06:19,781:INFO:Declaring preprocessing parameters
2023-05-28 23:06:19,785:INFO:Creating preprocessing pipeline
2023-05-28 23:06:19,819:INFO:Preprocessing pipeline created successfully
2023-05-28 23:06:19,819:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-05-28 23:06:19,819:INFO:Creating global containers
2023-05-28 23:06:19,819:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
